{"version":3,"sources":["Components/Viewer/RLottie.js"],"names":["RLottie","this","props","options","eventListeners","loop","autoplay","animationData","stringData","queueLength","container","el","Boolean","window","loadAnimation","anim","hasFirstFrame","forEach","eventName","callback","registerEvents","prevProps","prevState","snapshot","prevOptions","prevEventListeners","fileId","unregisterEvents","destroy","url","blob","play","segments","forceFlag","playSegments","isPaused","pause","addEventListener","removeEventListener","width","height","ariaRole","ariaLabel","title","onClick","onMouseEnter","onMouseOut","lottieStyles","overflow","outline","style","role","aria-label","tabIndex","ref","c","className","React","Component"],"mappings":"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","file":"static/js/0.c444ffc9.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RLottie.css';\r\n\r\nclass RLottie extends React.Component {\r\n    componentDidMount() {\r\n        const { options, eventListeners } = this.props;\r\n\r\n        const {\r\n            loop,\r\n            autoplay,\r\n            animationData,\r\n            stringData,\r\n            queueLength\r\n        } = options;\r\n\r\n        this.options = {\r\n            container: this.el,\r\n            loop: Boolean(loop),\r\n            autoplay: Boolean(autoplay),\r\n            animationData,\r\n            stringData,\r\n            queueLength\r\n        };\r\n\r\n        this.options = { ...this.options, ...options };\r\n        window.RLottie.loadAnimation(this.options, anim => {\r\n            this.anim = anim;\r\n\r\n            if (window.RLottie.hasFirstFrame(this.anim)) {\r\n                if (!eventListeners) return;\r\n\r\n                eventListeners.forEach(({ eventName, callback }) => {\r\n                    if (eventName === 'firstFrame') {\r\n                        callback && callback();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        this.registerEvents(eventListeners);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { options, eventListeners } = this.props;\r\n        const { options: prevOptions, eventListeners: prevEventListeners } = prevProps\r\n\r\n        // const data = options.animationData;\r\n        // const prevData = prevOptions.animationData;\r\n        // const fileId = options.fileId;\r\n        // const prevFileId = prevOptions.fileId;\r\n        if (options.animationData !== prevOptions.animationData || options.fileId !== prevOptions.fileId) {\r\n            // console.log('[RLottie] update', [fileId, data], [prevFileId, prevData], [options.animationData !== prevOptions.animationData, options.fileId !== prevOptions.fileId])\r\n            this.unregisterEvents(prevEventListeners);\r\n            this.destroy();\r\n\r\n            this.options = { ...this.options, ...options };\r\n            // console.log('[RLottie] update loadAnimation start', [fileId, data]);\r\n            const url = this.props.options.url;\r\n            window.RLottie.loadAnimation(this.options, anim => {\r\n                this.anim = anim;\r\n                // console.log('[RLottie] update loadAnimation stop', anim, [fileId, data]);\r\n                // if (this.props.options.url === url) {\r\n                //     this.anim = anim;\r\n                // } else {\r\n                //     window.RLottie.destroy(anim);\r\n                // }\r\n                if (!eventListeners) return;\r\n\r\n                eventListeners.forEach(({ eventName, callback }) => {\r\n                    if (eventName === 'firstFrame') {\r\n                        callback && callback();\r\n                    }\r\n                });\r\n            });\r\n            this.registerEvents(eventListeners);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unregisterEvents(this.props.eventListeners);\r\n        this.destroy();\r\n        this.options.blob = null;\r\n        this.options.container = null;\r\n        this.options = null;\r\n        this.anim = null;\r\n    }\r\n\r\n    play() {\r\n        // console.log('[Rlottie] play');\r\n        window.RLottie.play(this.anim);\r\n        // this.anim.play();\r\n    }\r\n\r\n    playSegments(segments, forceFlag) {\r\n        window.RLottie.playSegments(this.anim, segments, forceFlag);\r\n        // this.anim.playSegments(segments, forceFlag);\r\n    }\r\n\r\n    get isPaused() {\r\n        if (!this.anim) {\r\n            return false;\r\n        }\r\n\r\n        return window.RLottie.isPaused(this.anim);\r\n    }\r\n\r\n    pause() {\r\n        if (!window.RLottie.isPaused(this.anim)) {\r\n            window.RLottie.pause(this.anim);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    destroy() {\r\n        // console.log('[RLottie] destroy', this.anim);\r\n        if (!this.anim) return;\r\n\r\n        window.RLottie.destroy(this.anim);\r\n        // this.anim.destroy();\r\n    }\r\n\r\n    registerEvents(eventListeners) {\r\n        // console.log('[Rlottie] registerEvents', [this.anim, eventListeners]);\r\n\r\n        if (!this.anim) return;\r\n\r\n        if (!eventListeners) return;\r\n\r\n        eventListeners.forEach(({ eventName, callback }) => {\r\n            window.RLottie.addEventListener(this.anim, eventName, callback);\r\n        });\r\n    }\r\n\r\n    unregisterEvents(eventListeners) {\r\n        if (!this.anim) return;\r\n\r\n        if (!eventListeners) return;\r\n\r\n        eventListeners.forEach(({ eventName, callback }) => {\r\n            window.RLottie.removeEventListener(this.anim, eventName, callback);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            width,\r\n            height,\r\n            ariaRole,\r\n            ariaLabel,\r\n            title,\r\n            onClick,\r\n            onMouseEnter,\r\n            onMouseOut,\r\n            style\r\n        } = this.props;\r\n\r\n        const lottieStyles = {\r\n            width: width || '100%',\r\n            height: height || '100%',\r\n            overflow: 'hidden',\r\n            // margin: '0 auto',\r\n            outline: 'none',\r\n            ...style\r\n        };\r\n\r\n        return (\r\n            <div\r\n                style={lottieStyles}\r\n                title={title}\r\n                role={ariaRole}\r\n                aria-label={ariaLabel}\r\n                tabIndex='0'\r\n                onClick={onClick}\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseOut={onMouseOut}\r\n            >\r\n                <picture\r\n                    ref={c => this.el = c}\r\n                    className='dev_page_tgsticker tl_main_card_animated js-tgsticker_image'>\r\n                </picture>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRLottie.propTypes = {\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    options: PropTypes.object\r\n};\r\n\r\nexport default RLottie;"],"sourceRoot":""}