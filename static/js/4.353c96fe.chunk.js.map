{"version":3,"sources":["Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/ChatTabs.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/SetNickname.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/AddMember.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Components/MainPage.js","Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js"],"names":["withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","this","props","React","Component","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","duration","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","Math","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","setState","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","state","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","TdLibController","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","prevProps","prevState","snapshot","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","time","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","id","className","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","min","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","withTranslation","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","sprintf","args","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","send","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","x","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","for_comment","result","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","forEach","targetChatId","AppStore","invokeScheduledAction","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","createSvgIcon","d","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onReceiveUpdateNewPermission","online_member_count","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","getChatId","isPrivateChat00","isPrivateChat","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","permissionsFilter","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","stop","Animator","from","scrollLeft","to","offsetWidth","func","start","handleFilterClick","isCurUserAdmin","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","amAdmin","isAdmin","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","nextContext","openMedia","minithumbnail","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","sticker","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","sender","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","ChatTabs","filterKeywordDialog","filterKeyword","defaultKeyword","admin","permissions","banSendDmMention","banSendKeyword","banSendQRcode","banSendWebLink","banWhisper","kickWhoSendKeyword","showKickMessage","chatPermissions","can_add_web_page_previews","can_change_info","can_invite_users","can_pin_messages","can_send_media_messages","can_send_messages","can_send_other_messages","can_send_polls","chatPublic","openToast","muteMembers","muteMembersDialog","handleOpenToast","handleCloseToast","onOpenDialog","handleMenuClose","permissionsDialog","onCloseDialog","getChatPermissions","then","err","log","getBannedRightex","that","chatId1","toString","slice","getAdmin","JSON","stringify","newResult","parse","getChatPublic","handleChangeChatPublic","supergroupId","getSupergroupId","finally","handleChangeBanWhisper","UpdateNewPermission","handleChangeBanSendWebLink","handleChangeBanSendQRcode","handleChangeBanSendKeyword","handleChangeBanSendDmMention","handleChangeKickWhoSendKeyword","handleChangeShowKickMessage","handleChangeCanSendMedia","onUpdateChatPermissions","handleChangeCanSendMessage","handleChangeCanInviteUsers","isSuper","fixChatId","per","newPermissions","keywords","keyword","onClosefilterKeywordDialog","onChangeTextfiledValue","onSavefilterKeyword","keywordArr","Array","isArray","pop","onGetMuteMembers","onOpenMuteMembersDialog","onCloseMuteMembersDialog","Switch","defaultChecked","Divider","TextField","helperText","rows","defaultValue","multiline","List","idx","User","userId","Snackbar","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","source","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","sender_user_id","from_message_id","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","SetNickname","onOpenNicknameDialog","nicknameDialog","onGetUsername","uid","editNickname","nickname","onCloseNicknameDialog","onChangeNickname","onSaveNickname","enent","prevNickname","paddingRight","handleOpenChat","paddingLeft","propTypes","PropTypes","string","isRequired","ChatDetails","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","user","name","first_name","onGetPublicLink","invite_link","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","onScroll","wordWrap","toUpperCase","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","number","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","news","match","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","sin","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","localStorage","getItem","setItem","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","saveInternal","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","options","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","_m","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","shift","replaceChats","appendChats","newChats","_chats","_c","ids","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","location","reload","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","requestAnimationFrame","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","join","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","now","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","startTime","onClientUpdateRecordStop","onClientUpdateRecordError","n","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","alert","handleEmojiSelect","emoji","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","status","is_member","handleButtonClick","handleChatInfo","openChatDetails","handleManageGroupClose","openDialogs","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","canClearHistory","unpinMessage","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","PaperProps","backgroundColor","Broom","AddMember","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","displaySize","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","every","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","MessageContext","createContext","withMessage","MessageComponent","Consumer","joinDialog","groupCode","joinChatId","meInGroup","handleCallbackQueryAnswer","via_bot_user_id","show_alert","game","LStore","getString","showAlert","ok","showSnackbar","showOpenGameAlert","is_verified","showOpenUrlAlert","ask","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","password","onError","forward_text","button_id","skip_confirm","showRequestUrlAlert","buttonId","in_current_chat","inline","setText","openChatSelect","onPrepareJoin","url00","splitUrl","isGroup","checkMeInGroup","isFind","onOpenMeInGroupDialog","onCloseMeInGroupDialog","onOpenChat","onConfirmOpen","onConfirmJoin","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","StickerSourceEnum","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","StickerPreview","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","AlertDialog","BlockSenderDialog","reportSpam","handleReportSpamChange","handleDeleteChatChange","reportText","getChatLocation","address","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","InputPasswordDialog","handleClickShowPassword","showPassword","getErrorMessage","passwordHint","password_hint","errorMessage","InputLabel","htmlFor","Input","endAdornment","InputAdornment","FormHelperText","LeaveChatDialog","getDeleteDialogText","OpenGameDialog","OpenUrlDialog","overflowWrap","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","bot_user_id","request_write_access","text1","entities1","option1","option2","text2","entities2","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateOpenGameAlert","handleOpenGameContinue","onClientUpdateOpenUrlAlert","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","onClientUpdateAlert","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","undo","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","addScheduledAction","persist","removeScheduledAction","pinMessageAction","unpinMessageAction","unpinAllMessages","handleAlertContinue","sharedPreferences","existing","addHash","encodeURIComponent","chars","Uint8Array","crypto","getRandomValues","curHash","openGameInBrowser","handleRequestUrlContinue","allow_write_access","handleInputPasswordContinue","handleBlockSenderContinue","blockSender","reason","reportChat","MainPage","onSetDocumentTitle","onGetPermission","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","onUpdateNewPermission","currentDialogChatId","gerPermissions","isShow","dialogDetailsRef","withLanguage","stopped","startInternal","timeStamp","endTime","draw","last","p","val","outSine","cancelAnimationFrame","PI","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","PREVIEW"],"mappings":"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","file":"static/js/4.353c96fe.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\r\nimport FullScreen from '../../Assets/Icons/FullScreen';\r\nimport Hint from './Hint';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\nimport { clamp, getDurationString } from '../../Utils/Common';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport {\r\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\r\n    PLAYER_PLAYBACKRATE_MIN,\r\n    PLAYER_PLAYBACKRATE_STEP,\r\n    PLAYER_SEEK_STEP_BIG,\r\n    PLAYER_SEEK_STEP_SMALL,\r\n    PLAYER_VOLUME_MAX,\r\n    PLAYER_VOLUME_MIN,\r\n    PLAYER_VOLUME_STEP\r\n} from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PipPlayer.css';\r\n\r\nclass PipPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.state = { };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\r\n        if (state.prevVideo !== video) {\r\n            return {\r\n                prevVideo: video,\r\n                duration,\r\n                currentTime,\r\n                volume,\r\n                play,\r\n                buffered,\r\n                waiting,\r\n                dragging: false,\r\n                hidden: false,\r\n                fullscreen: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { video } = this.props;\r\n        this.connectPlayer(video);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { video } = this.props;\r\n        this.disconnectPlayer(video);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onClientUpdateMediaShortcut = update => {\r\n        const { event } = update;\r\n        if (!event) return;\r\n\r\n        this.onKeyDown(event);\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        let handled = false;\r\n        switch (code) {\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClose();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyJ': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyL': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Space':\r\n            case 'KeyK': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClick();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyM': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleMute();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyF': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleFullScreen();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyI': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    // this.handlePictureInPicture();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Digit0':\r\n            case 'Digit1':\r\n            case 'Digit2':\r\n            case 'Digit3':\r\n            case 'Digit4':\r\n            case 'Digit5':\r\n            case 'Digit6':\r\n            case 'Digit7':\r\n            case 'Digit8':\r\n            case 'Digit9': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\r\n                    this.handleSeekProgress(progress);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Home': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'End': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.duration - 1.0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Comma': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Period': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (handled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    showMediaHint(text) {\r\n        const { fileId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaHint',\r\n            fileId,\r\n            text\r\n        });\r\n    }\r\n\r\n    handleVolume = volume => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\r\n\r\n        video.volume = volume;\r\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\r\n    };\r\n\r\n    handlePlaybackRate = rate => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\r\n\r\n        video.playbackRate = rate;\r\n        this.showMediaHint(`${rate}x`);\r\n    };\r\n\r\n    handleSeekProgress = progress => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(progress * video.duration);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n        this.setState({ currentTime });\r\n    };\r\n\r\n    onFullScreenChange = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\r\n        const fullscreen = fullscreenElement === fullscreenPlayer;\r\n\r\n        this.setState({\r\n            fullscreen\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('pip-player');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { video } = this.props;\r\n\r\n        if (prevProps.video !== video) {\r\n            this.disconnectPlayer(prevProps.video)\r\n            this.connectPlayer(video);\r\n        }\r\n    }\r\n\r\n    connectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        const pipPlayer = document.getElementById('pip-player');\r\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\r\n        pipPlayer.style.left = left + 'px';\r\n        pipPlayer.style.top = top + 'px';\r\n\r\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\r\n        pipPlayerWrapper.focus();\r\n\r\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\r\n\r\n        const container = document.getElementById('pip-player-container');\r\n        if (!container) return;\r\n\r\n        video.onloadedmetadata = this.handleLoadedMetadata;\r\n        video.onloadeddata = this.handleLoadedData;\r\n        video.oncanplay = this.handleCanPlay;\r\n        video.onplay = this.handlePlay;\r\n        video.onpause = this.handlePause;\r\n        video.onended = this.handleEnded;\r\n        video.ontimeupdate = this.handleTimeUpdate;\r\n        video.onvolumechange = this.handleVolumeChange;\r\n        video.onprogress = this.handleProgress;\r\n        video.onwaiting = this.handleWaiting;\r\n\r\n        container.innerHTML = '';\r\n        container.appendChild(video);\r\n    }\r\n\r\n    disconnectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        video.onloadedmetadata = null;\r\n        video.onloadeddata = null;\r\n        video.oncanplay = null;\r\n        video.onplay = null;\r\n        video.onpause = null;\r\n        video.onended = null;\r\n        video.ontimeupdate = null;\r\n        video.onvolumechange = null;\r\n        video.onprogress = null;\r\n        video.onwaiting = null;\r\n    }\r\n\r\n    handleLoadedData = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n    };\r\n\r\n    handleLoadedMetadata = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { currentTime } = this.state;\r\n        const { duration, volume, buffered } = video;\r\n        // const currentTime = this.getCurrentTime();\r\n\r\n        this.setState({\r\n            duration,\r\n            // currentTime,\r\n            volume,\r\n            waiting: true,\r\n            buffered\r\n        }, () => {\r\n            if (!currentTime) return;\r\n\r\n            video.currentTime = currentTime;\r\n        });\r\n    };\r\n\r\n    handleCanPlay = event => {\r\n        const { target: video } = event;\r\n\r\n        this.setState({\r\n            waiting: false\r\n        }, () => {\r\n            if (!video) return;\r\n\r\n            const { play } = this.state;\r\n            if (play) {\r\n                video.play();\r\n            } else {\r\n                video.pause();\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePlay = event => {\r\n        const { onPlay } = this.props;\r\n\r\n        this.setState({\r\n            play: true,\r\n            hidden: true\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\r\n        onPlay && onPlay(event);\r\n    };\r\n\r\n    handlePause = event => {\r\n        const { onPause } = this.props;\r\n\r\n        this.setState({\r\n            play: false,\r\n            hidden: false\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\r\n        onPause && onPause(event);\r\n    };\r\n\r\n    handleEnded = event => {\r\n        const { onEnded } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\r\n        onEnded && onEnded(event);\r\n\r\n        const { video } = this.props;\r\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\r\n    };\r\n\r\n    handleTimeUpdate = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n        const { currentTime, duration, volume, buffered } = video;\r\n\r\n        this.setState({\r\n            duration,\r\n            currentTime,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\r\n            fileId,\r\n            currentTime,\r\n            duration,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleVolumeChange = event => {\r\n        const { onVolumeChange } = this.props;\r\n\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { volume } = video;\r\n\r\n        this.setState({\r\n            volume\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\r\n        onVolumeChange && onVolumeChange(event);\r\n    };\r\n\r\n    handleProgress = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n\r\n        const { buffered } = video;\r\n\r\n        this.setState({\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerProgress',\r\n            fileId,\r\n            buffered\r\n        });\r\n    };\r\n\r\n    handleWaiting = () => {\r\n        this.setState({ waiting: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    startStopPlayer = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        const { waiting } = this.state;\r\n        if (waiting) {\r\n            this.setState({\r\n                play: !this.state.play,\r\n                hidden: false\r\n            });\r\n        } else {\r\n            if (video.paused) {\r\n                video.play()\r\n            } else {\r\n                video.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePlayerMouseDown = event => {\r\n        const pip = document.getElementById('pip-player-wrapper');\r\n        if (pip) pip.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        this.offsetX = event.nativeEvent.offsetX;\r\n        this.offsetY = event.nativeEvent.offsetY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.setState({\r\n            windowDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.setState({\r\n            windowDragging: false\r\n        });\r\n    };\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('pip-player');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        PlayerStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\r\n\r\n        const player = document.getElementById('pip-player');\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            draggingTime: video.currentTime\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            draggingTime: value * video.duration\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { dragging, draggingTime } = this.state;\r\n        if (!dragging) return;\r\n\r\n        this.setState({\r\n            dragging: false,\r\n            currentTime: draggingTime,\r\n            draggingTime: 0\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            if (Number.isFinite(draggingTime)) {\r\n                video.currentTime = draggingTime;\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePanelEnter = () => {\r\n        this.panelEnter = true;\r\n    };\r\n\r\n    handlePanelLeave = () => {\r\n        this.panelEnter = false;\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        this.mouseDownRoot = false;\r\n        const { hidden } = this.state;\r\n\r\n        if (hidden) {\r\n            this.setState({\r\n                hidden: false\r\n            });\r\n        }\r\n\r\n        clearTimeout(this.mouseOverTimeout);\r\n        this.mouseOverTimeout = setTimeout(() => {\r\n            if (this.panelEnter) return;\r\n            if (!this.state.play) return;\r\n            if (!this.state.duration) return;\r\n\r\n            this.setState({\r\n                hidden: true\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePictureInPicture',\r\n            videoInfo: null\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChange = (event, volume) => {\r\n        if (volume === this.state.volume) return;\r\n\r\n        this.setState({\r\n            volume\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            video.volume = volume;\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChangeCommitted = event => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    handleMute = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        if (video.volume === 0) {\r\n            video.volume = this.prevVolume || 0.5;\r\n        } else {\r\n            this.prevVolume = video.volume;\r\n            video.volume = 0;\r\n        }\r\n    }\r\n\r\n    handleFullScreen = event => {\r\n        event && event.stopPropagation();\r\n\r\n        const root = document.getElementById('pip-player-wrapper');\r\n        if (!root) return;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.requestFullscreen(root);\r\n    };\r\n\r\n    requestFullscreen(element) {\r\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n        method && method.call(element);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    getCurrentTime = () => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        return PlayerStore.getCurrentTime(unique_id);\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    handlePanelDoubleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClickRoot = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.startStopPlayer();\r\n    }\r\n\r\n    handleDoubleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.handleFullScreen(event);\r\n    };\r\n\r\n    handleFocus = () => {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    };\r\n\r\n    render() {\r\n        const { fileId } = this.props;\r\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\r\n\r\n        const time = dragging ? draggingTime : currentTime;\r\n        const value = duration > 0 ? time / duration : 0;\r\n        const bufferedTime = Player.getBufferedTime(time, buffered);\r\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\r\n\r\n        const timeString = getDurationString(Math.floor(time) || 0);\r\n        const durationString = getDurationString(Math.floor(duration) || 0);\r\n\r\n        const pictureInPictureEnabled = true;\r\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\r\n\r\n        return (\r\n            <div\r\n                id='pip-player'\r\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\r\n                onMouseDown={this.handlePlayerMouseDown}\r\n                onMouseMove={this.handleMouseOver}\r\n                onClick={this.handleClickRoot}\r\n                onDoubleClick={this.handleDoubleClick}>\r\n                <div\r\n                    id='pip-player-wrapper'\r\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    tabIndex={0}>\r\n                    <div id='pip-player-container'/>\r\n                    <Hint fileId={fileId}/>\r\n\r\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\r\n                        <CloseIcon/>\r\n                    </button>\r\n                    <div\r\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\r\n                        onClick={e => e.stopPropagation()}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onDoubleClick={this.handlePanelDoubleClick}\r\n                        onMouseEnter={this.handlePanelEnter}\r\n                        onMouseLeave={this.handlePanelLeave}>\r\n                        <div className='player-slider'>\r\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\r\n                            <Slider\r\n                                value={value}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                classes={{\r\n                                    root: 'player-slider-root',\r\n                                    rail: 'player-slider-rail',\r\n                                    track: 'player-slider-track',\r\n                                    thumb: 'player-slider-thumb',\r\n                                    active: 'player-slider-active'\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                onChangeCommitted={this.handleChangeCommitted}\r\n                                onMouseDown={this.handleMouseDown}\r\n                            />\r\n                        </div>\r\n                        <div className='player-controls'>\r\n                            <button className='player-button' onClick={this.handleClick}>\r\n                                {play ? <PauseIcon/> : <PlayIcon/>}\r\n                            </button>\r\n                            <div className='player-time'>\r\n                                {`${timeString} / ${durationString}`}\r\n                            </div>\r\n                            <div className='player-volume'>\r\n                                <Slider\r\n                                    value={volume}\r\n                                    min={0}\r\n                                    max={1}\r\n                                    step={0.001}\r\n                                    classes={{\r\n                                        root: 'player-volume-root',\r\n                                        rail: 'player-volume-rail',\r\n                                        track: 'player-volume-track',\r\n                                        thumb: 'player-volume-thumb',\r\n                                        active: 'player-volume-active'\r\n                                    }}\r\n                                    onChange={this.handleVolumeSliderChange}\r\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\r\n                                />\r\n                            </div>\r\n                            <button className='player-button' onClick={this.handleMute}>\r\n                                {Player.getVolumeIcon(volume)}\r\n                            </button>\r\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\r\n                                <FullScreen/>\r\n                            </button>\r\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\r\n                            {/*    <PictureInPictureIcon/>*/}\r\n                            {/*</button>*/}\r\n                        </div>\r\n                    </div>\r\n                    <Progress waiting={waiting}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPipPlayer.propTypes = {\r\n\r\n};\r\n\r\nexport default PipPlayer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nexport function sprintf(t, key, ...args) {\r\n    return t(key, { postProcess: 'sprintf', sprintf: args });\r\n}\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        this.targetChats.forEach(async targetChatId => {\r\n            if (inputMessageContent) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport {isPrivateChat } from '../../Utils/Chat';\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId),\r\n            online_member_count:0,\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        TdLibController.on('update', this.onReceiveUpdateNewPermission);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        TdLibController.off('update', this.onReceiveUpdateNewPermission); \r\n    }\r\n\r\n     //从服务器端接收  权限更新的推送。\r\n     onReceiveUpdateNewPermission = update => {   \r\n        switch (update['@type']) {\r\n            case 'updateChatPermissions':\r\n               \r\n                break;\r\n            case'updateNewCustomEvent': \r\n                break \r\n            case 'updateChatOnlineMemberCount': \r\n                this.setState({online_member_count:update.online_member_count});\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n     }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent ,online_member_count} = this.state;\r\n        const chatId = AppStore.getChatId();  \r\n        let isPrivateChat00 = false; \r\n        if (isPrivateChat(chatId)) {\r\n            isPrivateChat00 = true;\r\n        }\r\n        let text = \"\";\r\n        if(isPrivateChat00){\r\n            text = subtitle;\r\n        }else{\r\n            text = online_member_count + \"人在线\";\r\n        }\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                 \r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {text}\r\n                {/* {online_member_count}人在线 */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n * @Author: your name\r\n * @Date: 2022-01-16 14:44:46\r\n * @LastEditTime: 2022-02-16 16:25:42\r\n * @LastEditors: your name\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\telegram-react-1.6.10\\src\\Components\\Tile\\Chat.js\r\n */\r\n/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'> \r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\nimport './NotificationsListItem.css';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>\r\n                    <Checkbox\r\n                        className='notifications-checkbox'\r\n                        edge='start'\r\n                        checked={!isMuted}\r\n                        color='primary'\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        onChange={this.handleSetChatNotifications}\r\n                    />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\r\n                />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Animator from '../../../Utils/Animatior';\r\nimport { clamp, throttle } from '../../../Utils/Common';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaTabs.css';\r\nimport AppStore from '../../../Stores/ApplicationStore';\r\nimport { isAdmin,isPrivateChat } from '../../../Utils/Chat';  \r\nclass SharedMediaTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        this.state = { isCurUserAdmin:false }\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        this.setSelection();\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() { \r\n        this.unobserveResize();\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n     //进入页面时，接收到chatid，并获取相关数据。。。\r\n    componentWillReceiveProps (nextProps){\r\n       \r\n    } \r\n\r\n    onUpdateMessageContent = update => { \r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { chatId } = this.props;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaTab',\r\n                chatId,\r\n                index: selectedIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chatId, media } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId, index } = update;\r\n        if (chatId !== this.props.chatId) return; \r\n        this.setState({\r\n            selectedIndex: index\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { selectedIndex, isSmallWidth } = this.state;\r\n        if (selectedIndex === -1) return;\r\n\r\n        const padding = 3;\r\n\r\n        const scroll = this.filtersRef.current;\r\n\r\n        let item = null;\r\n        let left = 0;\r\n        const membersFilter = this.filterRef.get('members');  \r\n        if (selectedIndex === 0 && membersFilter) {\r\n            item = membersFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        } \r\n        \r\n        const permissionsFilter = this.filterRef.get('permissions');\r\n        if (selectedIndex === 7 && permissionsFilter) {\r\n            item = permissionsFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\r\n        if (selectedIndex === 1 && photoAndVideoFilter) {\r\n            item = photoAndVideoFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const documentFilter = this.filterRef.get('document');\r\n        if (selectedIndex === 2 && documentFilter) {\r\n            item = documentFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const audioFilter = this.filterRef.get('audio');\r\n        if (selectedIndex === 3 && audioFilter) {\r\n            item = audioFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const urlFilter = this.filterRef.get('url');\r\n        if (selectedIndex === 4 && urlFilter) {\r\n            item = urlFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\r\n        if (selectedIndex === 5 && voiceNoteFilter) {\r\n            item = voiceNoteFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\r\n        if (selectedIndex === 6 && groupsInCommonFilter) {\r\n            item = groupsInCommonFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n        const { chatId, onClick } = this.props;\r\n\r\n        onClick && onClick(event);\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTab',\r\n            chatId,\r\n            index: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon,isCurUserAdmin } = this.state;\r\n        //获取当前用户是否为admin \r\n        const chatId = AppStore.getChatId();\r\n        let amAdmin = isAdmin(chatId); \r\n        let isPrivateChat00 = false; \r\n        if (isPrivateChat(chatId)) {\r\n            isPrivateChat00 = true;\r\n        }   \r\n        const tabsCount =\r\n            (members.length > 0 ? 1 : 0) +\r\n            (photoAndVideo.length > 0 ? 1 : 0) +\r\n            (document.length > 0 ? 1 : 0) +\r\n            (audio.length > 0 ? 1 : 0) +\r\n            (url.length > 0 ? 1 : 0) +\r\n            (voiceNote.length > 0 ? 1 : 0) +\r\n            (groupsInCommon.length > 0 ? 1 : 0);\r\n\r\n        const hasSharedMedia =\r\n            members.length > 0\r\n            || photoAndVideo.length > 0\r\n            || document.length > 0\r\n            || audio.length > 0\r\n            || url.length > 0\r\n            || voiceNote.length > 0\r\n            || groupsInCommon.length > 0;\r\n\r\n        if (!hasSharedMedia) {\r\n            return null;\r\n        }\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className={classNames('tabs', 'shared-media-tabs')}>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\r\n                    {members.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('members', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\r\n                            <span>{t('GroupMembers')}</span>\r\n                        </div>\r\n                    )} \r\n                    {amAdmin && !isPrivateChat00 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('permissions', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 7})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 7)}>\r\n                            <span>权限管理</span> \r\n                        </div> \r\n                    )}\r\n                    {photoAndVideo.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\r\n                            <span>{t('SharedMediaTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {document.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('document', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\r\n                            <span>{t('SharedFilesTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {audio.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('audio', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\r\n                            <span>{t('SharedMusicTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {url.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('url', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\r\n                            <span>{t('SharedLinksTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {voiceNote.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('voiceNote', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\r\n                            <span>{t('SharedVoiceTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {groupsInCommon.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\r\n                            <span>{t('SharedGroupsTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSharedMediaTabs.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaTabs);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport DeleteIcon from '../../../Assets/Icons/Delete';\r\nimport ShareIcon from '../../../Assets/Icons/Share';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && (\r\n                        <MenuItem onClick={this.handleOpenMessage}>\r\n                            <ListItemIcon>\r\n                                <ChatBubbleOutlineOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('GoToMessage')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {can_be_forwarded && (\r\n                        <MenuItem onClick={this.handleForward}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Forward')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { photo, size, thumbnailSize } = props;\r\n        const { prevPhoto } = state;\r\n        if (photo !== prevPhoto) {\r\n            return {\r\n                prevPhoto: photo,\r\n\r\n                contextMenu: false,\r\n                left: 0,\r\n                top: 0,\r\n\r\n                photoSize: getSize(photo.sizes, size),\r\n                thumbSize: getSize(photo.sizes, thumbnailSize),\r\n                minithumbnail: photo.minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (photo !== nextProps.photo) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(SharedDocument);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { hasVideoNote } from '../../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedLinkTile.css';\r\n\r\nclass SharedLinkTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.file || thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        if (update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\r\n\r\n        return (\r\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\r\n                {hasSrc? (\r\n                    <img\r\n                        className={classNames(\r\n                            'shared-link-tile-photo',\r\n                            { 'shared-link-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                ) : (\r\n                    <span>{title}</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinkTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default SharedLinkTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport SharedLinkTile from './SharedLinkTile';\r\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\r\nimport { getFormattedText, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport { PHOTO_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (webPage !== nextProps.webPage) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextProps.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    static isValidEntity(entity) {\r\n        if (!entity) return false;\r\n\r\n        const { type } = entity;\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type['@type'] === 'textEntityTypeUrl' ||\r\n            type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let thumbnail = null;\r\n        let minithumbnail = null;\r\n        let content = null;\r\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\r\n            title: '',\r\n            description: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: []\r\n            },\r\n            photo: null,\r\n            animation: null,\r\n            audio: null,\r\n            document: null,\r\n            sticker: null,\r\n            video: null,\r\n            video_note: null,\r\n            url: ''\r\n        };\r\n\r\n        if (animation) {\r\n            minithumbnail = animation.minithumbnail;\r\n            thumbnail = animation.thumbnail;\r\n        } else if (audio) {\r\n            minithumbnail = audio.album_cover_minithumbnail;\r\n            thumbnail = audio.album_cover_thumbnail;\r\n        } else if (document) {\r\n            minithumbnail = document.minithumbnail;\r\n            thumbnail = document.thumbnail;\r\n        } else if (sticker) {\r\n            minithumbnail = sticker.minithumbnail;\r\n            thumbnail = sticker.thumbnail;\r\n        } else if (video) {\r\n            minithumbnail = video.minithumbnail;\r\n            thumbnail = video.thumbnail;\r\n        } else if (videoNote) {\r\n            minithumbnail = videoNote.minithumbnail;\r\n            thumbnail = videoNote.thumbnail;\r\n        }\r\n\r\n        if (!thumbnail && !minithumbnail && photo) {\r\n            minithumbnail = photo.minithumbnail;\r\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\r\n        }\r\n\r\n        let { text, caption } = message.content;\r\n        text = text || caption;\r\n        if (text) {\r\n            const { entities } = text;\r\n            if (entities && entities.length > 0) {\r\n                const longTextMaxLength = 40;\r\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\r\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\r\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\r\n\r\n                const nonEmptyUrlEntities = urlEntities\r\n                    .filter(x => {\r\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\r\n                        entityText = entityText.replace(/\\u200B/g,'');\r\n\r\n                        return entityText.length > 0;\r\n                    });\r\n\r\n                const links = nonEmptyUrlEntities.map((x, i) => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n\r\n                if (showLinks) {\r\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\r\n                            <div>{links}</div>\r\n                        </>);\r\n                } else {\r\n                    let d = description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && <div className='web-page-description'>{d}</div>}\r\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\r\n                        </>);\r\n                }\r\n\r\n                if (webPage) {\r\n                    title = title || this.getTitleFromUrl(url);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <SharedLinkTile\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        minithumbnail={minithumbnail}\r\n                        thumbnail={thumbnail}\r\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\r\n                    />\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n    caption: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (voiceNote !== nextProps.voiceNote) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                date={dateString}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, video, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (video !== nextProps.video) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';  \r\nimport AppStore from '../../Stores/ApplicationStore'; \r\nimport TdLibController from '../../Controllers/TdLibController'; \r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { modalManager } from '../../Utils/Modal'; \r\nimport Switch from '@material-ui/core/Switch';\r\nimport Divider from '@material-ui/core/Divider'; \r\nimport TextField from '@material-ui/core/TextField'; \r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport User from '../Tile/User';\r\nimport { isAdmin,getGroupChatMembers,getSupergroupId,getChatUsername } from '../../Utils/Chat'; \r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box sx={{ p: 3 }}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n\r\nclass ChatTabs extends React.Component {\r\n    state = {\r\n        value: 0,\r\n        filterKeywordDialog:false,\r\n          filterKeyword:[],\r\n          defaultKeyword:'',\r\n          admin:null,\r\n          permissions:{\r\n            banSendDmMention: false,\r\n            banSendKeyword: false,\r\n            banSendQRcode: false,\r\n            banSendWebLink: false,\r\n            banWhisper: false,\r\n            kickWhoSendKeyword: false,\r\n            showKickMessage: false,\r\n          }, \r\n          chatPermissions:{  \r\n            can_add_web_page_previews: false,\r\n            can_change_info: false,\r\n            can_invite_users: false,\r\n            can_pin_messages: false,\r\n            can_send_media_messages: false,\r\n            can_send_messages: false,\r\n            can_send_other_messages: false,\r\n            can_send_polls: false,\r\n          },\r\n          chatPublic:false,\r\n          vertical:'top',\r\n          horizontal:'center', \r\n          openToast:false,\r\n          muteMembers:[],\r\n          muteMembersDialog:false\r\n    };\r\n\r\n    handleOpenToast = () =>{\r\n      this.setState({openToast:true}); \r\n    }\r\n    handleCloseToast = () =>{\r\n      this.setState({openToast:false});\r\n    }\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    //进入页面时，接收到chatid，并获取相关数据。。。\r\n    componentWillReceiveProps (nextProps){ \r\n      this.getBannedRightex();\r\n      this.getChatPermissions(); \r\n      this.getChatPublic();\r\n      const chatId = AppStore.getChatId();\r\n      let getAdmin = isAdmin(chatId);\r\n      this.setState({admin:getAdmin});   \r\n    } \r\n\r\n     //打开权限管理弹窗。 必须加上 handleMenuClose 不然会报错，很严重的错！\r\n    onOpenDialog = ()=>{ \r\n      this.handleMenuClose();\r\n        this.setState({ permissionsDialog: true });\r\n    }\r\n    //关闭权限管理弹窗\r\n    onCloseDialog = ()=>{\r\n        this.setState({ permissionsDialog: false });\r\n    } \r\n\r\n    //获取服务器上的 禁止群聊/禁止发媒体文件/是否能邀请好友等功能\r\n    getChatPermissions = () =>{ \r\n        const chatId = AppStore.getChatId();\r\n        TdLibController.send({\r\n            '@type': 'getChat',\r\n            \"chat_id\": chatId, \r\n            })\r\n            .then(data => { \r\n                \r\n                if(data){\r\n                    if(data.permissions){  \r\n                        setTimeout(() => {\r\n                            this.setState({chatPermissions:data.permissions});  \r\n                        }, 50);\r\n                    }\r\n                }\r\n              \r\n            })\r\n            .catch(err => {   \r\n                console.log(\"err on get permissions\");\r\n        });   \r\n    }\r\n    \r\n    //获取服务器上的 权限管理， 禁止私聊等功能。。\r\n    getBannedRightex = () =>{   \r\n        const getChatId = AppStore.getChatId();\r\n        let that = this;\r\n        //let chatId = 1073742002;   \r\n        const chatId1 = getChatId;  \r\n        let chatId = Math.abs(chatId1);\r\n        chatId = chatId.toString(); \r\n        chatId = chatId.slice(3); \r\n        chatId = parseInt(chatId); \r\n        let getAdmin = isAdmin(chatId1);\r\n        that.setState({admin:getAdmin});\r\n        TdLibController.send({\r\n            '@type': 'sendCustomRequest',\r\n            \"method\": \"chats.getBannedRightex\",\r\n            \"parameters\":JSON.stringify({\"chatId\": chatId})\r\n            })\r\n            .then(data => { \r\n                if(data.result){\r\n                    let newResult = JSON.parse(data.result);  \r\n                    if(newResult.data){ \r\n                        that.setState({permissions: newResult.data})   \r\n                    }  \r\n                } \r\n            })\r\n            .catch(err => {  \r\n                console.log(\"err on get permissions\");\r\n        });  \r\n    } \r\n\r\n    //获取username，空则为私密群组，非空则为公开群组。\r\n    getChatPublic = () => { \r\n      const chatId = AppStore.getChatId();\r\n      let userName = getChatUsername(chatId); \r\n      if(userName != \"\"){\r\n        this.setState({chatPublic:true});\r\n      }else{\r\n        this.setState({chatPublic:false});\r\n      }  \r\n    }\r\n\r\n    handleChangeChatPublic = (event) =>{\r\n      let checked = event.target.checked;   \r\n      const chatId = AppStore.getChatId();\r\n      const supergroupId = getSupergroupId(chatId);  \r\n      TdLibController.send({ \r\n          \"@type\": \"toggleChannelPublic\", \r\n          \"supergroup_id\":   supergroupId,\r\n          \"is_public\": checked, \r\n      }).then(result =>{   \r\n          console.log(\"ok on update permissions\");\r\n      }).finally(() => {\r\n          \r\n      }).catch(e => {   \r\n          console.log(\"err on update permissions\");\r\n      }); \r\n    }\r\n\r\n    //当switch的checked发生变化时调用的函数。 禁止私聊switch 发生变化\r\n    handleChangeBanWhisper = (event) => { \r\n        let checked = event.target.checked;  \r\n        this.UpdateNewPermission('banWhisper',checked);  \r\n    };\r\n    //禁止发送网页链接 switch 发生变化\r\n    handleChangeBanSendWebLink = (event) => { \r\n        let checked = event.target.checked; \r\n        this.UpdateNewPermission('banSendWebLink',checked);  \r\n    };\r\n    //禁止发送二维码switch 发生变化\r\n    handleChangeBanSendQRcode = (event) => { \r\n        let checked = event.target.checked; \r\n        this.UpdateNewPermission('banSendQRcode',checked);  \r\n    }; \r\n    //禁止发送关键字switch 发生变化\r\n    handleChangeBanSendKeyword = (event) => { \r\n        let checked = event.target.checked; \r\n        this.UpdateNewPermission('banSendKeyword',checked);  \r\n    };\r\n    //禁止发送dm@switch 发生变化\r\n    handleChangeBanSendDmMention = (event) => { \r\n        let checked = event.target.checked; \r\n        this.UpdateNewPermission('banSendDmMention',checked);  \r\n    };   \r\n    //发送敏感词移出群聊switch 发生变化\r\n    handleChangeKickWhoSendKeyword = (event) => { \r\n        let checked = event.target.checked; \r\n        this.UpdateNewPermission('kickWhoSendKeyword',checked);  \r\n    };\r\n    //禁止发送消息switch 发生变化\r\n    handleChangeShowKickMessage = (event) => { \r\n        let checked = event.target.checked; \r\n        this.UpdateNewPermission('ShowKickMessage',checked);  \r\n    };  \r\n    //禁止发送媒体文件switch 发生变化\r\n    handleChangeCanSendMedia = (event) => { \r\n        let checked = event.target.checked; \r\n        this.onUpdateChatPermissions('canSendMedia',checked);  \r\n    };  \r\n    //禁止发送信息switch 发生变化\r\n    handleChangeCanSendMessage= (event) => { \r\n        let checked = event.target.checked; \r\n        this.onUpdateChatPermissions('canSendMessage',checked);  \r\n    };  \r\n    handleChangeCanInviteUsers = (event) => { \r\n        let checked = event.target.checked; \r\n        this.onUpdateChatPermissions('canInviteUsers',checked);  \r\n    };  \r\n\r\n    //修改权限----是否禁言/是否能发送媒体/是否能邀请好友。\r\n    onUpdateChatPermissions = (type,open) => {\r\n        \r\n        const {chatPermissions} = this.state;\r\n        switch(type){\r\n            case 'canSendMessage': \r\n                chatPermissions.can_send_messages = !open; \r\n                break;\r\n            case 'canSendMedia':\r\n                chatPermissions.can_send_media_messages = !open;\r\n                break;\r\n            case 'canInviteUsers':\r\n                chatPermissions.can_invite_users = open;\r\n                break;\r\n        } \r\n        const chatId1 = AppStore.getChatId(); \r\n        TdLibController.send({ \r\n            \"@type\": \"setChatPermissions\",\r\n            \"chat_id\": chatId1,\r\n            \"permissions\": {\r\n                \"@type\": \"chatPermissions\",\r\n                \"can_send_messages\": chatPermissions.can_send_messages ,\r\n                \"can_send_media_messages\": chatPermissions.can_send_media_messages ,\r\n                \"can_invite_users\":chatPermissions.can_invite_users\r\n        }\r\n        }).then(result =>{  \r\n            console.log(\"ok on update permissions\");\r\n        }).finally(() => {\r\n            \r\n        }).catch(e => {  \r\n            console.log(\"err on update permissions\");\r\n        }); \r\n    };\r\n\r\n    //修改权限---modifyBannedRightex里的相关权限。\r\n    UpdateNewPermission = (type,open) =>{\r\n        const {permissions} = this.state;\r\n        open = open;\r\n        switch(type){\r\n            case 'banWhisper':\r\n                permissions.banWhisper = open;\r\n                break;\r\n            case 'banSendWebLink':\r\n                permissions.banSendWebLink = open;\r\n                break; \r\n            case 'banSendQRcode':\r\n                permissions.banSendQRcode = open;\r\n                break;\r\n            case 'banSendKeyword':\r\n                permissions.banSendKeyword = open;\r\n                break; \r\n            case 'banSendDmMention':\r\n                permissions.banSendDmMention = open;\r\n                break; \r\n            case 'kickWhoSendKeyword':\r\n                permissions.kickWhoSendKeyword = open;\r\n                break; \r\n            case 'ShowKickMessage':\r\n                permissions.showKickMessage = open;\r\n                break; \r\n            default:\r\n                break;\r\n        } \r\n        const chatId1 = AppStore.getChatId();\r\n        let isSuper = false;\r\n        if(chatId1 > 0){ \r\n            isSuper = true;\r\n        }\r\n        let chatId = this.fixChatId(chatId1);\r\n        TdLibController.send({\r\n            '@type': 'sendCustomRequest',\r\n            \"method\": \"chats.modifyBannedRightex\", \r\n            \"parameters\":JSON.stringify({\r\n                \"chatId\": chatId,\r\n                \"isChannel\":isSuper,\r\n                banSendDmMention: permissions.banSendDmMention,\r\n                banSendKeyword: permissions.banSendKeyword,\r\n                banSendQRcode: permissions.banSendQRcode,\r\n                banSendWebLink: permissions.banSendWebLink,\r\n                banWhisper: permissions.banWhisper,\r\n                kickWhoSendKeyword: permissions.kickWhoSendKeyword,\r\n                showKickMessage: permissions.showKickMessage, \r\n            })  \r\n            })\r\n            .then(data => {  \r\n                \r\n            })\r\n            .catch(err => {   \r\n                console.log(\"err on update permissions\");\r\n        });  \r\n    }\r\n\r\n    //获取chatid      自定义的函数需要将chatid 去掉 负数\r\n    fixChatId = (chatId1) =>{\r\n        let chatId = Math.abs(chatId1);\r\n        chatId = chatId.toString(); \r\n        chatId = chatId.slice(3); \r\n        chatId = parseInt(chatId); \r\n        return chatId;\r\n    }\r\n\r\n    componentDidMount() {   \r\n      TdLibController.on('update', this.onReceiveUpdateNewPermission);   \r\n    }\r\n\r\n    componentWillUnmount() {  \r\n        TdLibController.off('update', this.onReceiveUpdateNewPermission); \r\n    } \r\n    //从服务器端接收  权限更新的推送。\r\n    onReceiveUpdateNewPermission = update => {   \r\n        switch (update['@type']) {\r\n            //监听聊天室的权限推送\r\n            case 'updateChatPermissions':\r\n                let per = update.permissions;  \r\n                let newPermissions = {};\r\n                newPermissions.can_send_media_messages = per.can_send_media_messages;\r\n                newPermissions.can_send_messages = per.can_send_messages;\r\n                newPermissions.can_invite_users = per.can_invite_users; \r\n                this.setState({chatPermissions:per});\r\n                break;\r\n            case'updateNewCustomEvent': {   \r\n                let event =JSON.parse(update.event); \r\n                if(event.action === \"chats.rights.onUpdate\"){\r\n                    let permissions = event.data;\r\n                    let newPermissions = {}; \r\n                    if(permissions){ \r\n                        newPermissions.banSendDmMention = permissions.banSendDmMention;\r\n                        newPermissions.banSendKeyword = permissions.banSendKeyword;\r\n                        newPermissions.banSendQRcode = permissions.banSendQRcode;\r\n                        newPermissions.banSendWebLink = permissions.banSendWebLink;\r\n                        newPermissions.banWhisper = permissions.banWhisper;\r\n                        newPermissions.kickWhoSendKeyword = permissions.kickWhoSendKeyword;\r\n                        newPermissions.showKickMessage = permissions.showKickMessage;\r\n                        this.setState({permissions:newPermissions});\r\n                    } \r\n                } \r\n                //监听敏感词发生变化时的推送\r\n                else if(event.action === \"chats.keywords.onUpdate\"){\r\n                    let keywords = event.data.keywords;\r\n                    this.setState({filterKeyword:keywords}) \r\n                }\r\n            }\r\n            default:\r\n                break;\r\n            }\r\n    }\r\n    //打开敏感词对话框 并获取敏感词\r\n    filterKeyword = () =>{\r\n        this.setState({filterKeywordDialog:true});\r\n        const chatId1 = AppStore.getChatId(); \r\n        let chatId = this.fixChatId(chatId1); \r\n\r\n        TdLibController.send({\r\n            '@type': 'sendCustomRequest',\r\n            \"method\": \"chats.getFilterKeywords\",\r\n            \"parameters\":JSON.stringify({\"chatId\": chatId})\r\n            })\r\n            .then(data => { \r\n                let result = JSON.parse(data.result);\r\n                let keyword = result.data;\r\n                this.setState({filterKeyword:keyword});  \r\n            })\r\n            .catch(err => {   \r\n                console.log(\"err on get permissions\");\r\n        });  \r\n    }\r\n    //关闭敏感词输入框   对话框\r\n    onClosefilterKeywordDialog = () =>{\r\n        this.setState({filterKeywordDialog:false});\r\n    }\r\n    //敏感词文本框的值发生变化时。\r\n    onChangeTextfiledValue = (event) => { \r\n        this.setState({filterKeyword:event.target.value});\r\n    }\r\n\r\n    //保存敏感词\r\n    onSavefilterKeyword = () =>{\r\n        let {filterKeyword} = this.state;\r\n        const chatId1 = AppStore.getChatId(); \r\n        let chatId = this.fixChatId(chatId1);  \r\n        let keywordArr=null; \r\n        if(!Array.isArray(filterKeyword)){\r\n          keywordArr = filterKeyword.split(\",\"); \r\n        } else{\r\n          keywordArr = filterKeyword;\r\n        }\r\n        if(keywordArr[keywordArr.length-1] === \"\"){\r\n            keywordArr.pop();\r\n        } \r\n        TdLibController.send({\r\n            '@type': 'sendCustomRequest',\r\n            \"method\": \"chats.setFilterKeywords\", \r\n            \"parameters\":JSON.stringify({\r\n                \"chatId\": chatId,\r\n                \"keywords\":keywordArr, \r\n            })  \r\n            })\r\n            .then(data => {   \r\n              this.handleOpenToast('保存成功');\r\n              this.onClosefilterKeywordDialog();\r\n            })\r\n            .catch(err => {   \r\n                this.onClosefilterKeywordDialog(); \r\n                this.handleOpenToast('保存失败，请稍后重试'); \r\n                console.log(\"err on update SavefilterKeyword\");\r\n        });  \r\n    }\r\n\r\n    \r\n    onGetMuteMembers = () =>{     \r\n      let {chatId} = this.props;\r\n      const supergroupId = getSupergroupId(chatId);  \r\n      TdLibController.send({\r\n        '@type': 'getSupergroupMembers',\r\n        \"supergroup_id\": supergroupId, \r\n        \"offset\":0,\r\n        \"limit\":200,\r\n        // \"@extra\":72,\r\n        \"filter\": {\r\n        \"@type\": \"supergroupMembersFilterRestricted\",\r\n        },\r\n        }).then(data => { \r\n          this.setState({muteMembers:data.members}) \r\n          this.onOpenMuteMembersDialog();\r\n\r\n        }).catch(err => {   \r\n          this.onOpenMuteMembersDialog(); \r\n          console.log(\"err on get permissions\");\r\n        });     \r\n    }\r\n\r\n    onOpenMuteMembersDialog = ()=>{\r\n      this.setState({muteMembersDialog:true});\r\n    }\r\n\r\n    onCloseMuteMembersDialog = ()=>{\r\n      this.setState({muteMembersDialog:false});\r\n    }\r\n\r\n    render() {\r\n        const {  chatId } = this.props;\r\n        const { \r\n          value,permissions ,\r\n          chatPermissions,\r\n          admin,\r\n          filterKeyword,\r\n          filterKeywordDialog,\r\n          muteMembersDialog,\r\n          muteMembers,\r\n          chatPublic,\r\n          vertical, horizontal, openToast\r\n        }\r\n        = this.state; \r\n         \r\n\r\n        return (\r\n            <>  \r\n                \r\n                  <div style={{padding:'15px'}}>\r\n                    <div className=\"left_right_align\"> \r\n                      <div className=\"allCenter mgr_30\">\r\n                        设置为公开群\r\n                      </div>    \r\n                      <Switch  key={chatPublic} defaultChecked={chatPublic} onChange={this.handleChangeChatPublic} handleChangeChatPublic/>\r\n                    </div>\r\n                    <div className=\"left_right_align\"> \r\n                        <div className=\"allCenter mgr_30\">\r\n                          群成员禁言\r\n                        </div>    \r\n                      <Switch key={!chatPermissions.can_send_messages} defaultChecked={!chatPermissions.can_send_messages} onChange={this.handleChangeCanSendMessage} />\r\n                    </div>\r\n                    <div className=\"left_right_align mgb_4\"> \r\n                      <div className=\"allCenter mgr_30\">\r\n                        被禁言成员列表\r\n                      </div>    \r\n                      <div>\r\n                        <Button onClick={this.onGetMuteMembers} color=\"secondary\">&gt;</Button>\r\n                      </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className=\"left_right_align\"> \r\n                        <div className=\"allCenter mgr_30\">\r\n                          禁止发送媒体\r\n                        </div>\r\n                      <Switch key={!chatPermissions.can_send_media_messages} defaultChecked={!chatPermissions.can_send_media_messages} onChange={this.handleChangeCanSendMedia}/>\r\n                    </div>\r\n                    <div className=\"left_right_align\"> \r\n                        <div className=\"allCenter mgr_30\">\r\n                          禁止发送链接\r\n                        </div>    \r\n                        <Switch key={permissions.banSendWebLink} defaultChecked={permissions.banSendWebLink} onChange={this.handleChangeBanSendWebLink} />\r\n                    </div>\r\n                    <div className=\"left_right_align\"> \r\n                      <div className=\"allCenter mgr_30\">\r\n                          禁止发送二维码\r\n                      </div>    \r\n                      <Switch  key={permissions.banSendQRcode} defaultChecked={permissions.banSendQRcode} onChange={this.handleChangeBanSendQRcode}/>\r\n                    </div>\r\n                    <div className=\"left_right_align\"> \r\n                      <div className=\"allCenter mgr_30\">\r\n                        禁止发送DM消息\r\n                      </div> \r\n                      <Switch  key={permissions.banSendDmMention} defaultChecked={permissions.banSendDmMention} onChange={this.handleChangeBanSendDmMention}/>\r\n                    </div>\r\n                          {/* <div className=\"left_right_align\"> \r\n                              <div className=\"allCenter mgr_30\">\r\n                                  禁止发送关键字\r\n                              </div> \r\n                              <Switch  key={permissions.banSendKeyword} defaultChecked={permissions.banSendKeyword} onChange={this.handleChangeBanSendKeyword}/>\r\n                          </div> */}\r\n                    <div className=\"left_right_align mgb_4\" > \r\n                        <div className=\"allCenter mgr_30\">\r\n                            屏蔽敏感词管理\r\n                        </div>    \r\n                        <div>\r\n                            <Button onClick={this.filterKeyword} color=\"secondary\">&gt;</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"left_right_align\"> \r\n                        <div className=\"allCenter mgr_30\">\r\n                          发送敏感词移除群聊\r\n                        </div>    \r\n                      <Switch  key={permissions.kickWhoSendKeyword} defaultChecked={permissions.kickWhoSendKeyword} onChange={this.handleChangeKickWhoSendKeyword}/>\r\n                    </div>\r\n                    <div className=\"left_right_align\"> \r\n                        <div className=\"allCenter mgr_30\">\r\n                          敏感词移除群聊提示\r\n                        </div>   \r\n                      <Switch  key={permissions.showKickMessage} defaultChecked={permissions.showKickMessage} onChange={this.handleChangeShowKickMessage}/>\r\n                    </div> \r\n                    <Divider />\r\n                    <div className=\"left_right_align\"> \r\n                        <div className=\"allCenter mgr_30\">\r\n                            群成员可邀请好友进群\r\n                        </div>    \r\n                      <Switch key={chatPermissions.can_invite_users} defaultChecked={chatPermissions.can_invite_users} onChange={this.handleChangeCanInviteUsers}  />\r\n                    </div> \r\n                    <div className=\"left_right_align\"> \r\n                        <div className=\"allCenter mgr_30\">\r\n                          禁止加好友、私聊\r\n                        </div>    \r\n                      <Switch key={permissions.banWhisper} defaultChecked={permissions.banWhisper} onChange={this.handleChangeBanWhisper}/>\r\n                    </div> \r\n                  </div> \r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={filterKeywordDialog}\r\n                    onClose={this.onClosefilterKeywordDialog}\r\n                    aria-labelledby='fatal-error-dialog-title'\r\n                    aria-describedby='fatal-error-dialog-description'>\r\n                    <DialogTitle id='fatal-error-dialog-title'>设置屏蔽敏感词</DialogTitle>\r\n                    <DialogContent> \r\n                        <TextField \r\n                            helperText=\"多个词之间用逗号分开\"   \r\n                            rows={4}\r\n                            defaultValue={filterKeyword}\r\n                            multiline \r\n                            onChange={this.onChangeTextfiledValue}\r\n                            variant=\"outlined\" />\r\n                    </DialogContent>  \r\n                    <DialogActions> \r\n                        <Button onClick={this.onSavefilterKeyword} color='primary' autoFocus>\r\n                            保存\r\n                        </Button>\r\n                        <Button onClick={this.onClosefilterKeywordDialog} color='primary'>\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={muteMembersDialog}\r\n                    onClose={this.onCloseMuteMembersDialog}\r\n                    aria-labelledby='fatal-error-dialog-title'\r\n                    aria-describedby='fatal-error-dialog-description'>\r\n                    <DialogTitle id='fatal-error-dialog-title'>被禁言成员</DialogTitle>\r\n                    <DialogContent> \r\n                      {muteMembers.length <=0 && (\r\n                          <span>暂无被禁言成员</span>\r\n                      )} \r\n                      <List> \r\n                          {muteMembers.map(function(d, idx){ \r\n                            return (\r\n                            <ListItem key={idx}>\r\n                              <User userId={d.user_id}/>\r\n                            </ListItem>)\r\n                          })} \r\n                      </List>\r\n                    </DialogContent>  \r\n                    <DialogActions>  \r\n                        <Button onClick={this.onCloseMuteMembersDialog} color='primary'>\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical, horizontal }}\r\n                  open={openToast}\r\n                  onClose={this.handleCloseToast}\r\n                  message=\"I love snacks\"\r\n                  key={vertical + horizontal}\r\n                />\r\n            </>\r\n        ); \r\n    }\r\n}\r\n\r\nChatTabs.propTypes = {\r\n    chatId: PropTypes.number.isRequired,   \r\n}; \r\n\r\nexport default ChatTabs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport User from '../../Tile/User';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { openChat, openUser } from '../../../Actions/Client';\r\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaContent.css';\r\nimport Chat from '../../Tile/Chat';\r\nimport ChatTabs from '../ChatTabs';\r\nimport AppStore from '../../../Stores/ApplicationStore';\r\nimport { isAdmin, isPrivateChat } from '../../../Utils/Chat';\r\nconst overScanCount = 5;\r\n\r\nclass SharedMediaContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0\r\n        }\r\n\r\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getItemHeight(item) {\r\n        if (!item) return undefined;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { content } = item;\r\n                switch (content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        return 78;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        return 94;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        return 74;\r\n                    }\r\n                    default: {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n            case 'chat': {\r\n                return 74;\r\n            }\r\n            case 'user': {\r\n                return 74;\r\n            }\r\n            default: {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRowHeight(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return 74;\r\n            }\r\n            case 1: {\r\n                return undefined;\r\n            }\r\n            case 2: {\r\n                return 78;\r\n            }\r\n            case 3: {\r\n                return 94;\r\n            }\r\n            case 4: {\r\n                return undefined;\r\n            }\r\n            case 5: {\r\n                return 74;\r\n            }\r\n            case 6: {\r\n                return 74;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\r\n        const migratedChatId = -1;\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                const { user_id: id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`user_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <User userId={id} onSelect={onOpen} />\r\n                    </ListItem>\r\n                );\r\n            }\r\n            case 1: {\r\n                const { chat_id, id, content } = item;\r\n                if (content['@type'] === 'messageVideo') {\r\n                    return (\r\n                        <SharedVideo\r\n                            key={`chat_id=${chat_id}_message_id=${id}`}\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            video={content.video}\r\n                            openMedia={onOpen}\r\n                            showOpenMessage={chat_id !== migratedChatId}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <SharedPhoto\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 2: {\r\n                const { chat_id, id } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 3: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 4: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedLink\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        webPage={content.web_page}\r\n                        caption={content.caption}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 5: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedVoiceNote\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        voiceNote={content.voice_note}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 6: {\r\n                const { id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`chat_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <Chat chatId={id} onSelect={onOpen} />\r\n                    </ListItem>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    static isValidMessage(selectedIndex, message) {\r\n        if (!message) return false;\r\n\r\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\r\n    };\r\n\r\n    static isValidContent(selectedIndex, content) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\r\n            }\r\n            case 2: {\r\n                return SharedMediaContent.isValidDocumentContent(content);\r\n            }\r\n            case 3: {\r\n                return SharedMediaContent.isValidAudioContent(content);\r\n            }\r\n            case 4: {\r\n                return SharedMediaContent.isValidUrlContent(content);\r\n            }\r\n            case 5: {\r\n                return SharedMediaContent.isValidVoiceNoteContent(content);\r\n            }\r\n            case 6: {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static isValidPhotoAndVideoContent(content) {\r\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\r\n    }\r\n\r\n    static isValidAudioContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    static isValidDocumentContent(content) {\r\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\r\n    }\r\n\r\n    static isValidUrlContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text, caption } = content;\r\n        if (web_page) return true;\r\n        if (!text && !caption) return false;\r\n\r\n        const { entities } = text || caption;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    static isValidVoiceNoteContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    static getFilter(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return null;\r\n            }\r\n            case 1: {\r\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\r\n            }\r\n            case 2: {\r\n                return { '@type': 'searchMessagesFilterDocument' };\r\n            }\r\n            case 3: {\r\n                return { '@type': 'searchMessagesFilterAudio' };\r\n            }\r\n            case 4: {\r\n                return { '@type': 'searchMessagesFilterUrl' };\r\n            }\r\n            case 5: {\r\n                return { '@type': 'searchMessagesFilterVoiceNote' };\r\n            }\r\n            case 6: {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getSource(selectedIndex, media) {\r\n        if (!media) {\r\n            return [];\r\n        }\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\r\n            }\r\n            case 1: {\r\n                return media.photoAndVideo || [];\r\n            }\r\n            case 2: {\r\n                return media.document || [];\r\n            }\r\n            case 3: {\r\n                return media.audio || [];\r\n            }\r\n            case 4: {\r\n                return media.url || [];\r\n            }\r\n            case 5: {\r\n                return media.voiceNote || [];\r\n            }\r\n            case 6: {\r\n                return media.groupsInCommon || [];\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                renderIds: new Map(),\r\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false,\r\n                    migrateCompleted: false,\r\n                    filter: SharedMediaContent.getFilter(selectedIndex)\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const { items, selectedIndex } = this.state;\r\n        if (!items.some(x => x.id === message_id)) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onWindowResize = event => {\r\n        const { items, scrollTop } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n        this.setState({ ...renderIds });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { scrollTop } = this.state;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n        }\r\n\r\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            },\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\r\n            const { items } = this.state;\r\n\r\n            const store = FileStore.getStore();\r\n            switch (this.state.selectedIndex) {\r\n                case 0: {\r\n                    loadUsersContent(store, items.map(x => x.user_id));\r\n                    break;\r\n                }\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5: {\r\n                    loadMessageContents(store, items);\r\n                    break;\r\n                }\r\n                case 6: {\r\n                    loadChatsContent(store, items);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // this.unobserveResize();\r\n        // this.observeResize();\r\n    }\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId, index: selectedIndex } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(currentChatId);\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        let source = [];\r\n        if (selectedIndex === 0) {\r\n            source = members;\r\n        } else if (selectedIndex === 1) {\r\n            source = photoAndVideo;\r\n        } else if (selectedIndex === 2) {\r\n            source = document;\r\n        } else if (selectedIndex === 3) {\r\n            source = audio;\r\n        } else if (selectedIndex === 4) {\r\n            source = url;\r\n        } else if (selectedIndex === 5) {\r\n            source = voiceNote;\r\n        } else if (selectedIndex === 6) {\r\n            source = groupsInCommon;\r\n        }\r\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: new Map(),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    handleScroll = (event, container) => {\r\n        const { params } = this.state;\r\n\r\n        if (params && !params.completed) {\r\n            this.onLoadNext(params);\r\n        } else {\r\n            // this.onLoadMigratedNext(params);\r\n        }\r\n    };\r\n\r\n    handleVirtScroll = (event, container) => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        this.setScrollPosition(container.scrollTop);\r\n    };\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { rowHeight } = this.state;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    setScrollPosition = scrollTop => {\r\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n            this.setState({\r\n                scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { items, selectedIndex } = this.state;\r\n        const { completed, filter, loading, messages: lastMessages } = params;\r\n\r\n        if (selectedIndex === 0) return;\r\n        if (selectedIndex === 6) return;\r\n        if (!filter) return;\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        if (lastMessages) {\r\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\r\n        }\r\n        params.loading = true;\r\n        params.requestId = new Date();\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { params: currentParams } = this.state;\r\n        if (!currentParams || currentParams.requestId !== params.requestId) {\r\n            return;\r\n        }\r\n\r\n        const { messages } = result;\r\n        params.messages = messages;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext(params, loadIncomplete) {\r\n\r\n    }\r\n\r\n    handleOpen = item => {\r\n        const { popup } = this.props;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { chat_id, id } = item;\r\n\r\n                openMedia(chat_id, id, false);\r\n                break;\r\n            }\r\n            case 'chat': {\r\n                const { id } = item;\r\n                openChat(id);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'chatMember': {\r\n                const { user_id } = item;\r\n                openUser(user_id, true);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            selectedIndex,\r\n            items = [],\r\n            renderIds,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        } = this.state;\r\n        //获取当前用户是否为admin ，是则显示权限，否则不显示权限。\r\n        const chatId = AppStore.getChatId();\r\n        let amAdmin = isAdmin(chatId); \r\n\r\n        let isPrivateChat00 = false; \r\n        if (isPrivateChat(chatId)) {\r\n            isPrivateChat00 = true;\r\n        }\r\n\r\n        if (selectedIndex === 7 && amAdmin && isPrivateChat00 === false) { \r\n            return (\r\n                <ChatTabs chatId={chatId}></ChatTabs>\r\n            )\r\n        }\r\n        //切换是否为管理员时，可以会出现一个bug。\r\n        //  else if(selectedIndex === 7 && !amAdmin){\r\n        //     selectedIndex = 0;\r\n        //  } \r\n\r\n      \r\n\r\n\r\n\r\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]); \r\n        const hasItems = members && members.length > 0\r\n            || photoAndVideo && photoAndVideo.length > 0\r\n            || document && document.length > 0\r\n            || audio && audio.length > 0\r\n            || url && url.length > 0\r\n            || voiceNote && voiceNote.length > 0\r\n            || groupsInCommon && groupsInCommon.length > 0;\r\n        if (!hasItems) {\r\n            return (<div ref={this.listRef} />);\r\n        }\r\n\r\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\r\n            let contentHeight = 0;\r\n            const controls = items.map((x, index) => {\r\n                const { chat_id, id } = x;\r\n                const itemHeight = SharedMediaContent.getItemHeight(x);\r\n                if (!itemHeight) {\r\n                    return null;\r\n                }\r\n                contentHeight += itemHeight;\r\n\r\n                return ((!renderIds.size || renderIds.has(index)) && (\r\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\r\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\r\n                    </div>\r\n                ));\r\n            });\r\n\r\n            return (\r\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\r\n                    {controls}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\r\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaContent.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default SharedMediaContent;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\nimport './SetNickname.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport PropTypes from 'prop-types';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport { getSupergroupId } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nclass SetNickname extends Notifications {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nicknameDialog: false,\r\n            nickname: \"\",\r\n            prevNickname: \"\",\r\n            editNickname: \"\"\r\n        };\r\n    }\r\n\r\n    onOpenNicknameDialog = () => {\r\n        this.setState({ nicknameDialog: true }); \r\n        this.onGetUsername();\r\n    }\r\n    onGetUsername = () => { \r\n        const chatId = AppStore.getChatId(); \r\n        let uid = UserStore.getMyId(); \r\n        TdLibController.send({\r\n            '@type': 'getChatMember',\r\n            \"chat_id\": chatId,\r\n            \"user_id\": uid,\r\n        }).then(data => {\r\n            this.setState({ editNickname: data.nickname });\r\n        }).catch(err => {\r\n        });\r\n    }\r\n    onCloseNicknameDialog = () => {\r\n        this.setState({ nicknameDialog: false });\r\n    }\r\n\r\n    onChangeNickname = (event) => {\r\n        this.setState({ editNickname: event.target.value });\r\n    }\r\n\r\n    onSaveNickname = (enent) => {\r\n        const { editNickname } = this.state;\r\n        const chatId = AppStore.getChatId();\r\n        const supergroupId = getSupergroupId(chatId);\r\n        TdLibController.send({\r\n            '@type': 'sendCustomRequest',\r\n            \"method\": \"chats.setNickname\",\r\n            \"parameters\": JSON.stringify({ \"chatId\": supergroupId, nickname: editNickname })\r\n        })\r\n            .then(data => {\r\n                this.setState({nickname:editNickname});\r\n                this.onCloseNicknameDialog();\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err on get permissions\");\r\n            });\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.nickname != state.prevNickname) {\r\n            // let user = UserStore.get(UserStore.getMyId())  \r\n            // let nickname = \"\";\r\n            // if(user){ \r\n            //     nickname = user.first_name;    \r\n            // }   \r\n            return {\r\n                nickname: props.nickname,\r\n                prevNickname: props.nickname,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { nicknameDialog, nickname, editNickname } = this.state; \r\n        return (\r\n            <>\r\n                <ListItem style={{paddingRight:0}} className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\r\n\r\n                    <div style={{ paddingLeft: 40, width: '100%' }} className=\"left_right_align\">\r\n                        <div className='allCenter'>\r\n                            我在本群的昵称\r\n                        </div>\r\n                        <Button onClick={this.onOpenNicknameDialog} color=\"secondary\">{nickname}&nbsp;&gt;</Button>\r\n                    </div>\r\n                </ListItem>\r\n\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={nicknameDialog}\r\n                    onClose={this.onCloseNicknameDialog}\r\n                    aria-labelledby='fatal-error-dialog-title'\r\n                    aria-describedby='fatal-error-dialog-description'>\r\n                    <DialogTitle id='fatal-error-dialog-title'>我在本群的昵称</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            helperText=\"昵称修改后，只会在此群内显示，群里成员都可以看见\"\r\n                            defaultValue={editNickname}\r\n                            multiline\r\n                            onChange={this.onChangeNickname}\r\n                            variant=\"outlined\" />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onSaveNickname} color='primary' autoFocus>\r\n                            保存\r\n                        </Button>\r\n                        <Button onClick={this.onCloseNicknameDialog} color='primary'>\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\nSetNickname.propTypes = {\r\n    nickname: PropTypes.string.isRequired,\r\n};\r\nexport default withTranslation()(SetNickname);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport User from '../Tile/User';\r\nimport Chat from '../Tile/Chat';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\r\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\r\nimport { copy } from '../../Utils/Text';\r\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getSupergroupId,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    isMeChat, isChannelChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Phone';\r\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport SetNickname from './SetNickname';\r\nimport './MoreListItem.css';\r\nimport './ChatDetails.css';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatTabs from './ChatTabs';\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.dividerRef = React.createRef();\r\n        this.mediaRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            nickname: null,\r\n            invite_link: null\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        // );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.counters !== counters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.migratedCounters !== migratedCounters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.loadContent();\r\n        }\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        if (prevProps.chatId === chatId) {\r\n            list.scrollTop = scrollTop;\r\n        } else {\r\n            list.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n        const { chatId } = this.props;\r\n        // TdLibController.send({\r\n        //     '@type': 'getChat',\r\n        //     \"chat_id\": chatId, \r\n        //     })\r\n        //     .then(data => {  \r\n        //         if(data){ \r\n        //            if(data.type.user_id){\r\n        //                this.setState({isUserChat:true});\r\n        //            }\r\n        //         }\r\n\r\n        //     })\r\n        //     .catch(err => {   \r\n        //         console.log(\"err on get permissions\");\r\n        // });   \r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n\r\n        if (popup) {\r\n            getChatFullInfo(chatId);\r\n        }\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        this.handleScheduledAction(t('PhoneCopied'));\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.listRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId, popup } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.listRef) return 0;\r\n\r\n        return this.listRef.current.clientHeight;\r\n    };\r\n\r\n    handleTabClick = event => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: divider } = this.dividerRef;\r\n        if (!divider) return;\r\n        if (divider.offsetTop === list.scrollTop) return;\r\n\r\n        if (list.scrollTop < divider.offsetTop) {\r\n            list.scrollTo({\r\n                top: divider.offsetTop,\r\n                behavior: 'smooth'\r\n            });\r\n        } else {\r\n            list.scrollTop = divider.offsetTop + 70;\r\n            setTimeout(() => {\r\n                list.scrollTo({\r\n                    top: divider.offsetTop,\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 0);\r\n        }\r\n        // requestAnimationFrame(() => {\r\n        //     list.scrollTo({\r\n        //         top: divider.offsetTop,\r\n        //         behavior: 'smooth'\r\n        //     });\r\n        // });\r\n    };\r\n\r\n    handleScroll = event => {\r\n        if (!this.listRef) return;\r\n        if (!this.mediaRef) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: media } = this.mediaRef;\r\n        if (!media) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            media.handleScroll(event);\r\n        }\r\n\r\n        media.handleVirtScroll(event, list);\r\n    };\r\n\r\n    onGetUsername = () => {\r\n        const chatId = AppStore.getChatId();\r\n        let uid = UserStore.getMyId();\r\n        TdLibController.send({\r\n            '@type': 'getChatMember',\r\n            \"chat_id\": chatId,\r\n            \"user_id\": uid,\r\n        }).then(data => {\r\n            if (data.nickname == \"\") {\r\n                let user = UserStore.get(UserStore.getMyId())\r\n                let name = \"\";\r\n                if (user) {\r\n                    name = user.first_name;\r\n                    this.setState({ nickname: name });\r\n                }\r\n            } else {\r\n                this.setState({ nickname: data.nickname });\r\n            }\r\n        }).catch(err => {\r\n        });\r\n    }\r\n\r\n    onGetPublicLink = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const supergroupId = getSupergroupId(chatId);\r\n        TdLibController.send({\r\n            '@type': 'getSupergroupFullInfo',\r\n            \"supergroup_id\": supergroupId,\r\n        }).then(data => {\r\n            this.setState({ invite_link: data.invite_link });\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            backButton,\r\n            className,\r\n            chatId,\r\n            onClose,\r\n            popup,\r\n            t,\r\n\r\n        } = this.props;\r\n        // let {isUserChat} = this.state;\r\n        this.onGetUsername();\r\n\r\n        let { nickname, invite_link } = this.state;\r\n\r\n        let { counters, migratedCounters } = this.props;\r\n        counters = counters || [0, 0, 0, 0, 0, 0];\r\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\r\n            (el, i) => el + migratedCounters[i]\r\n        );\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let groupInCommonCount = 0;\r\n        if (isPrivateChat(chatId)) {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        let bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className='list-item' key={user.id}>\r\n                <User userId={user.id} onSelect={this.handleOpenUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\r\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\r\n            if (bioEntities.length > 0) {\r\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\r\n            }\r\n        }\r\n\r\n        let openChatTitle = t('SendMessage');\r\n        if (isChannelChat(chatId)) {\r\n            openChatTitle = t('OpenChannel');\r\n        } else if (isGroupChat(chatId)) {\r\n            openChatTitle = t('OpenGroup');\r\n        }\r\n\r\n        let chatUrl = '';\r\n        let isPrivateChat00 = false;\r\n        if (username) {\r\n            if (isPrivateChat(chatId)) {\r\n                chatUrl = username;\r\n                isPrivateChat00 = true;\r\n            } else {\r\n                // const tMeUrl = OptionStore.get('t_me_url')\r\n                //     .value\r\n                //     .toLowerCase()\r\n                //     .replace('https://', '')\r\n                //     .replace('http://', '');\r\n\r\n                // chatUrl = tMeUrl + username;\r\n                chatUrl = invite_link;\r\n            }\r\n        }\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                        {!isMe && (\r\n                            <List className='chat-details-items'>\r\n                                {bio && (\r\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\r\n                                        <ListItemIcon>\r\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={bio}\r\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\r\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n\r\n                                {username && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\r\n                                        <ListItemIcon>\r\n                                            <AlternateEmailIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {chatUrl}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {phoneNumber && (\r\n                                    <>\r\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\r\n                                            <ListItemIcon>\r\n                                                <CallIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    <Typography variant='inherit' noWrap>\r\n                                                        {formatPhoneNumber(phoneNumber)}\r\n                                                    </Typography>\r\n                                                }\r\n                                                secondary={t('Phone')}\r\n                                            />\r\n                                        </ListItem>\r\n                                    </>\r\n                                )}\r\n                                <NotificationsListItem chatId={chatId} />\r\n                                {!isPrivateChat00 && (\r\n                                    <SetNickname nickname={nickname} />\r\n                                )}\r\n                                {popup && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography color='primary' variant='inherit' noWrap>\r\n                                                    {openChatTitle.toUpperCase()}\r\n                                                </Typography>\r\n                                            }\r\n                                            style={{ paddingLeft: 40 }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div ref={this.dividerRef} />\r\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick} />\r\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup} />\r\n\r\n                    {/* {!isUserChat && (\r\n                        <ChatTabs chatId={chatId}></ChatTabs>\r\n                    )} */}\r\n\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenGroupInCommon: PropTypes.func,\r\n    onOpenSharedDocuments: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenSharedLinks: PropTypes.func,\r\n    onOpenSharedPhotos: PropTypes.func,\r\n    onOpenSharedVideos: PropTypes.func,\r\n    onOpenSharedVoiceNotes: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = AppStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.chatId);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.handleCloseChatDetails();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n\r\n        if (!update.nextChatId) {\r\n            this.handleCloseChatDetails();\r\n        }\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        const { className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        } \r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft, isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n        UserStore.on('updateUser', this.onUpdateUser);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUser = update => {\r\n        const { chatId } = this.props;\r\n        const { user } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (isPrivateChat(chatId)) return;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return;\r\n\r\n        const { sender } = last_message;\r\n        if (sender.user_id !== user.id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n\r\n           \r\n// console.log('content',content)\r\n\r\n          let news = getLastMessageContent(chat, t) || '\\u00A0';\r\n          if (typeof (news) == 'string') {\r\n            if (news && (news).match(/^ct!([\\s\\S]*)!5!100!{\"remittanceId\":([\\s\\S]*),\"payer\":([\\s\\S]*),\"payee\":([\\s\\S]*),\"amount\":([\\s\\S]*)}$/g)) {\r\n\r\n              news = '【请在手机端查看转账】'\r\n\r\n            }\r\n\r\n            else if (news && (news).match(/^ct!([\\s\\S]*)!2!100!{\"redPacketId\":([\\s\\S]*),\"from\":([\\s\\S]*),\"title\":([\\s\\S]*)}$/g)) {\r\n\r\n              news = '【请在手机端查看红包】'\r\n\r\n            }\r\n\r\n            else if (news && (news).match(/^ct!([\\s\\S]*)!2!200!{\"redPacketId\":([\\s\\S]*),\"from\":([\\s\\S]*),\"type\":([\\s\\S]*),\"price\":([\\s\\S]*),\"isLast\":([\\s\\S]*)}$/g)) {\r\n\r\n              news = '【领取了红包】'\r\n            }\r\n\r\n            else if (news && news == 'ct!99914b932bd37a50b983c5e7c90ae93b!3!101!{}') {\r\n\r\n              news = '【对方加你为好友了】'\r\n            }\r\n            else if (news && news == 'ct!99914b932bd37a50b983c5e7c90ae93b!3!100!{}') {\r\n\r\n              news = '【截屏了一次】'\r\n            }\r\n          }\r\n\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {news}\r\n                    {/* {content} */}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    isChatPinned,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, chatList } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatPosition', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatPosition', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId, chatList } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { unread_count } = chat;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && !isMe && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\r\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\r\n    </g>,\r\n    'PinOff'\r\n);\r\n\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canAddChatToList,\r\n    canDeleteChat,\r\n    getDeleteChatTitle,\r\n    getViewInfoTitle,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatPinned,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isMeChat,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    addChatToList,\r\n    leaveChat,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatList !== chatList) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId, chatList } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const isPinned = isChatPinned(chatId, chatList);\r\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\r\n            const canToggleArchive = canAddChatToList(chatId);\r\n            const canMute = !isMeChat(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                canMute,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const { chatList } = this.props;\r\n\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId, chatList } = this.props;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        if (!isPinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, chatList, !isPinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canAddChatToList(chatId)) return;\r\n\r\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    handleDeleteChat = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        leaveChat(chatId)\r\n    };\r\n\r\n    render() {\r\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\r\n\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}\r\n                >\r\n                    <div className='dialog-wrapper'>\r\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\r\n                        <div className='dialog-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} />\r\n                                <DialogMeta chatId={chatId} />\r\n                            </div>\r\n                            <div className='tile-second-row'>\r\n                                <DialogContent chatId={chatId} />\r\n                                <DialogBadge chatId={chatId} chatList={chatList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Popover\r\n                        open={contextMenu}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        anchorReference='anchorPosition'\r\n                        anchorPosition={{ top, left }}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            {canToggleArchive && (\r\n                                <MenuItem onClick={this.handleArchive}>\r\n                                    {isArchived ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnarchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Unarchive')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <ArchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Archive')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            {canTogglePin && (\r\n                                <MenuItem onClick={this.handlePin}>\r\n                                    {isPinned ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnpinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('UnpinFromTop')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <PinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('PinToTop')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleViewInfo}>\r\n                                <ListItemIcon>\r\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                            </MenuItem> \r\n                            { canMute && (\r\n                                <MenuItem onClick={this.handleMute}>\r\n                                    {isMuted ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnmuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsUnmute')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <MuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsMute')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleRead}>\r\n                                {isUnread ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <MessageIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsRead')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnreadIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsUnread')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                            {/*{clearHistory && (*/}\r\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\r\n                            {/*        <ListItemIcon>*/}\r\n                            {/*            <BroomIcon />*/}\r\n                            {/*        </ListItemIcon>*/}\r\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\r\n                            {/*    </MenuItem>*/}\r\n                            {/*)}*/}\r\n                            {deleteChat && deleteChatTitle && (\r\n                                <MenuItem onClick={this.handleDeleteChat}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={deleteChatTitle} />\r\n                                </MenuItem>\r\n                            )}\r\n                        </MenuList>\r\n                    </Popover>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    chatList: PropTypes.object.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './VirtualizedList.css';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('vlist', className)}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\r\n                    {items}\r\n                </div>\r\n                {/*<div className='vlist-top-border'/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: 0, behavior });\r\n    }, 1);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\r\n    'Channel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.cacheContacts = false;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveInternal = debounce(this.saveInternal, 2000);\r\n    }\r\n\r\n    reset = () => {\r\n        this.filters = null;\r\n        this.chatIds = [];\r\n        this.archiveChatIds = [];\r\n        this.meChat = null;\r\n        if (this.cacheContacts) {\r\n            this.contacts = null;\r\n        }\r\n\r\n        this.cache = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        this.clear();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove('cache');\r\n                        CacheManager.remove('files');\r\n                        if (this.cacheContacts) {\r\n                            CacheManager.remove('contacts');\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clearDataUrls();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async load() {\r\n        // console.log('[cm] getChats start');\r\n        const promises = [];\r\n        promises.push(CacheManager.load('cache').catch(error => null));\r\n        promises.push(CacheManager.load('files').catch(error => null));\r\n        promises.push(CacheManager.load('filters').catch(error => null));\r\n        if (this.cacheContacts) {\r\n            promises.push(CacheManager.load('contacts').catch(error => null));\r\n        }\r\n        let [cache, files, filters, contacts] = await Promise.all(promises);\r\n\r\n        let dropCache = false;\r\n        if (cache && cache.chats) {\r\n            for (let i = 0; i < cache.chats.length; i++) {\r\n                const { last_message } = cache.chats[i];\r\n                if (last_message && last_message.sender_user_id) {\r\n                    dropCache = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (dropCache) {\r\n            cache = null;\r\n        }\r\n\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n\r\n        if (this.cacheContacts) {\r\n            if (contacts) {\r\n                (contacts || []).forEach(x => {\r\n                    UserStore.set(x);\r\n                })\r\n\r\n                this.contacts = {\r\n                    '@type': 'users',\r\n                    user_ids: contacts.map(x => x.id),\r\n                    total_count: contacts.length\r\n                };\r\n            }\r\n        }\r\n\r\n        this.filters = filters;\r\n\r\n        if (this.cache) {\r\n            this.parseCache(this.cache);\r\n        }\r\n\r\n        // console.log('[cm] load', this.filters, filters);\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        // console.log('[cache] parseCache', cache);\r\n\r\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n            FileStore.setDataUrl(id, url);\r\n        });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\r\n            if (x) {\r\n                delete x.OutputTypingManager;\r\n\r\n                ChatStore.set(x);\r\n                if (x.photo) {\r\n                    if (x.photo.small) FileStore.set(x.photo.small);\r\n                    if (x.photo.big) FileStore.set(x.photo.big);\r\n                }\r\n                if (x.position) {\r\n                    ChatStore.updateChatChatLists(x.id);\r\n                }\r\n                if (x.last_message) {\r\n                    MessageStore.set(x.last_message);\r\n                }\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    async getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const meChat = this.meChat;\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const chatMap = new Map(chats.map(x => [x.id, x]));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n\r\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender } = last_message;\r\n                switch (sender['@type']) {\r\n                    case 'messageSenderUser': {\r\n                        const user = UserStore.get(sender.user_id);\r\n                        if (user) {\r\n                            userMap.set(user.id, user);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSenderChat': {\r\n                        const chat = ChatStore.get(sender.chat_id);\r\n                        if (chat) {\r\n                            chatMap.set(chat.id, chat);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            date: new Date(),\r\n            meChat,\r\n            chats: [...chatMap.values()],\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    async save(filters, chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.meChat = this.meChat || await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: false\r\n        });\r\n        if (this.cacheContacts) {\r\n            this.contacts = this.contacts || await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n        }\r\n        this.filters = filters;\r\n\r\n        this.saveInternal();\r\n    }\r\n\r\n    async saveInternal() {\r\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\r\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save('cache', cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        // console.log('[cm] save files start', files);\r\n        const results = await Promise.all(promises);\r\n        // console.log('[cm] save files', results);\r\n        await CacheManager.save('files', results);\r\n\r\n        if (this.cacheContacts) {\r\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\r\n            await CacheManager.save('contacts', contacts);\r\n        }\r\n\r\n        if (this.filters) {\r\n            await CacheManager.save('filters', this.filters);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        const promises = [];\r\n        promises.push(CacheManager.remove('cache').catch(error => null));\r\n        promises.push(CacheManager.remove('files').catch(error => null));\r\n        promises.push(CacheManager.remove('filters').catch(error => null));\r\n        promises.push(CacheManager.remove('contacts').catch(error => null));\r\n        promises.push(CacheManager.remove('register').catch(error => null));\r\n\r\n        Promise.all(promises)\r\n    }\r\n\r\n    clearDataUrls() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files.forEach(({ id, url }) => {\r\n                FileStore.deleteDataUrl(id);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ChannelIcon from '../../Assets/Icons/Channel';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null,\r\n            isSmallWidth: AppStore.isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewChannel = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = async event => {\r\n        this.handleMenuClose();\r\n        // unregister();\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.handleMenuClose();\r\n\r\n        searchChat(0);\r\n    };\r\n\r\n    render() {\r\n        const { t, timeout, popup, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewChannel}>\r\n                        <ListItemIcon>\r\n                            <ChannelIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewChannel')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    { isSmallWidth && (\r\n                        <MenuItem onClick={this.handleSearch}>\r\n                            <ListItemIcon>\r\n                                <SearchIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Search')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        const closeIcon = popup\r\n            ? <CloseIcon/>\r\n            : <ArrowBackIcon/>;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    { timeout\r\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\r\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\r\n                    }\r\n\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                onClose(event);\r\n            }\r\n        } else if (event.keyCode === 8) {\r\n            const { onBackspace } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n            if (element.innerText) return;\r\n\r\n            if (onBackspace) {\r\n                event.stopPropagation();\r\n                onBackspace();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div\r\n                    id='search-inputbox'\r\n                    ref={inputRef}\r\n                    placeholder={hint || t('Search')}\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onKeyUp={this.handleKeyUp}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                    onFocus={onFocus}\r\n                />\r\n                {showIcon && <SearchIcon className='search-input-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    hint: PropTypes.string,\r\n    showIcon: PropTypes.bool,\r\n    onBackspace: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    showIcon: true\r\n}\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            if (openSearch) {\r\n                this.focusInput();\r\n            } else {\r\n                const searchInput = this.searchInputRef.current;\r\n                if (searchInput) {\r\n                    searchInput.innerText = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    focusInput() {\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.popup) {\r\n            this.focusInput();\r\n        }\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch, timeout, popup } = this.props;\r\n\r\n        let content = null;\r\n        let showBack = false;\r\n        if (openSearch) {\r\n            showBack = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired,\r\n    timeout: PropTypes.bool,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Animator from '../../Utils/Animatior';\r\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\r\nimport { openChatList } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './Filters.css';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        const { isSmallWidth } = AppStore;\r\n        const { filters, chatList } = FilterStore;\r\n\r\n        this.state = {\r\n            isSmallWidth,\r\n            filters,\r\n            chatList\r\n        };\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n\r\n        this.setSelection();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n    }\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onClientUpdateLanguageChange = update => {\r\n        if (!this.hasObserver()) this.setSelection(false);\r\n    };\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { filters } = this.state;\r\n        if (filters) return;\r\n\r\n        const { filters: cachedFilters } = CacheStore;\r\n        if (!cachedFilters) return;\r\n\r\n        this.setState({\r\n            filters: cachedFilters\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        this.setState({\r\n            isSmallWidth\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { chatList, filters, isSmallWidth } = this.state;\r\n\r\n        const scroll = this.filtersRef.current;\r\n        const padding = 3;\r\n\r\n        let item = null;\r\n        let left = 9;\r\n        if (chatList['@type'] === 'chatListMain') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                item = main.firstChild;\r\n                left = item.offsetLeft;\r\n            }\r\n        } else if (chatList['@type'] === 'chatListFilter') {\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\r\n                if (filters[i].id === chatList.chat_filter_id) {\r\n                    item = filter.firstChild;\r\n                    left = item.offsetLeft;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    onUpdateChatFilters = update => {\r\n        const { chatList } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        this.setState({\r\n            filters\r\n        }, () => {\r\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\r\n                this.handleMainClick();\r\n            } else {\r\n                if (!this.hasObserver()) this.setSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = FilterStore;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    handleMainClick = event => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListMain' });\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\r\n    };\r\n\r\n    handleWheel = event => {\r\n        if (!event.deltaY) {\r\n            return;\r\n        }\r\n\r\n        event.currentTarget.scrollLeft += event.deltaY;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { filters, chatList, isSmallWidth } = this.state;\r\n\r\n        if (!filters) return null;\r\n        if (!filters.length) return null;\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className='tabs'>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\r\n                    <div\r\n                        ref={r => this.filterRef.set('chatListMain', r)}\r\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\r\n                        onMouseDown={this.handleMainClick}\r\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\r\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\r\n                    </div>\r\n                    {filters.map(x => (\r\n                        <div\r\n                            key={x.id}\r\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\r\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\r\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\r\n                            title={isSmallWidth ? x.title : null}>\r\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\r\n                        </div>))}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n\r\n};\r\n\r\nexport default withTranslation()(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\r\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport Filters from './Filters';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, chatList, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, chatList, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        window._m = new Map();\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n\r\n        this.state = {\r\n            authorizationState,\r\n            chats: null,\r\n            fistSliceLoaded: false,\r\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\r\n            params: {\r\n                loading: false,\r\n                completed: false\r\n            }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.items !== items) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        // if (nextState.chatList !== chatList) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = update;\r\n\r\n        if (chatListEquals(this.state.chatList, chatList)) {\r\n            this.scrollToTop();\r\n        } else {\r\n            this.setState({\r\n                chatList,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false\r\n                }\r\n            }, () => {\r\n                this.loadFirstSlice();\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        // const { supegroup, prevSupergroup } = update;\r\n        //\r\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\r\n        //     return;\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        await FileStore.initDB(() => this.onLoadNext(true));\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache, type } = this.props;\r\n        const { chatList } = this.state;\r\n        if (type !== 'chatListMain') return;\r\n        if (chatList['@type'] !== 'chatListMain') return;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatPosition = update => {\r\n        const { chatList } = this.state;\r\n        const { position } = update;\r\n\r\n        if (!chatListEquals(chatList, position.list)) {\r\n            return;\r\n        }\r\n\r\n        this.onUpdateChatOrder(update);\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chats, chatList, params } = this.state;\r\n        if (!chats) return;\r\n\r\n        const { loading } = params;\r\n        if (loading && !chats.length) return;\r\n\r\n        const { chat_id } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        if (!hasChatList(chat_id, chatList)) {\r\n            return;\r\n        }\r\n\r\n        const order = getChatOrder(chat_id, chatList);\r\n        const currentIndex = chats.findIndex(x => x === chat_id);\r\n        if (currentIndex === -1 && order === '0') {\r\n            return;\r\n        }\r\n\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = ChatStore.get(chats[i]);\r\n            const chatOrder = getChatOrder(chats[i], chatList);\r\n            if (chat && chatOrder !== '0') {\r\n                chatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        const newChatIds = [];\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (currentIndex === -1) {\r\n                if (loading) {\r\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\r\n                    window._m.set(chat_id, chat_id);\r\n                    // TODO: check and add if within loaded part\r\n                } else {\r\n                    newChatIds.push(chat_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const { chatList } = this.state;\r\n\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        // console.log('[vl] reorderChats', orderedChatIds);\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        // console.log('[vl] onScroll');\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const list = current.getListRef().current;\r\n        if (!list) return;\r\n\r\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\r\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\r\n            this.onLoadPrev();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\r\n            // console.log(`[vl] onScroll onLoadNext`);\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadPrev() {\r\n\r\n    }\r\n\r\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\r\n        const { type } = this.props;\r\n        const { chats, chatList, params } = this.state;\r\n\r\n        // console.log('[folders] onLoadNext', chatList, limit);\r\n        if (params.loading) {\r\n            // console.log('[folders] onLoadNext cancel loading', chatList);\r\n            return;\r\n        }\r\n\r\n        if (params.completed) {\r\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        let offsetChat = null;\r\n        if (!replace && chats && chats.length > 0) {\r\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\r\n            if (offsetChat) {\r\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\r\n                offsetChatId = offsetChat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_chat_id: offsetChatId,\r\n            offset_order: offsetOrder,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }).finally(() => {\r\n            params.loading = false;\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\r\n            }\r\n        });\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\r\n\r\n        if (params !== this.state.params) {\r\n            // console.log('[folders] onLoadNext cancel', chatList);\r\n            return;\r\n        }\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        params.completed = !result.chat_ids.length;\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n\r\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\r\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\r\n                }\r\n\r\n                const list = this.listRef.current.getListRef().current;\r\n                if (!list) return;\r\n                list.scrollTop = 0;\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n\r\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\r\n                    this.onLoadNext(false, limit - result.chat_ids.length);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source) => {\r\n        const { chatList } = this.state;\r\n        const x = source[index];\r\n\r\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        // console.log('[dl] render', type, open, chats, cacheChats);\r\n        if (!open) return null;\r\n\r\n        this.source = [];\r\n        let dialogs = null;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n            // dialogs = cacheItems.map(x => (\r\n            //     <Dialog\r\n            //         key={x.id}\r\n            //         chatId={x.id}\r\n            //         isLastPinned={x === lastPinnedId}\r\n            //         hidden={this.hiddenChats.has(x.id)}\r\n            //     />\r\n            // ));\r\n        } else {\r\n            if (chatList['@type'] === 'chatListMain') {\r\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\r\n            }\r\n        }\r\n\r\n        window._chats = chats;\r\n        window._c = new Map((chats || []).map(i => [i, i]));\r\n        const ids = [];\r\n        window._m.forEach((value, key) => {\r\n            if (!window._c.has(key)) {\r\n                ids.push(key);\r\n            }\r\n        });\r\n        console.log('[vl] render', (chats || []).length, window._c.size, window._m.size, ids.length,\r\n            //ids.map(x => ChatStore.get(x))\r\n        );\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    showArchive: PropTypes.bool,\r\n    archiveTitle: PropTypes.string,\r\n    cacheItems: PropTypes.array,\r\n    items: PropTypes.array\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    handleClick = () => {\r\n        const { innerListRef } = this.props;\r\n        if (!innerListRef) return;\r\n\r\n        const { current: list } = innerListRef;\r\n        if (!list) return;\r\n\r\n        list.scrollToTop();\r\n    };\r\n\r\n    render() {\r\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                        open={true}\r\n                        items={items}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender.user_id && chatSearch ? (\r\n                <UserTile userId={sender.user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { getChatOrder } from '../../../Utils/Chat';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n            for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(getChatOrder(b), getChatOrder(a));\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender.user_id) {\r\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, message } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (message) {\r\n                const { sender } = message;\r\n                if (sender && sender.user_id) {\r\n                    users.set(sender.user_id, sender.user_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender.user_id) {\r\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    event.target.blur();\r\n\r\n                    onClose();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, timeout, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\r\n    'Folder'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose(); \r\n        TdLibController.logOut();\r\n        TdLibController.send({ '@type': 'destroy' });\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 500); \r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport FilterIcon from '../../../Assets/Icons/Folder';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport packageJson from '../../../../package.json';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        \r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            popup,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage,\r\n            onFilters\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content settings-main-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\r\n                        <ListItemIcon>\r\n                            <FilterIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Filters')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                    <div className='settings-main-footer'>\r\n                        {packageJson.version}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func,\r\n    onFilters: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\r\n    'AddImage'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Cropper from 'react-cropper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AddImageIcon from '../../Assets/Icons/AddImage';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CheckIcon from '../../Assets/Icons/Check';\r\nimport { getFitSize, readImageSize } from '../../Utils/Common';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport './NewChatPhoto.css';\r\n\r\nclass NewChatPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachPhotoRef = React.createRef();\r\n        this.cropperRef = React.createRef();\r\n\r\n        const { defaultURL } = this.props;\r\n\r\n        this.state = {\r\n            blobURL: defaultURL,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleDone = () => {\r\n        const cropper = this.cropperRef.current;\r\n        if (!cropper) return;\r\n\r\n        cropper.getCroppedCanvas().toBlob(blob => {\r\n            const blobURL = URL.createObjectURL(blob);\r\n\r\n            this.setState({\r\n                blob,\r\n                blobURL\r\n            });\r\n\r\n            const { onChoose } = this.props;\r\n            if (!onChoose) return;\r\n\r\n            onChoose(blob, blobURL);\r\n        }, 'image/jpeg');\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    handleAttach = () => {\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ file, ...rest ] = Array.from(files);\r\n            if (!file) return;\r\n\r\n            const [width, height] = await readImageSize(file);\r\n\r\n            this.setState({\r\n                open: true,\r\n                file,\r\n                fileURL: URL.createObjectURL(file),\r\n                width,\r\n                height\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { open, width, height, fileURL, blobURL } = this.state;\r\n\r\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\r\n\r\n        return (\r\n            <>\r\n                <div className='new-chat-photo'>\r\n                    { blobURL ? (\r\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\r\n                        ) : (\r\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\r\n                            <AddImageIcon className='new-chat-photo-icon'/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={this.attachPhotoRef}\r\n                    className='inputbox-attach-button'\r\n                    type='file'\r\n                    multiple={false}\r\n                    accept='image/*'\r\n                    onChange={this.handleAttachComplete}\r\n                />\r\n                { open && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleCancel}\r\n                        aria-labelledby='dialog-title'>\r\n                        <div className='header-master'>\r\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                            <div className='header-status grow cursor-pointer'>\r\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <DialogContent>\r\n                            <Cropper\r\n                                ref={this.cropperRef}\r\n                                src={fileURL}\r\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\r\n                                // Cropper.js options\r\n                                aspectRatio={1}\r\n                                viewMode={3}\r\n                                guides={false} />\r\n                        </DialogContent>\r\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\r\n                            <CheckIcon/>\r\n                        </div>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNewChatPhoto.propTypes = {\r\n    defaultURL: PropTypes.string,\r\n    onChoose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(NewChatPhoto);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport NewChatPhoto from '../NewChatPhoto';\r\nimport { getSrc, loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChoosePhoto = async data => {\r\n        const { chatId } = this.props;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setProfilePhoto',\r\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const entities = [];\r\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\r\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            {formattedText}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\r\n    'Add'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\r\n    'NewPrivate'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\r\n    'NonContacts'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\r\n    'NewGroup'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\r\n    'NewChannel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\r\n    'ReadChats'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\r\n    'Bots'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ChatTile from './ChatTile';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\r\nimport './FilterChat.css';\r\n\r\nclass FilterChat extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        checked: false\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { chatId, onDelete } = this.props;\r\n\r\n        onDelete && onDelete(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t, type, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const title = getChatTitle(chatId, true, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        <div className='filter-chat-title'>\r\n                            {title}\r\n                        </div>\r\n                        { type && (\r\n                            <div className='filter-chat-subtitle'>\r\n                                {getChatType(chatId, t)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    type: PropTypes.bool,\r\n    onDelete: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterChat);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport './FilterText.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass FilterText extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete && onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, className, icon, text, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        {icon}\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        {text}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterText.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterText);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport './Chip.css';\r\n\r\nclass Chip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { icon, text, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='chip-icon'>\r\n                    {icon}\r\n                </div>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChip.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Chip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ChatChip.css';\r\n\r\nclass ChatChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <ChatTile chatId={chatId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatChip.propTypes = {\r\n    chatId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ChatChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SearchInput from '../Search/SearchInput';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport Chip from '../../Tile/Chip';\r\nimport ChatChip from '../../Tile/ChatChip';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditFilterChats.css';\r\n\r\nclass EditFilterChats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            focusedItem: null,\r\n            searchItems: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleChatChange = (chatId, search) => {\r\n        const { mode } = this.props;\r\n\r\n        if (search) {\r\n            const input = this.searchInputRef.current;\r\n            input.focus();\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { filter, mode } = this.props;\r\n        const { filter : prevFilter } = prevProps;\r\n\r\n        if (prevProps.filter === filter) {\r\n            return null;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\r\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\r\n\r\n        const isDeleting =\r\n            prevItems.length > items.length\r\n            || prevFilter.include_contacts && !filter.include_contacts\r\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\r\n            || prevFilter.include_groups && !filter.include_groups\r\n            || prevFilter.include_channels && !filter.include_channels\r\n            || prevFilter.include_bots && !filter.include_bots\r\n            || prevFilter.exclude_read && !filter.exclude_read\r\n            || prevFilter.exclude_muted && !filter.exclude_muted\r\n            || prevFilter.exclude_archived && !filter.exclude_archived;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.filter === this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        this.animatePanel(snapshot.panel);\r\n        // this.animateItems(snapshot.items);\r\n    }\r\n\r\n    animatePanel(snapshot) {\r\n        if (!snapshot) return;\r\n\r\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        if (!prevOffsets) return;\r\n\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                            + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                        + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    handleBackspace = () => {\r\n        const { filter, mode } = this.props;\r\n        const { focusedItem } = this.state;\r\n        if (!filter) return;\r\n\r\n        if (focusedItem) {\r\n            switch (focusedItem) {\r\n                case 'include_contacts':\r\n                case 'include_non_contacts':\r\n                case 'include_bots':\r\n                case 'include_groups':\r\n                case 'include_channels':\r\n                case 'exclude_muted':\r\n                case 'exclude_read':\r\n                case 'exclude_archived': {\r\n                    this.handleChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.handleChatChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        if (include) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = filter;\r\n\r\n            if (included_chat_ids.length > 0) {\r\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (include_bots) {\r\n                this.setState({\r\n                    focusedItem: 'include_bots'\r\n                });\r\n            } else if (include_channels) {\r\n                this.setState({\r\n                    focusedItem: 'include_channels'\r\n                });\r\n            } else if (include_groups) {\r\n                this.setState({\r\n                    focusedItem: 'include_groups'\r\n                });\r\n            } else if (include_non_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_non_contacts'\r\n                });\r\n            } else if (include_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_contacts'\r\n                });\r\n            }\r\n        } else {\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = filter;\r\n\r\n            if (excluded_chat_ids.length > 0) {\r\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (exclude_archived) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_archived'\r\n                });\r\n            } else if (exclude_read) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_read'\r\n                });\r\n            } else if (exclude_muted) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_muted'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { onChange } = this.props;\r\n\r\n        onChange(type, value);\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        });\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query,\r\n                limit: 100\r\n            })\r\n        );\r\n        const [searchItems] = await Promise.all(promises);\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, searchItems.chat_ids);\r\n\r\n        this.setState({ searchItems, focusedItem: null });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\r\n        const { focusedItem, searchItems } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = filter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = filter;\r\n\r\n        const include = mode === 'include';\r\n        const items = include ? included_chat_ids : excluded_chat_ids;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    { include && (\r\n                        <>\r\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\r\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\r\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\r\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\r\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\r\n                        </>\r\n                    )}\r\n                    { !include && (\r\n                        <>\r\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\r\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\r\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\r\n                        </>\r\n                    )}\r\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\r\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\r\n                    {include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\r\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\r\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\r\n                        </>\r\n                    )}\r\n                    {!include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\r\n                        </>\r\n                    )}\r\n                    { chats && chats.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\r\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\r\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </>\r\n                    )}\r\n                    { searchItems && (\r\n                        <div className='edit-filter-chats-search'>\r\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditFilterChats.propTypes = {\r\n    filter: PropTypes.object,\r\n    chats: PropTypes.array,\r\n    mode: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onScroll: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditFilterChats);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport DoneIcon from '../../../Assets/Icons/Done';\r\nimport EditFilterChats from './EditFilterChats';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { isFilterValid } from '../../../Utils/Filter';\r\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './CreateFilter.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass CreateFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            prevFilterId: -1,\r\n            data: null,\r\n            openFilterChats: false,\r\n            mode: null,\r\n            title: '',\r\n            error: false,\r\n            shook: false,\r\n            chats: [],\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { filter, filterId } = props;\r\n        const { prevFilterId } = state;\r\n\r\n        if (filter && prevFilterId !== filterId){\r\n            return {\r\n                prevFilterId: filterId,\r\n                editFilter: {...filter},\r\n                title: filter.title\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [ fetch('data/Folders_2.json') ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { onDone } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.titleRef.current.focus();\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        editFilter.title = title;\r\n\r\n        if (!isFilterValid(editFilter)) {\r\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\r\n            return;\r\n        }\r\n\r\n        onDone && onDone(editFilter);\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleDeleteIncludeContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeNonContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterNonContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeGroups = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_groups: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterGroups')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeChannels = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_channels: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterChannels')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeBots = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_bots: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterBots')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeMuted = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_muted: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeRead = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_read: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeArchived = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_archived: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleOpenFilterChats = async mode => {\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 1000\r\n        });\r\n\r\n        this.setState({\r\n            openFilterChats: true,\r\n            mode,\r\n            chats: result.chat_ids,\r\n            limit: CHAT_SLICE_LIMIT\r\n        })\r\n    };\r\n\r\n    setDefaultFilterTitle() {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (!title) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = editFilter;\r\n\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = editFilter;\r\n\r\n            if (!included_chat_ids.length) {\r\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterContacts')\r\n                    });\r\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterNonContacts')\r\n                    });\r\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('ChatHints')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterBots')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterGroups')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterChannels')\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseFilterChats = () => {\r\n\r\n        this.setDefaultFilterTitle();\r\n\r\n        this.setState({\r\n            openFilterChats: false,\r\n            mode: null\r\n        })\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        let newEditFilter = null;\r\n        switch (type) {\r\n            case 'include_contacts': {\r\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\r\n                break;\r\n            }\r\n            case 'include_non_contacts': {\r\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\r\n                break;\r\n            }\r\n            case 'include_bots': {\r\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\r\n                break;\r\n            }\r\n            case 'include_groups': {\r\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\r\n                break;\r\n            }\r\n            case 'include_channels': {\r\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\r\n                break;\r\n            }\r\n            case 'included_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.included_chat_ids.includes(value)) {\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                    excluded = editFilter.excluded_chat_ids;\r\n                } else {\r\n                    included = [ ...editFilter.included_chat_ids, value ];\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n                break;\r\n            }\r\n            case 'exclude_muted': {\r\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\r\n                break;\r\n            }\r\n            case 'exclude_read': {\r\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\r\n                break;\r\n            }\r\n            case 'exclude_archived': {\r\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\r\n                break;\r\n            }\r\n            case 'excluded_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.excluded_chat_ids.includes(value)) {\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                    included = editFilter.included_chat_ids;\r\n                } else {\r\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('[f] onChange', type, value, newEditFilter);\r\n        if (!newEditFilter) return;\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleTitleChange = () => {\r\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\r\n\r\n        this.setState({\r\n            title\r\n        });\r\n    }\r\n\r\n    handleScroll = event => {\r\n        const scroll = event.target;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\r\n            this.setState({\r\n                limit: this.state.limit + CHAT_SLICE_LIMIT\r\n            })\r\n        }\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, id, onClose } = this.props;\r\n        if (!filter) return null;\r\n\r\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = editFilter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = editFilter;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\r\n                    </div>\r\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='filters-create-animation'>\r\n                        { data && (\r\n                            <React.Suspense fallback={null}>\r\n                                <RLottie\r\n                                    ref={this.lottieRef}\r\n                                    options={{\r\n                                        width: 80,\r\n                                        height: 80,\r\n                                        autoplay: true,\r\n                                        loop: false,\r\n                                        fileId: 'createFilter',\r\n                                        stringData: data\r\n                                    }}\r\n                                    onClick={this.handleAnimationClick}\r\n                                />\r\n                            </React.Suspense>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    <div className='create-filter-title'>\r\n                        <TextField\r\n                            inputRef={this.titleRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FilterNameHint')}\r\n                            value={title}\r\n                            error={error}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\r\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\r\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\r\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\r\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\r\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\r\n                        { included_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\r\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\r\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\r\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\r\n                        { excluded_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\r\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFilter.propTypes = {\r\n    filter: PropTypes.object,\r\n    id: PropTypes.number,\r\n    onDone: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(CreateFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getChatOrder } from './Chat';\r\n\r\nexport function isFilterValid(filter) {\r\n    if (!filter) return false;\r\n\r\n    const {\r\n        include_contacts,\r\n        include_non_contacts,\r\n        include_bots,\r\n        include_groups,\r\n        include_channels,\r\n        included_chat_ids,\r\n        title\r\n    } = filter;\r\n\r\n    if (!title) return false;\r\n\r\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\r\n}\r\n\r\nexport function getFilterSubtitle(t, filterId, chats) {\r\n    if (!chats) return ' ';\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < chats.chat_ids.length; i++) {\r\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    if (!count) {\r\n        return t('FilterNoChats');\r\n    }\r\n\r\n    return count === 1 ? '1 chat' : `${count} chats`;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getFilterSubtitle } from '../../Utils/Filter';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filter.css';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n        this.handleOpenDialog();\r\n    };\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            dialog: true\r\n        })\r\n    };\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            dialog: false\r\n        })\r\n    };\r\n\r\n    handleDeleteCancel = () => {\r\n        this.handleCloseDialog();\r\n    };\r\n\r\n    handleDeleteConfirm = () => {\r\n        const { info } = this.props;\r\n        if (!info) return;\r\n\r\n        this.handleCloseDialog();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, info, onEdit, chats } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { dialog, contextMenu, top, left } = this.state;\r\n\r\n        const { title } = info;\r\n        const subtitle = getFilterSubtitle(t, info.id, chats);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\r\n                    <ListItemText\r\n                        className='settings-list-item-text2'\r\n                        primary={title}\r\n                        secondary={subtitle}\r\n                    />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCancel}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {t('FilterDeleteAlert')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    chats: PropTypes.object,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Filter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './RecommendedFilter.css';\r\n\r\nclass RecommendedFilter extends React.Component {\r\n\r\n    handleAdd = () => {\r\n        const { filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return;\r\n\r\n        const { filter } = recommendedFilter;\r\n\r\n        TdLibController.send({\r\n            '@type': 'createChatFilter',\r\n            filter\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return null;\r\n\r\n        const { filter, description } = recommendedFilter;\r\n\r\n        return (\r\n            <ListItem\r\n                className='settings-list-item2'\r\n                role={undefined}\r\n                button>\r\n                <ListItemText\r\n                    className='settings-list-item-text'\r\n                    primary={filter.title}\r\n                    secondary={description}\r\n                />\r\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\r\n                    {t('Add')}\r\n                </Button>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecommendedFilter.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(RecommendedFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport CreateFilter from './CreateFilter';\r\nimport Filter from '../../Tile/Filter';\r\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport FilterStore from '../../../Stores/FilterStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Filters.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null,\r\n            editFilter: null,\r\n            recommendedFilters: null,\r\n            chats: null,\r\n            filtersMap: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n        this.loadData();\r\n\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        setTimeout(() => {\r\n            this.loadData();\r\n        }, 100);\r\n    };\r\n\r\n    async loadData() {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_chat_id: 0,\r\n            offset_order: '9223372036854775807',\r\n            limit: 1000\r\n        });\r\n\r\n        const { filters: filterInfo } = FilterStore;\r\n        const promises = [];\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            promises.push(TdLibController.send({\r\n                '@type': 'getChatFilter',\r\n                chat_filter_id: filterInfo[i].id\r\n            }).catch(e => null));\r\n        }\r\n        const filters = await Promise.all(promises);\r\n\r\n        const filtersMap = new Map();\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            filtersMap.set(filterInfo[i].id, filters[i]);\r\n        }\r\n\r\n        const recommendedFilters = await TdLibController.send({\r\n            '@type': 'getRecommendedChatFilters'\r\n        });\r\n\r\n        this.setState({\r\n            chats,\r\n            filtersMap,\r\n            recommendedFilters\r\n        });\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_1.json'),\r\n                fetch('data/Folders_2.json'),\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleCreateFilter = () => {\r\n        const { t } = this.props;\r\n        const { filters } = FilterStore;\r\n        if (filters.length >= FILTER_COUNT_MAX) {\r\n            this.handleScheduledAction(t('FilterCreateError'));\r\n            return;\r\n        }\r\n\r\n        const filter = {\r\n            '@type': 'chatFiler',\r\n            title: '',\r\n            icon_name: '',\r\n            pinned_chat_ids: [],\r\n            included_chat_ids: [],\r\n            excluded_chat_ids: [],\r\n            exclude_muted: false,\r\n            exclude_read: false,\r\n            exclude_archived: false,\r\n            include_contacts: false,\r\n            include_non_contacts: false,\r\n            include_bots: false,\r\n            include_groups: false,\r\n            include_channels: false\r\n        };\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: -1,\r\n            filter\r\n        });\r\n    };\r\n\r\n    handleCloseFilter = () => {\r\n        this.setState({\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null\r\n        })\r\n    };\r\n\r\n    handleEditFilter = async info => {\r\n        const filter = await TdLibController.send({\r\n            '@type': 'getChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n\r\n        if (!filter) return;\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: info.id,\r\n            filter\r\n        })\r\n    };\r\n\r\n    handleDone = filter => {\r\n        const { filterId } = this.state;\r\n\r\n        this.handleCloseFilter();\r\n        if (!filter) return;\r\n\r\n        if (filterId !== -1) {\r\n            TdLibController.send({\r\n                '@type': 'editChatFilter',\r\n                chat_filter_id: filterId,\r\n                filter\r\n            });\r\n        } else {\r\n            TdLibController.send({\r\n                '@type': 'createChatFilter',\r\n                filter\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        const hasFilters = filters && filters.length > 0;\r\n        const hasRecommendedFilters = recommendedFilters\r\n            && recommendedFilters.chat_filters.length > 0\r\n            && (!filters || filters.length < FILTER_COUNT_MAX);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section filters-create'>\r\n                        <div className='filters-create-animation'>\r\n                            { data && (\r\n                                <React.Suspense fallback={null}>\r\n                                    <RLottie\r\n                                        ref={this.lottieRef}\r\n                                        options={{\r\n                                            width: 80,\r\n                                            height: 80,\r\n                                            autoplay: true,\r\n                                            loop: false,\r\n                                            fileId: 'filters',\r\n                                            stringData: data\r\n                                        }}\r\n                                        onClick={this.handleAnimationClick}\r\n                                    />\r\n                                </React.Suspense>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\r\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\r\n                            {t('CreateNewFilter')}\r\n                        </Button>\r\n                    </div>\r\n                    { hasFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('Filters')}</SectionHeader>\r\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    { hasRecommendedFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\r\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\r\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded  } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\r\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n// 设置--常规设置--展示风格\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            type: this.props.theme.palette.type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ type: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} \r\n                            // label='Light' \r\n                            label='白天'\r\n                            />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />}\r\n                            //  label='Dark' \r\n                            label='黑夜'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                // label='Red'\r\n                                label='红'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                // label='Orange'\r\n                                label='橙'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                // label='Amber'\r\n                                label='黄'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                // label='Green'\r\n                                label='绿'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                // label='Blue'\r\n                                label='蓝'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                // label='Indigo'\r\n                                label='靛'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                // label='Deep Purple'\r\n                                label='紫'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            backgrounds: null,\r\n            openChatBackground: false\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <SharedMediaIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\r\n                        {/*</ListItem>*/}\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Appearance')} />\r\n                        </ListItem>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions, t } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport { unblockSender } from '../../../Actions/Message';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\r\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\r\n    }\r\n\r\n    handleUnblockUser = async userId => {\r\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        { users.senders.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {\r\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        users: null,\r\n        openBlockedUsers: false,\r\n        openActiveSessions: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, senders } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    senders: senders.filter(x => x.user_id !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).then(sessions => this.setState({ sessions }));\r\n\r\n        TdLibController.send({\r\n            '@type': 'getBlockedMessageSenders',\r\n            offset: 0,\r\n            limit: 100\r\n        }).then(users => this.setState({ users }));\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    {/*<div className='sidebar-page-section-divider' />*/}\r\n                    {/*<div className='sidebar-page-section'>*/}\r\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\r\n                    {/*            secondary={t('LastSeenContacts')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('LastSeenTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('WhoCanAddMe')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport Filters from './Filters';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false,\r\n            openFilters: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!photo) return;\r\n\r\n        const store = FileStore.get();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatContent(store, chatId, true);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    openFilters = () => {\r\n        this.setState({\r\n            openFilters: true\r\n        });\r\n    };\r\n\r\n    closeFilters = () => {\r\n        this.setState({\r\n            openFilters: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, popup } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    popup={popup}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                    onFilters={this.openFilters}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\r\n                    <Filters />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { items, searchItems } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            newContentAvailable: false,\r\n            isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable, isSmallWidth } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewChannel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false,\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { error } = this.state;\r\n        const { defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n\r\n        this.handleClose();\r\n\r\n        const description = this.descriptionRef.current.value;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createNewSupergroupChat',\r\n            title,\r\n            description,\r\n            is_channel: true,\r\n            location: null\r\n        });\r\n\r\n        if (defaultPhotoFile) {\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n            });\r\n        } else if (defaultPhoto) {\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\r\n            });\r\n        }\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewChannel')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('EnterChannelName')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <TextField\r\n                                inputRef={this.descriptionRef}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('DescriptionOptionalPlaceholder')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewChannel.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewChannel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport UserTile from './UserTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport './UserChip.css';\r\n\r\nclass UserChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <UserTile userId={userId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getUserShortName(userId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserChip.propTypes = {\r\n    userId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default UserChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport UserChip from '../Tile/UserChip';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, selected, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null,\r\n            selectedItems: {\r\n                array: [],\r\n                map: new Map()\r\n            },\r\n            focusedItem: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    getUserIds() {\r\n        return this.state.selectedItems.array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        const { map, array } = selectedItems;\r\n\r\n        const newMap = new Map(map);\r\n        let newArray;\r\n        let newFocusedItem = null;\r\n        let isDeleting = false;\r\n        if (map.has(userId)) {\r\n            newMap.delete(userId);\r\n            newArray = array.filter(x => x !== userId);\r\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\r\n            isDeleting = true;\r\n        } else {\r\n            newMap.set(userId, userId);\r\n            newArray = array.concat([userId]);\r\n            newFocusedItem = null;\r\n        }\r\n\r\n        const input = this.searchInputRef.current;\r\n        input.focus();\r\n        if (!isDeleting) {\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        this.setState({\r\n            focusedItem: newFocusedItem,\r\n            selectedItems: {\r\n                array: newArray,\r\n                map: newMap\r\n            }\r\n        }, () => {\r\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\r\n            this.animateItems(prevMap);\r\n        });\r\n    };\r\n\r\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                                   + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                                     + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 101);\r\n        });\r\n    }\r\n\r\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\r\n        const userId = items[index];\r\n        const isSelected = selectedItemsMap.has(userId);\r\n\r\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                publicItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchContacts',\r\n                query,\r\n                limit: 20\r\n            })\r\n        );\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchPublicChats',\r\n                query\r\n            })\r\n        );\r\n        const [searchItems, publicChats] = await Promise.all(promises);\r\n\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const publicItems = { '@type': 'users', user_ids: [] };\r\n        publicChats.chat_ids.reduce((array, chatId) => {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\r\n                array.push(chat.type.user_id);\r\n            }\r\n            return array;\r\n        }, publicItems.user_ids);\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids);\r\n        loadUsersContent(store, publicItems.user_ids);\r\n\r\n        this.setState({ searchItems, publicItems, focusedItem: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleSearchClose = event => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { map } = selectedItems;\r\n        if (!map.has(focusedItem)) return;\r\n\r\n        event.stopPropagation();\r\n        event.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        })\r\n    };\r\n\r\n    handleBackspace = () => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { array, map } = selectedItems;\r\n        if (!array) return;\r\n        if (!array.length) return;\r\n\r\n        if (map.has(focusedItem)) {\r\n            this.handleOpenUser(focusedItem);\r\n            return;\r\n        }\r\n\r\n        const lastItem = array[array.length - 1];\r\n        if (!lastItem) return;\r\n\r\n        this.setState({\r\n            focusedItem: lastItem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        this.itemsRef.clear();\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='contacts-border'/>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && publicItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAddParticipants.propTypes = {\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(AddParticipants);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport SectionHeader from './SectionHeader';\r\nimport User from '../Tile/User';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './NewGroupParams.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass NewGroupParams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userIds } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, userIds);\r\n    }\r\n\r\n    getTitle() {\r\n        const { error } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return title;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        if (!onClose) return;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\r\n        const { error } = this.state;\r\n\r\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\r\n\r\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewGroup')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('GroupName')}\r\n                                defaultValue={''}\r\n                            />\r\n                        </div>\r\n                        <SectionHeader>{itemsCaption}</SectionHeader>\r\n                        {items}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroupParams.propTypes = {\r\n    userIds: PropTypes.array,\r\n    defaultPhotoURL: PropTypes.string,\r\n    onChoosePhoto: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(NewGroupParams);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddParticipants from './AddParticipants';\r\nimport NewGroupParams from './NewGroupParams';\r\nimport SidebarPage from './SidebarPage';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addParticipantsRef = React.createRef();\r\n        this.newGroupParamsRef = React.createRef();\r\n\r\n        this.state = {\r\n            openParams: false,\r\n            userIds: [],\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleDone = async () => {\r\n        const { openParams } = this.state;\r\n        if (!openParams) {\r\n            const userIds = this.addParticipantsRef.current.getUserIds();\r\n            if (!userIds.length) return;\r\n\r\n            this.setState({\r\n                openParams: true,\r\n                userIds\r\n            })\r\n        } else {\r\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n            const title = this.newGroupParamsRef.current.getTitle();\r\n            if (!title) {\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n\r\n            const chat = await TdLibController.send({\r\n                '@type': 'createNewSupergroupChat',\r\n                title,\r\n                is_channel: false,\r\n                description: '',\r\n                location: null\r\n            });\r\n\r\n            if (defaultPhotoFile) {\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                });\r\n            } else if (defaultPhoto) {\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\r\n                });\r\n            }\r\n\r\n            if (userIds.length > 0) {\r\n                TdLibController.send({\r\n                    '@type': 'addChatMembers',\r\n                    chat_id: chat.id,\r\n                    user_ids: userIds\r\n                });\r\n            }\r\n\r\n            openChat(chat.id);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleCloseParams = () => {\r\n        this.setState({\r\n            openParams: false,\r\n            userIds: []\r\n        })\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { openParams, userIds, defaultPhotoURL } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\r\n\r\n                <SidebarPage open={openParams}>\r\n                    <NewGroupParams\r\n                        ref={this.newGroupParamsRef}\r\n                        defaultPhotoURL={defaultPhotoURL}\r\n                        userIds={userIds}\r\n                        onChoosePhoto={this.handleChoosePhoto}\r\n                        onClose={this.handleCloseParams}\r\n                    />\r\n                </SidebarPage>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroup.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewGroup);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Contacts from '../ColumnLeft/Contacts';\r\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\r\nimport Search from '../ColumnLeft/Search/Search';\r\nimport Settings from '../ColumnLeft/Settings/Settings';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatInfoDialog.css';\r\nimport { openChat } from '../../Actions/Client';\r\nimport NewChannel from '../ColumnLeft/NewChannel';\r\nimport NewGroup from '../ColumnLeft/NewGroup';\r\n\r\nclass SidebarDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false,\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        this.query = query;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDialogEnter = () => {\r\n        if (!this.query) return;\r\n\r\n        const header = this.headerRef.current;\r\n        if (header) {\r\n            header.setInitQuery(this.query);\r\n        }\r\n\r\n        this.query = null;\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n            openSearch: false\r\n        });\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        this.handleCloseSearch();\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\r\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                onEnter={this.handleDialogEnter}\r\n                >\r\n                {openSettings && <Settings chatId={meChatId} popup/>}\r\n                {openContacts && <Contacts popup />}\r\n                {openNewGroup && <NewGroup popup/>}\r\n                {openNewChannel && <NewChannel popup />}\r\n                {openSearch && (\r\n                    <>\r\n                        <DialogsHeader\r\n                            ref={this.headerRef}\r\n                            openSearch={true}\r\n                            timeout={false}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                            popup\r\n                        />\r\n                        <div className='search-content'>\r\n                            <Search\r\n                                chatId={searchChatId}\r\n                                text={searchText}\r\n                                onSelectMessage={this.handleSelectMessage}\r\n                                onClose={this.handleCloseSearch}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarDialog.propTypes = {};\r\n\r\nexport default SidebarDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { orderCompare } from './Common';\r\nimport { getChatOrder } from './Chat';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\r\n                if (order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order, id: chatId, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport Filters from './Filters';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport SidebarDialog from '../Popup/SidebarDialog';\r\nimport NewGroup from './NewGroup';\r\nimport NewChannel from './NewChannel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { duration } from '@material-ui/core/styles/transitions';\r\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\n\r\nconst defaultTimeout = {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n};\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            mainItems: [],\r\n            archiveItems: [],\r\n\r\n            timeout: defaultTimeout,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.mainItems !== mainItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        this.handleSaveCache();\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        if (!isSmallWidth) return;\r\n\r\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\r\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\r\n            this.setState({\r\n                    openContacts: false,\r\n                    openSettings: false,\r\n                    openSearch: false,\r\n                    openNewGroup: false,\r\n                    openNewChannel: false,\r\n                    timeout: 0\r\n                }, () => {\r\n                    this.setState({\r\n                        timeout: defaultTimeout\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.load()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    async saveCache() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListArchive' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        const [mainChats, archiveChats] = await Promise.all(promises);\r\n\r\n        const { filters } = FilterStore;\r\n\r\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openArchive: false,\r\n                openContacts: false,\r\n                openSettings: false,\r\n                openNewGroup: false,\r\n                openNewChannel: false,\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    handleCloseNewGroup = () => {\r\n        this.setState({ openNewGroup: false });\r\n    };\r\n\r\n    handleCloseNewChannel = () => {\r\n        this.setState({ openNewChannel: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            timeout,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache ? cache.chats || [] : null;\r\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='dialogs'>\r\n                    <div className='sidebar-page'>\r\n                        <DialogsHeader\r\n                            ref={this.dialogsHeaderRef}\r\n                            openSearch={openSearch}\r\n                            timeout={timeout !== 0}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                        />\r\n                        <div className='dialogs-content'>\r\n                            <div className='dialogs-content-internal'>\r\n                                <Filters/>\r\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\r\n                                <DialogsList\r\n                                    type='chatListMain'\r\n                                    ref={this.dialogListRef}\r\n                                    cacheItems={mainCacheItems}\r\n                                    items={mainItems}\r\n                                    showArchive={showArchive}\r\n                                    archiveTitle={archiveTitle}\r\n                                    open={true}\r\n                                    onSaveCache={this.handleSaveCache}\r\n                                />\r\n                            </div>\r\n                            <CSSTransition\r\n                                classNames='search'\r\n                                timeout={timeout}\r\n                                in={openSearch}\r\n                                mountOnEnter={true}\r\n                                unmountOnExit={true}>\r\n                                <Search\r\n                                    chatId={searchChatId}\r\n                                    text={searchText}\r\n                                    onSelectMessage={this.handleSelectMessage}\r\n                                    onClose={this.handleCloseSearch}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                        <UpdatePanel />\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\r\n                        <NewGroup />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\r\n                        <NewChannel />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarDialog/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController'; \r\nimport './ChatInfoDialog.css'; \r\nimport { isAdmin } from '../../Utils/Chat';  \r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId, \r\n        permissions:null,\r\n        admin:false\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId; \r\n    } \r\n\r\n    componentDidMount() {  \r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }  \r\n\r\n    componentWillUnmount() { \r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n \r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }  \r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    }; \r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;   \r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );  \r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'Microphone'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport './AttachButton.css';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    classes={{\r\n                        paper: 'attach-button-paper'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from '../../Utils/Url';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    onClientUpdateBlob = update => {\r\n        const { chatId, messageId, thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\r\n        if (!thumbnail) return null;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(file);\r\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n\r\n        return (\r\n            <div className='reply-tile' onClick={onClick}>\r\n                {miniSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-mini-blurred': true }\r\n                        )}\r\n                        draggable={false}\r\n                        src={miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n                {src && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { closePinned, openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        closePinned();\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {thumbnail && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            minithumbnail={minithumbnail}\r\n                            thumbnail={thumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './RecordTimer.css';\r\n\r\nclass RecordTimer extends React.Component {\r\n    state = { };\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    onClientUpdateRecordStart = () => {\r\n        this.timer = setInterval(() => {\r\n            const now = new Date();\r\n            const diff = now - this.startTime;\r\n\r\n            // console.log('[recordTimer] ');\r\n            this.setState({\r\n                time: diff\r\n            });\r\n        }, 25);\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onClientUpdateRecordStop = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateRecordError = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    normalizeM(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr += '0'\r\n        } else if (msStr.length > 2) {\r\n            msStr = msStr.substr(0, 2);\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    normalizeS(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr = '0' + msStr;\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    msToTime(s) {\r\n        let ms = (s % 1000);\r\n        s = (s - ms) / 1000;\r\n        let secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        let mins = s % 60;\r\n        let hrs = (s - mins) / 60;\r\n\r\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\r\n        if (hrs > 0) {\r\n            result = hrs + ':' + result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        if (!time) return null;\r\n\r\n        return (\r\n            <div className='record-timer'>\r\n                {this.msToTime(time)}\r\n                <div className='record-timer-icon'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecordTimer.propTypes = {};\r\n\r\nexport default RecordTimer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { audio, photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        width,\r\n                        height,\r\n                        caption\r\n                    }\r\n                    : {\r\n                        '@type': 'inputMessageDocument',\r\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        thumbnail: null,\r\n                        caption\r\n                    };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            } else if (audio) {\r\n                const { duration, title, performer } = audio;\r\n\r\n                content = {\r\n                    '@type': 'inputMessageAudio',\r\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    duration,\r\n                    title,\r\n                    performer,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media =\r\n            editMedia\r\n                ? getMedia({ content: editMedia })\r\n                : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Save') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    { isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    { !isEditing && isPhoto && (\r\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\r\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MediaRecorder from 'opus-media-recorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport RecordTimer from './RecordTimer';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\r\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\r\nimport AnimationStore from '../../Stores/AnimationStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        this.state = {\r\n            chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            editMessageId: 0,\r\n            recordingReady: true,\r\n            recordingTime: null,\r\n            recordPermissionDenied: false,\r\n            sendFile: null\r\n        };\r\n\r\n        document.execCommand('defaultParagraphSeparator', false, 'br');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            newDraft,\r\n            files,\r\n            replyToMessageId,\r\n            editMessageId,\r\n            openEditMedia,\r\n            openEditUrl,\r\n            sendFile,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.newDraft !== newDraft) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.files !== files) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.editMessageId !== editMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sendFile !== sendFile) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditUrl !== openEditUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditMedia !== openEditMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingTime !== recordingTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingReady !== recordingReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadDraft() {\r\n        this.setDraft();\r\n        this.setInputFocus();\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraft() {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let innerHTML = null;\r\n        if (editMessageId) {\r\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\r\n        } else {\r\n            innerHTML = element.innerHTML;\r\n        }\r\n\r\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\r\n        this.setChatDraftMessage(draftMessage);\r\n    }\r\n\r\n    selectionChangeListener = () => {\r\n        // console.log('[ed] selectionchange', document.activeElement);\r\n        if (document.activeElement === this.newMessageRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.loadDraft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveDraft();\r\n\r\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\r\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        this.handleCancelRecord();\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n    };\r\n\r\n    onClientUpdateSendText = update => {\r\n        const { text } = update;\r\n\r\n        if (!text) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = text;\r\n        focusInput(element);\r\n    }\r\n\r\n    onClientUpdateInputShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (shook) {\r\n            this.setState({ shook: false }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({ shook: true });\r\n                }, 0);\r\n            });\r\n        } else {\r\n            this.setState({ shook: true });\r\n        }\r\n    };\r\n\r\n    onClientUpdateSendFiles = update => {\r\n        const { files } = update;\r\n        if (!files) return;\r\n\r\n        this.handleSendFiles(Array.from(files));\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n\r\n        if (!editMessageId) return;\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n        if (message_ids.indexOf(editMessageId) === -1) return;\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    onClientUpdateEditMessage = update => {\r\n        const { chatId, messageId } = update;\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        if (!messageId) {\r\n            this.restoreDraftAndSelection();\r\n        } else {\r\n            this.saveDraftAndSelection();\r\n        }\r\n\r\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\r\n        this.setState(\r\n            {\r\n                editMessageId: messageId,\r\n                openEditMedia\r\n            },\r\n            () => {\r\n                if (!this.state.openEditMedia) {\r\n                    this.setEditMessage();\r\n                    this.handleInput();\r\n                    setTimeout(() => {\r\n                        this.focusInput();\r\n                    }, 0);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    restoreDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { beforeEditText } = this;\r\n\r\n        if (beforeEditText) {\r\n            element.innerHTML = beforeEditText.innerHTML;\r\n\r\n            if (!beforeEditText.range) {\r\n                this.focusInput();\r\n                return;\r\n            }\r\n\r\n            const selection = document.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(beforeEditText.range);\r\n\r\n            element.focus();\r\n        } else {\r\n            element.innerHTML = null;\r\n            this.focusInput();\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        this.beforeEditText = {\r\n            innerHTML: element.innerHTML,\r\n            range: this.range\r\n        };\r\n    }\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) return;\r\n\r\n        this.saveDraft();\r\n    };\r\n\r\n    onUpdateChatDraftMessage = update => {\r\n        const { chat_id } = update;\r\n        const { chatId, recordingTime } = this.state;\r\n\r\n        if (recordingTime) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.loadDraft();\r\n    };\r\n\r\n    onClientUpdateAnimationSend = update => {\r\n        const { animation: item } = update;\r\n        if (!item) return;\r\n\r\n        const { animation, thumbnail, width, height, duration } = item;\r\n        if (!animation) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageAnimation',\r\n            animation: {\r\n                '@type': 'inputFileId',\r\n                id: animation.id\r\n            },\r\n            width,\r\n            height,\r\n            duration\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n    };\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId, recordingTime } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId && !recordingTime) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.saveDraft();\r\n        this.beforeEditText = null;\r\n        this.setState(\r\n            {\r\n                chatId: update.nextChatId,\r\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n                editMessageId: 0,\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.loadDraft();\r\n            }\r\n        );\r\n\r\n        this.handleCancelRecord();\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const { chatSelectOptions } = AppStore;\r\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\r\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\r\n            return;\r\n        }\r\n\r\n        const formattedText = getChatDraft(chatId);\r\n        if (formattedText) {\r\n            this.setFormattedText(formattedText);\r\n            this.setState({\r\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\r\n            });\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    };\r\n\r\n    setEditMessage() {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, editMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { text, caption } = content;\r\n        if (!text && !caption) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    }\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n\r\n        setTimeout(() => {\r\n            const element = this.newMessageRef.current;\r\n\r\n            focusInput(element);\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { draft_message } = chat;\r\n        const { text, entities } = getEntities(innerHTML);\r\n        const draftMessage =\r\n            (text && text.length > 0) || entities.length > 0\r\n                ? {\r\n                      '@type': 'draftMessage',\r\n                      reply_to_message_id: replyToMessageId,\r\n                      input_message_text: {\r\n                          '@type': 'inputMessageText',\r\n                          text: {\r\n                              '@type': 'formattedText',\r\n                              text,\r\n                              entities\r\n                          },\r\n                          disable_web_page_preview: false,\r\n                          clear_draft: false\r\n                      }\r\n                  }\r\n                : null;\r\n\r\n        if (draftEquals(draft_message, draftMessage)) {\r\n            return null;\r\n        }\r\n\r\n        return { chatId, draftMessage };\r\n    };\r\n\r\n    handleSubmit = (startRecord = true) => {\r\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\r\n\r\n        if (recordingTime) {\r\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\r\n                return;\r\n            }\r\n\r\n            this.handleStopRecord();\r\n            return;\r\n        } else if (recordingReady) {\r\n            if (startRecord) this.handleRecord();\r\n            return;\r\n        }\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n        this.handleInput();\r\n\r\n        if (!innerHTML) return;\r\n        if (!innerHTML.trim()) return;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const formattedText = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n        const inputContent = {\r\n            '@type': 'inputMessageText',\r\n            text: formattedText,\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        if (editMessageId) {\r\n            const editedMessage = MessageStore.get(chatId, editMessageId);\r\n            if (!editedMessage) return;\r\n\r\n            const { content } = editedMessage;\r\n            if (!content) return;\r\n\r\n            const { text, caption } = content;\r\n            if (text) {\r\n                this.editMessageText(inputContent, result => {});\r\n            } else if (caption) {\r\n                this.editMessageCaption(formattedText);\r\n            }\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            this.sendMessage(inputContent, false, result => {});\r\n        }\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    async getNewItem(file, sendAsFile) {\r\n        if (!file) return null;\r\n\r\n        const caption = this.newMessageRef.current.innerHTML;\r\n        if (caption) {\r\n            this.newMessageRef.current.innerHTML = null;\r\n            this.handleInput();\r\n        }\r\n\r\n        const media = sendAsFile\r\n            ? await getMediaPhotoFromFile(file)\r\n            : await getMediaDocumentFromFile(file);\r\n\r\n        return {\r\n            file,\r\n            media,\r\n            caption\r\n        }\r\n    };\r\n\r\n    handleAttachPhotoComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, true);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(async file => {\r\n                const [width, height] = await readImageSize(file);\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\r\n                    width,\r\n                    height\r\n                };\r\n\r\n                this.handleSendPhoto(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = async () => {\r\n        const { files } = this.attachDocumentRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, false);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(file => {\r\n                const content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\r\n                };\r\n\r\n                this.handleSendDocument(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    setTyping() {\r\n        const { chatId, editMessageId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        if (!innerText) return;\r\n        if (isMeChat(chatId)) return;\r\n        if (editMessageId) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    }\r\n\r\n    setHints() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11 || editMessageId) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n            return true;\r\n        } else if (replyToMessageId) {\r\n            replyMessage(chatId, 0);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n        const { editMessageId, replyToMessageId } = this.state;\r\n\r\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\r\n        //\r\n        // setTimeout(() => {\r\n        //     const { innerText } = this.newMessageRef.current;\r\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\r\n        // }, 1000);\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            // ctrl+alt+0 fix\r\n            case 'Digit0': {\r\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\r\n                    if (editMessageId) return;\r\n                    if (replyToMessageId) return;\r\n\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleSubmit(false);\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // esc\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat && this.handleCancel()) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // arrow up\r\n            case 'ArrowUp': {\r\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const element = this.newMessageRef.current;\r\n                    if (element && !element.innerText) {\r\n                        const { editMessageId } = this.state;\r\n                        if (editMessageId) return;\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateTryEditMessage'\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.sendMessage(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    handleSendAudio = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\r\n    };\r\n\r\n    handleSendVoiceNote = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\r\n    };\r\n\r\n    async handleSendFiles(files) {\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        if (files.length === 1) {\r\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\r\n            if (!newItem) return;\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            this.setState({ files });\r\n        }\r\n    }\r\n\r\n    handlePaste = async event => {\r\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\r\n        if (!items) return;\r\n\r\n        const files = [];\r\n        Array.from(items).forEach(item => {\r\n            if (item.kind.indexOf('file') === 0) {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    files.push(file);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.handleSendFiles(files);\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteConfirm = () => {\r\n        const { files } = this.state;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.handleSendDocument(content, file);\r\n        });\r\n\r\n        this.handlePasteCancel();\r\n    };\r\n\r\n    handlePasteCancel = () => {\r\n        this.setState({ files: null });\r\n    };\r\n\r\n    handleUpdateDraftConfirm = () => {\r\n        const { newDraft } = this.state;\r\n        if (!newDraft) return;\r\n\r\n        this.loadDraft();\r\n        this.handleUpdateDraftCancel();\r\n    };\r\n\r\n    handleUpdateDraftCancel = () => {\r\n        this.setState({ newDraft: null });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (!message) return;\r\n\r\n        const { sending_state, content, chat_id, id } = message;\r\n        if (!sending_state) return;\r\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\r\n        if (content['@type'] !== 'messagePhoto') return;\r\n\r\n        const { photo } = content;\r\n        if (!photo) return;\r\n\r\n        const size = getSize(photo.sizes, PHOTO_SIZE);\r\n        if (!size) return;\r\n\r\n        const { photo: file } = size;\r\n        if (!file) return;\r\n\r\n        FileStore.setBlob(file.id, blob);\r\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\r\n    };\r\n\r\n    async editMessageMedia(content) {\r\n        const { chatId, editMessageId } = this.state;\r\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        return TdLibController.send({\r\n            '@type': 'editMessageMedia',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            input_message_content: content\r\n        });\r\n    }\r\n\r\n    editMessageCaption(caption) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!caption) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageCaption',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            caption\r\n        });\r\n    }\r\n\r\n    async editMessageText(content, callback) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            const result = await TdLibController.send({\r\n                '@type': 'editMessageText',\r\n                chat_id: chatId,\r\n                message_id: editMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            callback(result);\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    sendMessage = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n            const result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    this.saveDraft();\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            if (replyToMessageId) {\r\n                replyMessage(chatId, 0);\r\n            }\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.restoreSelection();\r\n        document.execCommand('insertText', false, emoji.native);\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        this.setTyping();\r\n        this.setHints();\r\n        this.setRecordingReadyState();\r\n\r\n        // const { text, position } = this.getTextAndCaretPosition();\r\n        // this.searchUsernameOrHashtag(text, position, [], false);\r\n    };\r\n\r\n    getTextAndCaretPosition = () => {\r\n        const { current: input } = this.newMessageRef;\r\n        if (!input) return;\r\n\r\n        input.focus()\r\n        let _range = document.getSelection().getRangeAt(0);\r\n        let range = _range.cloneRange();\r\n        range.selectNodeContents(input);\r\n        range.setEnd(_range.endContainer, _range.endOffset);\r\n\r\n        return { text: input.innerText, position: range.toString().length };\r\n    };\r\n\r\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\r\n        const { chatId } = this.state;\r\n\r\n        const searchResultUsernames = [];\r\n\r\n        if (this.cancelDelayRunnable) {\r\n            clearTimeout(this.cancelDelayRunnable);\r\n            this.cancelDelayRunnable = null;\r\n        }\r\n\r\n        const info = getChatFullInfo(chatId);\r\n        const needUsernames = true;\r\n        const needBotContext = true;\r\n\r\n        const now = Date.now();\r\n        this.now = now;\r\n\r\n        let searchPosition = position;\r\n        if (text.length > 0) {\r\n            searchPosition--;\r\n        }\r\n\r\n        this.lastText = text;\r\n        this.lastUsernameOnly = usernameOnly;\r\n\r\n        let foundType = -1;\r\n        let result = '';\r\n        let resultStartPosition;\r\n        let resultLength;\r\n\r\n        let dogPosition = -1;\r\n        if (usernameOnly) {\r\n            result += text.substring(1);\r\n            resultStartPosition = 0;\r\n            resultLength = result.length;\r\n            foundType = 0;\r\n        } else {\r\n            for (let i = searchPosition; i >= 0; i--) {\r\n                if (i >= text.length){\r\n                    continue;\r\n                }\r\n                let ch = text[i];\r\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\r\n                    if (ch === '@') {\r\n                        if (needUsernames || needBotContext && i === 0){\r\n                            if (!info && i !== 0) {\r\n                                this.lastText = text;\r\n                                this.lastPosition = position;\r\n                                this.messages = messages;\r\n                                this.closeHints(now);\r\n                                return;\r\n                            }\r\n                            dogPosition = i;\r\n                            foundType = 0;\r\n                            resultStartPosition = i;\r\n                            resultLength = result.length + 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = ch + result;\r\n            }\r\n        }\r\n\r\n        if (foundType === -1) {\r\n            this.closeHints(now);\r\n            return;\r\n        }\r\n\r\n        if (foundType === 0) {\r\n            const users = [];\r\n            const usersMap = new Map();\r\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\r\n                const { sender } = messages[i];\r\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\r\n                    usersMap.set(sender.user_id, sender.user_id);\r\n                    users.push(sender.user_id);\r\n                }\r\n            }\r\n\r\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\r\n            const hasSpace = usernameString.indexOf(' ') >= 0;\r\n            const newResult = [];\r\n            const newResultsMap = new Map();\r\n            const newMap = new Map();\r\n\r\n            const inlineBots = [];\r\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\r\n\r\n            }\r\n\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && info && info.members) {\r\n                for (let i = -1; i < info.members.length; i++) {\r\n                    let username;\r\n                    let firstName;\r\n                    let lastName;\r\n                    let object;\r\n                    let id;\r\n                    if (i === -1) {\r\n                        if (!usernameString.length) {\r\n                            newResult.push(chat);\r\n                            continue;\r\n                        }\r\n                        firstName = chat.title;\r\n                        lastName = '';\r\n                        username = chat.username;\r\n                        object = chat;\r\n                        id = -chat.id;\r\n                    } else {\r\n                        const { user_id } = info.members[i];\r\n                        const user = UserStore.get(user_id);\r\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\r\n                            continue;\r\n                        }\r\n                        if (!usernameString.length) {\r\n                            if (!isDeletedUser(user_id)) {\r\n                                newResult.push(user);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        firstName = user.first_name;\r\n                        lastName = user.last_name;\r\n                        username = user.username;\r\n                        object = user;\r\n                        id = user.id;\r\n                    }\r\n\r\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\r\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\r\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\r\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\r\n                        newResult.push(object);\r\n                        newMap.set(id, object);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (isSupergroup(chatId) && usernameString.length > 0) {\r\n                if (newResult.length < 5) {\r\n                    this.cancelDelayRunnable = setTimeout(() => {\r\n                        this.cancelDelayRunnable = null;\r\n                        this.showUsersResult(now, newResult, newMap, true);\r\n                    }, 0);\r\n                } else {\r\n                    this.showUsersResult(now, newResult, newMap, true);\r\n                }\r\n\r\n                setTimeout(async () => {\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'searchChatMembers',\r\n                        chat_id: chatId,\r\n                        query: usernameString,\r\n                        limit: 20,\r\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\r\n                    });\r\n\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const { members } = result;\r\n                    if (members.length > 0) {\r\n                        for (let i = 0; i < members.length; i++) {\r\n                            const { user_id } = members[i];\r\n                            if (isMeUser(user_id)) {\r\n                                continue;\r\n                            }\r\n                            const user = UserStore.get(user_id);\r\n                            if (!user) {\r\n                                continue;\r\n                            }\r\n\r\n                            searchResultUsernames.push(user);\r\n                        }\r\n\r\n                        this.notifyDataSetChanged(now, searchResultUsernames);\r\n                    }\r\n\r\n\r\n                }, 200);\r\n            } else {\r\n                this.showUsersResult(now, newResult, newMap, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    notifyDataSetChanged(id, searchResultUsernames) {\r\n        console.log('[search] global', searchResultUsernames);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsGlobal',\r\n            id,\r\n            global: searchResultUsernames\r\n        });\r\n    }\r\n\r\n    showUsersResult(id, newResult, newMap, notify) {\r\n        console.log('[search] local', newResult);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsLocal',\r\n            id,\r\n            local: newResult\r\n        });\r\n    }\r\n\r\n    closeHints(id) {\r\n        console.log('[search] close');\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsClose',\r\n            id\r\n        });\r\n    }\r\n\r\n    openHints() {\r\n\r\n    }\r\n\r\n    setRecordingReadyState() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText && !editMessageId) {\r\n            this.setState({\r\n                recordingReady: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                recordingReady: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            this.focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.newMessageRef.current.focus();\r\n    }\r\n\r\n    focusInput = () => {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n        if (!element.childNodes.length) {\r\n            element.focus();\r\n            return;\r\n        }\r\n\r\n        const lastTextNode = findLastTextNode(element);\r\n        if (!lastTextNode) {\r\n            return;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.setStart(lastTextNode, lastTextNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        element.focus();\r\n    };\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleCancelEditMedia = () => {\r\n        this.closeEditMediaDialog();\r\n    };\r\n\r\n    handleEditMedia = async (caption, content) => {\r\n        if (content) {\r\n            const message = await this.editMessageMedia(content);\r\n            if (message) {\r\n                const { content: editContent } = message;\r\n                switch (editContent['@type']) {\r\n                    case 'messagePhoto': {\r\n                        const { photo: sendPhoto } = content;\r\n                        if (!sendPhoto) break;\r\n\r\n                        const { data: blob } = sendPhoto;\r\n                        if (!blob) break;\r\n\r\n                        const { photo } = editContent;\r\n                        if (!photo) break;\r\n\r\n                        const iSize = photo.sizes.find(x => x.type === 'i');\r\n                        if (!iSize) break;\r\n\r\n                        const { photo: file } = iSize;\r\n                        if (file) {\r\n                            FileStore.setBlob(file.id, blob);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.editMessageCaption(caption);\r\n    };\r\n\r\n    handleSendMedia = (content, file) => {\r\n        this.closeEditMediaDialog(false);\r\n\r\n        switch (content['@type']) {\r\n            case 'inputMessageAudio': {\r\n                this.handleSendAudio(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessagePhoto': {\r\n                this.handleSendPhoto(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessageDocument': {\r\n                this.handleSendDocument(content, file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    closeEditMediaDialog(cancel = true) {\r\n        const { newItem } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                openEditMedia: false,\r\n                newItem: null\r\n            },\r\n            () => {\r\n                if (cancel && newItem && newItem.caption) {\r\n                    this.newMessageRef.current.innerHTML = newItem.caption;\r\n                    this.focusInput();\r\n                    this.handleInput();\r\n                } else {\r\n                    this.restoreSelection();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleHeaderClick = () => {\r\n        setTimeout(() => this.restoreSelection(), 0);\r\n    };\r\n\r\n    handleStopRecord = (cancelled = false) => {\r\n        if (!this.recorder) return;\r\n\r\n        this.recorder.cancelled = cancelled;\r\n        this.recorder.stop();\r\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\r\n    }\r\n\r\n    handleCancelRecord = () => {\r\n        this.handleStopRecord(true);\r\n    }\r\n\r\n    handleRecord = async () => {\r\n        if (this.recorder) return;\r\n\r\n        let stream = null;\r\n        try{\r\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            if (this.recorder) return;\r\n        } catch { }\r\n\r\n        if (!stream) {\r\n            this.setState({\r\n                recordPermissionDenied: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const constraints = {\r\n            channelCount: 1,\r\n            sampleRate: 48000,\r\n        };\r\n\r\n        const track = stream.getAudioTracks()[0];\r\n        track.applyConstraints(constraints)\r\n\r\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\r\n        const workerOptions = {\r\n            encoderWorkerFactory: function () {\r\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\r\n            },\r\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\r\n        };\r\n\r\n        const recorder = new MediaRecorder(stream, options, workerOptions);\r\n\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = e => {\r\n            chunks.push(e.data);\r\n        };\r\n        recorder.onstart = () => {\r\n\r\n        };\r\n        recorder.onstop = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            const { cancelled } = this.recorder;\r\n            this.recorder = null;\r\n\r\n            this.loadDraft();\r\n            if (cancelled) {\r\n                return;\r\n            }\r\n\r\n            // console.log('stop');\r\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\r\n            const audioURL = window.URL.createObjectURL(blob);\r\n\r\n            const audio = new Audio(audioURL);\r\n            audio.oncanplay = () => {\r\n                const content = {\r\n                    '@type': 'inputMessageVoiceNote',\r\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\r\n                    duration: Math.trunc(audio.duration),\r\n                    waveform: '',\r\n                    caption: null\r\n                };\r\n\r\n                this.handleSendVoiceNote(content, blob);\r\n            };\r\n        };\r\n        recorder.onerror = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            this.loadDraft();\r\n            // console.log('error', e);\r\n        };\r\n\r\n        this.recorder = recorder;\r\n        this.recorder.start(50);\r\n        this.startTime = new Date();\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\r\n        this.setState({ recordingTime: new Date() });\r\n    }\r\n\r\n    handleClosePermission = () => {\r\n        this.setState({\r\n            recordPermissionDenied: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            editMessageId,\r\n            newItem,\r\n            replyToMessageId,\r\n            files,\r\n            newDraft,\r\n            defaultText,\r\n            defaultUrl,\r\n            openEditUrl,\r\n            openEditMedia,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\r\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\r\n        if (editMessageId) {\r\n            icon = <DoneIcon/>;\r\n        }\r\n\r\n        return (\r\n            <div className='inputbox-background'>\r\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\r\n                    <div className={classNames('inputbox-bubble')}>\r\n                        <InputBoxHeader\r\n                            chatId={chatId}\r\n                            messageId={replyToMessageId}\r\n                            editMessageId={openEditMedia ? 0 : editMessageId}\r\n                            onClick={this.handleHeaderClick}\r\n                        />\r\n                        <div className='inputbox-wrapper'>\r\n                            <div className='inputbox-left-column'>\r\n                                <React.Suspense\r\n                                    fallback={\r\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\r\n                                            <InsertEmoticonIcon />\r\n                                        </IconButton>\r\n                                    }>\r\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                                </React.Suspense>\r\n                            </div>\r\n                            <div className='inputbox-middle-column'>\r\n                                <div\r\n                                    id='inputbox-message'\r\n                                    className='scrollbars-hidden'\r\n                                    ref={this.newMessageRef}\r\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onKeyDown={this.handleKeyDown}\r\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\r\n                                    onPaste={this.handlePaste}\r\n                                    onInput={this.handleInput}\r\n                                />\r\n                            </div>\r\n                            <div className='inputbox-right-column'>\r\n                                <RecordTimer/>\r\n                                <input\r\n                                    ref={this.attachDocumentRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    onChange={this.handleAttachDocumentComplete}\r\n                                />\r\n                                <input\r\n                                    ref={this.attachPhotoRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    accept='image/*'\r\n                                    onChange={this.handleAttachPhotoComplete}\r\n                                />\r\n                                {!Boolean(editMessageId) && !recordingTime && (\r\n                                    <AttachButton\r\n                                        chatId={chatId}\r\n                                        onAttachPhoto={this.handleAttachPhoto}\r\n                                        onAttachDocument={this.handleAttachDocument}\r\n                                        onAttachPoll={this.handleAttachPoll}\r\n                                    />\r\n                                )}\r\n\r\n                                {/*<IconButton>*/}\r\n                                {/*<KeyboardVoiceIcon />*/}\r\n                                {/*</IconButton>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { recordingTime && (\r\n                        <div className='inputbox-cancel-record-button-background'>\r\n                            <IconButton\r\n                                className='inputbox-cancel-record-button'\r\n                                aria-label='Delete'\r\n                                size='small'\r\n                                color='secondary'\r\n                                onClick={this.handleCancelRecord}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                    <div className='inputbox-send-button-background'>\r\n                        <IconButton\r\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\r\n                            aria-label='Send'\r\n                            size='small'\r\n                            onClick={this.handleSubmit}>\r\n                            {icon}\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\r\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n                <EditMediaDialog\r\n                    open={openEditMedia}\r\n                    chatId={chatId}\r\n                    messageId={editMessageId}\r\n                    newItem={newItem}\r\n                    onEdit={this.handleEditMedia}\r\n                    onSend={this.handleSendMedia}\r\n                    onCancel={this.handleCancelEditMedia}\r\n                />\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={recordPermissionDenied}\r\n                    onClose={this.handleClosePermission}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClosePermission} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className='footer-command'>\r\n                <div className='inputbox'>\r\n                    <div className='inputbox-bubble'>\r\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\r\n                            {command}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\r\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const { is_blocked, last_message } = chat;\r\n\r\n                return {\r\n                    prevChatId: chatId,\r\n\r\n                    isBlocked: is_blocked,\r\n                    hasLastMessage: Boolean(last_message)\r\n                };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId, options } = this.props;\r\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.options !== options) {\r\n            return true;\r\n        }\r\n\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasLastMessage !== hasLastMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isBlocked !== isBlocked) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n\r\n        this.setState({\r\n            clearHistory: update.inProgress\r\n        });\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chat_id, last_message } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            hasLastMessage: Boolean(last_message)\r\n        });\r\n    };\r\n\r\n    onUpdateChatIsBlocked = update => {\r\n        const { chat_id, is_blocked } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            isBlocked: is_blocked\r\n        });\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    handleUnblock = () => {\r\n        const { chatId } = this.props;\r\n\r\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\r\n    };\r\n\r\n    handleStartBot = async () => {\r\n        const { chatId, options } = this.props;\r\n\r\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n        if (options && options.botStartMessage) {\r\n            const { botUserId, parameter } = options.botStartMessage;\r\n\r\n            await sendBotStartMessage(chatId, botUserId, parameter);\r\n        } else {\r\n            await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: 0,\r\n                input_message_content: {\r\n                    '@type': 'inputMessageText',\r\n                    text: {\r\n                        '@type': 'formattedText',\r\n                        text: '/start',\r\n                        entities: []\r\n                    },\r\n                    disable_web_page_preview: true,\r\n                    clear_draft: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, options, t } = this.props;\r\n        const { hasLastMessage, clearHistory } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type, is_blocked } = chat;\r\n        if (!type) return null;\r\n\r\n        if (is_blocked) {\r\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\r\n        }\r\n\r\n        if (options && options.botStartMessage) {\r\n            const isBot = isBotChat(chatId);\r\n            if (isBot) {\r\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n            }\r\n        }\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret':\r\n            case 'chatTypePrivate': {\r\n                const isBot = isBotChat(chatId);\r\n                if (isBot && (!hasLastMessage || clearHistory)) {\r\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n                }\r\n\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'AddMember'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\r\n    'Broom'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\r\nimport BroomIcon from '../../Assets/Icons/Broom';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport RemoveMemberIcon from '../../Assets/Icons/RemoveMember';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\r\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage, canSwitchBlocked, getChatSender } from '../../Utils/Chat';\r\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { modalManager } from '../../Utils/Modal'; \r\nimport Switch from '@material-ui/core/Switch';\r\nimport Divider from '@material-ui/core/Divider'; \r\nimport TextField from '@material-ui/core/TextField'; \r\n \r\nimport { isAdmin } from '../../Utils/Chat';   \r\nimport { bool } from 'prop-types';\r\nimport User from '../../Assets/Icons/User';\r\nimport { hidden } from 'caniuse-lite/data/features';\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          openDialogs: false, \r\n        };\r\n    }\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleButtonClick = async event => { \r\n       \r\n        const { currentTarget: anchorEl } = event;\r\n\r\n        const chatId = AppStore.getChatId(); \r\n\r\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\r\n        ChatStore.set(chat); \r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    }; \r\n\r\n    handleManageGroupClose = () =>{\r\n        this.setState({openDialogs:false})\r\n    }\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        clearHistory(AppStore.getChatId());\r\n    };\r\n\r\n    handleDeleteChat = () => {\r\n        this.handleMenuClose();\r\n\r\n        leaveChat(AppStore.getChatId());\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return false;\r\n\r\n        const { pinned } = media;\r\n        if (!pinned) return false;\r\n        if (pinned.length !== 1) return false;\r\n\r\n        requestUnpinMessage(chatId, pinned[0].id);\r\n    };\r\n\r\n    handleSwitchBlocked = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const sender = getChatSender(chatId);\r\n        const { is_blocked } = chat;\r\n        if (is_blocked) {\r\n            unblockSender(sender);\r\n        } else {\r\n            requestBlockSender(sender);\r\n        }\r\n\r\n    };  \r\n    render() {\r\n        \r\n        \r\n        const { t } = this.props;\r\n        const { \r\n            anchorEl, \r\n        } = this.state; \r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { is_blocked } = chat; \r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n        const unpinMessage = hasOnePinnedMessage(chatId);\r\n        const switchBlocked = canSwitchBlocked(chatId); \r\n        \r\n        return (\r\n            <> \r\n            <Dialog\r\n                open={this.state.openDialogs}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                PaperProps={{\r\n                style: {\r\n                    backgroundColor: \"#fff\",\r\n                },\r\n                }}\r\n                >\r\n\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    \"Use Google's location service?\"\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Hello \r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.handleManageGroupClose} color=\"primary\">\r\n                            OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleChatInfo}>\r\n                        <ListItemIcon>\r\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                    </MenuItem> \r\n\r\n                    {clearHistory && (\r\n                        <MenuItem onClick={this.handleClearHistory}>\r\n                            <ListItemIcon>\r\n                                <BroomIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ClearHistory')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {deleteChat && deleteChatTitle && (\r\n                        <MenuItem onClick={this.handleDeleteChat}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={deleteChatTitle} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {unpinMessage && (\r\n                        <MenuItem onClick={this.handleUnpin}>\r\n                            <ListItemIcon>\r\n                                <UnpinIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {switchBlocked && (\r\n                        <MenuItem onClick={this.handleSwitchBlocked}>\r\n                            <ListItemIcon>\r\n                                {is_blocked ? <AddMemberIcon /> : <RemoveMemberIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport { getSupergroupId } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nclass HeaderChatSubtitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            online_member_count: 0,\r\n            total_count:0,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        TdLibController.on('update', this.onReceiveUpdateNewPermission);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        TdLibController.off('update', this.onReceiveUpdateNewPermission);\r\n    }\r\n\r\n    //从服务器端接收  权限更新的推送。\r\n    onReceiveUpdateNewPermission = update => {\r\n        switch (update['@type']) {\r\n            case 'updateChatPermissions':\r\n                break;\r\n            case 'updateNewCustomEvent':\r\n                break\r\n            case 'updateChatOnlineMemberCount':\r\n                this.setState({ online_member_count: update.online_member_count });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return; \r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onGetMuteMembers = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (supergroupId) {\r\n            TdLibController.send({\r\n                '@type': 'getSupergroupMembers',\r\n                \"supergroup_id\": supergroupId,\r\n                \"offset\":0,\r\n                \"limit\":2000000,\r\n            }).then(data => {\r\n                this.setState({total_count:data.total_count}); \r\n            }).catch(err => { \r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n        const { online_member_count,total_count } = this.state;\r\n        this.onGetMuteMembers();\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let text = \"\";\r\n\r\n        if (subtitle == 'MembersOT, OnlineCountOT') {\r\n            text = \"共\" + total_count + \"人，\" + online_member_count + \"人在线\"\r\n        } else if(subtitle == 'MembersOT'){\r\n            text = online_member_count + \"人在线\"\r\n        }else{\r\n            text = subtitle;\r\n        }\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        // console.log('看看subtitle',subtitle)\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {text}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AnimatedItem.css';\r\n\r\nclass AnimatedItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.containerRef = React.createRef();\r\n        this.item1Ref = React.createRef();\r\n        this.item2Ref = React.createRef();\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps.item !== this.props.item;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { item } = props;\r\n        const { to, prevItem } = state;\r\n\r\n        if (item !== prevItem) {\r\n            return {\r\n                prevItem: item,\r\n                from: to,\r\n                to: item,\r\n                scrollDown: item > to\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { scrollDown } = this.props;\r\n        const { to } = this.state;\r\n\r\n        this.animate('', to, scrollDown);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { item, scrollDown } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        if (prevProps.item !== item) {\r\n            this.animate(from, to, scrollDown);\r\n        }\r\n    }\r\n\r\n    animate = (from, to, scrollDown) => {\r\n        const { height } = this.props;\r\n\r\n        const container = this.containerRef.current;\r\n        const item1 = this.item1Ref.current;\r\n        const item2 = this.item2Ref.current;\r\n\r\n        if (!container || !item1 || !item2) return;\r\n\r\n        const duration = '250ms';\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        if (scrollDown) {\r\n            container.style.cssText = `transform: translateY(-${height}px)`;\r\n            item1.style.cssText = 'opacity: 0';\r\n            item2.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        } else {\r\n            container.style.cssText = 'transform: translateY(0px)';\r\n            item1.style.cssText = 'opacity: 1';\r\n            item2.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { scrollDown, height } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        // console.log('[c] render', [from, to, scrollDown]);\r\n\r\n        return (\r\n            <div className='animated-item' style={{ height }}>\r\n                <div className='animated-item-placeholder'>{to}</div>\r\n                <div ref={this.containerRef} className='animated-item-wrapper'>\r\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\r\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedItem.propTypes = {\r\n    item: PropTypes.string,\r\n    scrollDown: PropTypes.bool,\r\n    height: PropTypes.number\r\n};\r\n\r\nAnimatedItem.defaultProps = {\r\n    item: null,\r\n    scrollDown: true,\r\n    height: 21\r\n}\r\n\r\nexport default AnimatedItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimatedItem from './AnimatedItem';\r\nimport './AnimatedCounter.css';\r\n\r\nclass AnimatedCounter extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { counter } = props;\r\n        const { prevCounter } = state;\r\n\r\n        if (counter !== prevCounter) {\r\n            return {\r\n                prevCounter: counter,\r\n\r\n                scrollDown: counter > prevCounter\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { counter, height, reverse } = this.props;\r\n        const { scrollDown } = this.state;\r\n        if (!counter) return null;\r\n\r\n        const counterStr = counter + '';\r\n\r\n        return (\r\n            <div className='animated-counter' style={{ height }}>\r\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedCounter.propTypes = {\r\n    counter: PropTypes.number,\r\n    height: PropTypes.number,\r\n    reverse: PropTypes.bool\r\n};\r\n\r\nAnimatedCounter.defaultProps = {\r\n    counter: 0,\r\n    height: 21,\r\n    reverse: false\r\n}\r\n\r\nexport default AnimatedCounter;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {t('Forward')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {t('Delete')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\r\n    'PlaylistEdit'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './PinnedMessageBorder.css';\r\n\r\nclass PinnedMessageBorder extends React.Component {\r\n\r\n    drawRect = (x, y, width, height, radius) => {\r\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\r\n    };\r\n\r\n    getClipPath = (id, barHeight, count) => {\r\n        const radius = 1;\r\n\r\n        let d = '';\r\n        if (count === 3) {\r\n            d = this.drawRect(0, 0, 2, barHeight, radius)\r\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\r\n                + this.drawRect(0, 23, 2, barHeight, radius);\r\n        } else {\r\n            for (let i = 0; i < count; i++) {\r\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <clipPath id={id}>\r\n                <path d={d}/>\r\n            </clipPath>\r\n        );\r\n    };\r\n\r\n    getBarHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = index === 1 ? 10 : 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkTranslateY = (index, barHeight, count) => {\r\n        if (count === 1) {\r\n            return 0;\r\n        } else if (count === 2) {\r\n            return index === 0 ? 0 : barHeight + 2;\r\n        }\r\n\r\n        if (count === 3) {\r\n            if (index === 0) {\r\n                return 0;\r\n            } else if (index === 1) {\r\n                return 11;\r\n            }\r\n\r\n            return 23;\r\n        } else {\r\n            return (barHeight + 2) * index;\r\n        }\r\n    };\r\n\r\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\r\n        if (count <= 4) {\r\n            return 0;\r\n        }\r\n\r\n        if (index <= 1) {\r\n            return 0;\r\n        } else if (index >= count - 2) {\r\n            return trackHeight - 32;\r\n        }\r\n\r\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\r\n    };\r\n\r\n    getTrackHeight = (count, barHeight) => {\r\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\r\n    };\r\n\r\n    render() {\r\n        const { count, index } = this.props;\r\n        if (count === 1) {\r\n            return (\r\n                <div className='pinned-message-border'>\r\n                    <div className='pinned-message-border-wrapper-1'/>\r\n                </div>);\r\n        }\r\n\r\n        const barHeight = this.getBarHeight(count, index);\r\n        const markHeight = this.getMarkHeight(count, index);\r\n        const trackHeight = this.getTrackHeight(count, barHeight);\r\n\r\n        const clipPathId = `clipPath_${count}`;\r\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\r\n\r\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\r\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\r\n\r\n        return (\r\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\r\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\r\n                    <svg height='0' width='0'>\r\n                        <defs>{clipPath}</defs>\r\n                    </svg>\r\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessageBorder.propTypes = {\r\n    count: PropTypes.number,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default PinnedMessageBorder;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport PinnedMessageBorder from './PinnedMessageBorder';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const media = MessageStore.getMedia(chatId);\r\n\r\n            const pinned = media ? media.pinned : [];\r\n\r\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\r\n            const thumbnail = getReplyThumbnail(chatId, messageId);\r\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                pinned,\r\n                prevMessageId: 0,\r\n                messageId,\r\n                minithumbnail,\r\n                thumbnail,\r\n                lastPhoto: {\r\n                    messageId,\r\n                    minithumbnail,\r\n                    thumbnail\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { clientData, pinned, messageId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinned !== pinned) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        const { prevMessageId, messageId } = this.state;\r\n\r\n        if (prevProps.chatId !== chatId) {\r\n            this.animateText(messageId, prevMessageId, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onClientUpdateCurrentPinnedMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chatId) {\r\n            return;\r\n        }\r\n\r\n        this.scrollToMessageId(update.messageId);\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n        if (!message.is_pinned) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        const messageIds = new Map(message_ids.map(x => [x, x]));\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => messageIds.has(x.id))) {\r\n            return;\r\n        }\r\n        if (!is_permanent) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, message_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => x.id === message_id)) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    animateText = (messageId, prevMessageId, duration = 250) => {\r\n        const textElement = document.getElementById('pinned-message-animated-text');\r\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\r\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\r\n        if (!textElement || !text1Element || !text2Element) return;\r\n\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n        if (scrollDown) {\r\n            textElement.style.cssText = 'transform: translateY(-19px)';\r\n            text1Element.style.cssText = 'opacity: 0';\r\n            text2Element.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        } else {\r\n            textElement.style.cssText = 'transform: translateY(0px)';\r\n            text1Element.style.cssText = 'opacity: 1';\r\n            text2Element.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        }\r\n    };\r\n\r\n    setPinnedState = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\r\n\r\n        const clientData = ChatStore.getClientData(chatId);\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\r\n        if (!messageId && pinned.length > 0) {\r\n            messageId = pinned[0].id;\r\n        }\r\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\r\n\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            clientData,\r\n            pinned,\r\n            prevMessageId,\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail,\r\n            lastPhoto: {\r\n                messageId,\r\n                thumbnail,\r\n                minithumbnail\r\n            }\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (currentMessageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    scrollToMessageId = nextMessageId => {\r\n        const { chatId } = this.props;\r\n        const { messageId, thumbnail, minithumbnail } = this.state;\r\n\r\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\r\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\r\n\r\n        const lastPhoto = nextThumbnail ? {\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail\r\n        } : {\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail\r\n        }\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            prevMessageId: messageId,\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail,\r\n            lastPhoto\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (messageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { pinned, messageId } = this.state;\r\n        if (!pinned.length) return;\r\n\r\n        if (!messageId) return;\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        MessageStore.clickedPinned = { chatId, id: messageId };\r\n\r\n        openChat(chatId, messageId);\r\n\r\n        const index = pinned.findIndex(x => x.id === messageId);\r\n        if (index === -1) return;\r\n\r\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\r\n\r\n        this.scrollToMessageId(pinned[nextIndex].id);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleEditClick = event => {\r\n        const { chatId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        if (clientData) {\r\n            const { unpinned } = clientData;\r\n            if (unpinned) return null;\r\n        }\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\r\n        if (isDeletedMessage(prevMessage)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let index = 0;\r\n        let caption = t('PinnedMessage');\r\n        if (pinned && pinned.length > 1) {\r\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\r\n            if (pinned.length === 2) {\r\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\r\n            } else {\r\n                caption = (\r\n                    <>\r\n                        {t('PinnedMessage')}\r\n                        {index > 0 && (\r\n                            <>\r\n                                {' #'}\r\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\r\n                            </>)\r\n                        }\r\n                    </>);\r\n            }\r\n        }\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\r\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\r\n                    <CSSTransition\r\n                        in={!!thumbnail}\r\n                        classNames='pinned-message-tile'\r\n                        timeout={250}\r\n                        mountOnEnter={true}\r\n                        unmountOnExit={true}>\r\n                        <div>\r\n                            <ReplyTile\r\n                                chatId={chatId}\r\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\r\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\r\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\r\n                            />\r\n                        </div>\r\n                    </CSSTransition>\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{caption}</div>\r\n                        <div className='pinned-message-subtitle'>\r\n                            <div id='pinned-message-animated-text'>\r\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\r\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { pinned.length > 1 && (\r\n                        <IconButton\r\n                            className='pinned-message-edit-button'\r\n                            aria-label='Edit'\r\n                            onClick={this.handleEditClick}\r\n                            onMouseDown={this.handleMouseDown}>\r\n                            <PlaylistEditIcon />\r\n                        </IconButton>\r\n                    )}\r\n                </ListItem>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport {\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle\r\n} from '../../Utils/Chat';\r\nimport { openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        authorizationState: AppStore.getAuthorizationState(),\r\n        connectionState: AppStore.getConnectionState()\r\n    };\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        if (isSmallWidth) {\r\n            openChat(chatId, null, true);\r\n        } else {\r\n            changeChatDetailsVisibility(true);\r\n        }\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n        } = this.state;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectionCount} />\r\n                    <div className='header-details-row'>\r\n                        {showProgressAnimation ? (\r\n                            <div\r\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                                onClick={this.openChatDetails}>\r\n                                <span className='header-status-content'>{title}</span>\r\n                                <HeaderProgress />\r\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                                    {subtitle}\r\n                                </span>\r\n                                <span className='header-status-tail' />\r\n                            </div>\r\n                        ) : (\r\n                            <HeaderChat\r\n                                className={classNames('grow', 'cursor-pointer')}\r\n                                chatId={chatId}\r\n                                onClick={this.openChatDetails}\r\n                            />\r\n                        )}\r\n                        <PinnedMessage chatId={chatId} />\r\n                        {chat && (\r\n                            <>\r\n                                <IconButton\r\n                                    className='header-right-second-button'\r\n                                    aria-label='Search'\r\n                                    onClick={this.handleSearchChat}>\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            audioPlaybackRate,\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        this.setState({ audioPlaybackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\r\n            ? PLAYER_PLAYBACKRATE_FAST\r\n            : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        if (audio) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\r\n                audioPlaybackRate: nextRate\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaybackRate',\r\n                playbackRate: nextRate\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nPlaybackRateButton.defaultProps = {\r\n    audio: false\r\n}\r\n\r\nPlaybackRateButton.propTypes = {\r\n    audio: PropTypes.bool\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { duration } = this.props;\r\n\r\n        const currentTime = 0;\r\n        const reverse = false;\r\n\r\n        this.state = {\r\n            reverse,\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(currentTime, duration, reverse),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime, duration } = update;\r\n        const { reverse } = this.state;\r\n\r\n        this.setState({\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\r\n        });\r\n    };\r\n\r\n    handleReverse = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { currentTime, duration, reverse } = this.state;\r\n\r\n        this.setState({\r\n            reverse: !reverse,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return (\r\n            <div className='header-player-time' onClick={this.handleReverse}>\r\n                {currentTimeString}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport MediaAudio from '../Message/Media/Audio';\r\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openInstantViewMedia } from '../../Utils/InstantView';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, block, playlist } = PlayerStore;\r\n        this.state = {\r\n            message,\r\n            block,\r\n            playlist,\r\n\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { playlist, message, block } = this.state;\r\n        if (!message && !block) return;\r\n        if (!playlist) return;\r\n\r\n        const index = [...playlist.items]\r\n            .reverse()\r\n            .findIndex(x => playlistItemEquals(x, message || block));\r\n        if (index === -1) return;\r\n\r\n        const item = this.itemRefMap.get(index);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n\r\n        switch (source['@type']) {\r\n            case 'message': {\r\n\r\n                this.setState({\r\n                    message: source,\r\n                    block: null\r\n                })\r\n                break;\r\n            }\r\n            case 'instantViewSource': {\r\n\r\n                this.setState({\r\n                    message: null,\r\n                    block: source.block\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { message, block } = this.state;\r\n        const { source } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { message, block } = this.state;\r\n        const { source, playlist } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    getPageBlock(block, instantView) {\r\n        if (!block) return null;\r\n\r\n        let element = null;\r\n        switch (block['@type']) {\r\n            case 'pageBlockAudio': {\r\n                element = (\r\n                    <MediaAudio\r\n                        block={block}\r\n                        audio={block.audio}\r\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n            case 'pageBlockVoiceNote': {\r\n                element = (\r\n                    <MediaVoiceNote\r\n                        block={block}\r\n                        voiceNote={block.voice_note}\r\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { items } = playlist;\r\n        if (!items) return null;\r\n        if (items.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        let iv = null;\r\n        if (items[0]['@type'] === 'instantViewSource') {\r\n            iv = playlist.source.instantView;\r\n        }\r\n\r\n        const getMediaFunc = items[0]['@type'] === 'message'\r\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\r\n            : x => this.getPageBlock(x, iv)\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {[...items]\r\n                            .reverse()\r\n                            .map((x, index) => (\r\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\r\n                                    {getMediaFunc(x)}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openMediaInstantView(instantView, block) {\r\n    const url = urlCache.get(instantView);\r\n    if (!url) return;\r\n\r\n    console.log('[IV] open', instantView);\r\n    loadInstantViewContent(instantView);\r\n    setInstantViewContent({ instantView, block, url });\r\n}\r\n\r\nlet timestamp = null;\r\n\r\nconst ivCache = new Map();\r\nconst urlCache = new Map();\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        let result = null;\r\n        if (ivCache.has(url)) {\r\n            result = ivCache.get(url);\r\n        } else {\r\n            const now = (timestamp = new Date());\r\n            result = await TdLibController.send({\r\n                '@type': 'getWebPageInstantView',\r\n                url,\r\n                force_full: true\r\n            });\r\n            ivCache.set(url, result);\r\n            urlCache.set(result, url);\r\n            if (timestamp !== now) return;\r\n        }\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result, url });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { supportsStreaming } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\r\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openMediaInstantView } from '../../Actions/InstantView';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, block, instantView, playlist } = PlayerStore;\r\n        const { currentTime, duration } = getCurrentTime(message);\r\n\r\n        this.state = {\r\n            currentTime,\r\n            duration,\r\n            message,\r\n            block,\r\n            instantView,\r\n            playlist,\r\n            playing: false,\r\n            src: getMediaSrc(message),\r\n            mimeType: getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { message, block, playlist, src, playing } = this.state;\r\n\r\n        if (nextState.block !== block) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addMediaSessionHandlers();\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeMediaSessionHandlers();\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    addMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try {\r\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\r\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\r\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\r\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\r\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleSeekForward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekBackward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekTo = event => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(event.seekTime);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n    };\r\n\r\n    removeMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try{\r\n            mediaSession.setActionHandler('nexttrack', null);\r\n            mediaSession.setActionHandler('previoustrack', null);\r\n            mediaSession.setActionHandler('seekforward', null);\r\n            mediaSession.setActionHandler('seekbackward', null);\r\n            mediaSession.setActionHandler('seekto', null);\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    fadeOutVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.pause();\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    fadeInVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        player.volume = 0;\r\n        player.play();\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / totalIterations * (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    onClientUpdateRecordStart = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (!player.paused) {\r\n            this.fadeOutVolume(250);\r\n            this.pausedForRecord = true;\r\n        }\r\n    };\r\n\r\n    onClientUpdateRecordStop = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (player.paused && this.pausedForRecord) {\r\n            this.fadeInVolume(250);\r\n            this.pausedForRecord = false;\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const audio = hasAudio(message || block);\r\n        if (audio) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!hasAudio(message || block)) return;\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = audioPlaybackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { source, value, duration } = update;\r\n        const { message, block } = this.state;\r\n\r\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) {\r\n            this.currentValue = { value, duration };\r\n            return;\r\n        }\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.fadeOutVolume(250);\r\n    };\r\n\r\n    startPlayingFile = source => {\r\n        if (!source) return;\r\n\r\n        const { playlist } = PlayerStore;\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = getMediaSrc(source);\r\n        const mimeType = getMediaMimeType(source);\r\n        const { currentTime, duration } = getCurrentTime(source);\r\n        const playing = Boolean(src);\r\n\r\n        const srcSource = source['@type'] === 'instantViewSource'\r\n            ? { message: null, block: source.block, instantView: source.instantView }\r\n            : { message: source, block: null, instantView: null };\r\n\r\n        this.setState(\r\n            {\r\n                currentTime,\r\n                duration,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                ...srcSource,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                    if (this.currentValue) {\r\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\r\n                        this.currentValue = null;\r\n                    } else {\r\n                        player.currentTime = currentTime;\r\n                    }\r\n                }\r\n\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        source\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, fileId } = update;\r\n        const { message, block, instantView } = this.state;\r\n\r\n        if (message) {\r\n            const { chat_id, id, content } = message;\r\n            if (!content) return;\r\n            if (chatId !== chat_id || messageId !== id) return;\r\n\r\n            let startPlaying = false;\r\n            switch (content['@type']) {\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (web_page) {\r\n                        const { audio, voice_note, video_note } = web_page;\r\n\r\n                        if (audio) {\r\n                            if (supportsStreaming()) return;\r\n\r\n                            const { audio: file } = audio;\r\n                            if (file) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (voice_note) {\r\n                            const { voice } = voice_note;\r\n                            if (voice) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (video_note) {\r\n                            const { video } = video_note;\r\n                            if (video) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile(message);\r\n            }\r\n        } else if (block) {\r\n            let startPlaying = false;\r\n            switch (block['@type']) {\r\n                case 'pageBlockAudio': {\r\n                    const { audio } = block;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVoiceNote': {\r\n                    const { voice_note } = block;\r\n                    if (voice_note) {\r\n                        const { voice: file } = voice_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVideoNote': {\r\n                    const { video_note } = block;\r\n                    if (video_note) {\r\n                        const { video: file } = video_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist, source } = update;\r\n        const { message, block } = this.state;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({ playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            block: null,\r\n            instantView: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        }, () => {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n        const { message, block, src } = this.state;\r\n\r\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            this.pausedForRecord = false;\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(source);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            source\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            source,\r\n            moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    source,\r\n                    moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        const video = this.videoRef.current;\r\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\r\n\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleLoadedMetadata = () => {\r\n        let { message, block, instantView, currentTime } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const voiceNote = hasVoice(message || block);\r\n\r\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\r\n        if (voiceNote) {\r\n            rate = playbackRate;\r\n        } else if (audio && useAudioPlaybackRate(message || block)) {\r\n            rate = audioPlaybackRate;\r\n        }\r\n\r\n        player.playbackRate = rate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n        if (this.currentValue) {\r\n            player.currentTime = player.duration * this.currentValue.value;\r\n            this.currentValue = null;\r\n        } else {\r\n            player.currentTime = currentTime;\r\n        }\r\n\r\n        player.play();\r\n\r\n        const { buffered, duration, videoWidth, videoHeight } = player;\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaLoadedMetadata',\r\n            source,\r\n            buffered,\r\n            duration,\r\n            videoWidth,\r\n            videoHeight\r\n        });\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n        if (voiceNote) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleProgress = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { buffered } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaProgress',\r\n            source,\r\n            buffered\r\n        });\r\n    }\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, buffered, duration } = player;\r\n\r\n        this.setState({ currentTime });\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            source,\r\n            duration,\r\n            currentTime,\r\n            buffered,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({ playing: true });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, duration } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            source,\r\n            currentTime,\r\n            duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            source\r\n        });\r\n    };\r\n\r\n    hasPrev = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.items.length;\r\n    };\r\n\r\n    hasNext = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (message) {\r\n            openChat(message.chat_id, message.id);\r\n            return;\r\n        }\r\n\r\n        if (block && instantView) {\r\n            openMediaInstantView(instantView, block);\r\n            return;\r\n        }\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const audio = getMessageAudio(message.chat_id, message.id);\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const useAudioRate = useAudioPlaybackRate(message || block);\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message || block, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = false; //!audio;\r\n        const showPlaybackRate = !audio || useAudioRate;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message || block, playlist);\r\n        const hasNext = this.hasNext(message || block, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    disablePictureInPicture={true}\r\n                    onLoadedMetadata={this.handleLoadedMetadata}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onEnded={this.handleVideoEnded}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onProgress={this.handleProgress}\r\n                >\r\n                    {source}\r\n                </video>\r\n                {(message || block) && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                        </div>\r\n                        <Time duration={duration}/>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\r\nimport { requestBlockSender } from '../../Actions/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\r\n    'Copy'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\r\n    'FrameCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\r\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\r\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\r\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\r\n    </g>,\r\n    'RemoveCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CopyIcon from '../../Assets/Icons/Copy';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\r\nimport EditIcon from '../../Assets/Icons/Edit';\r\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\r\nimport ShareIcon from '../../Assets/Icons/Share';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\r\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\r\nimport { saveBlob } from '../../Utils/File';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose, copyLink, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleCopyPublicMessageLink = async event => {\r\n        const { onClose, chatId, messageId, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const httpUrl = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        if (!httpUrl) return;\r\n        const { link: copyLink } = httpUrl;\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            requestUnpinMessage(chatId, messageId);\r\n        } else {\r\n            requestPinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n        onClose(event);\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDownload = event => {\r\n        const { chatId, messageId } = this.props;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { sticker } = content;\r\n        if (!sticker) return;\r\n\r\n        const { sticker: file } = sticker;\r\n        if (!file) return;\r\n\r\n        const blob = FileStore.getBlob(file.id);\r\n        if (!blob) return;\r\n\r\n        saveBlob(blob, 'sticker.tgs');\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n        if (!confirmStopPoll && !open) return null;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\r\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\r\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canCopyLink = Boolean(copyLink);\r\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\r\n\r\n        const hasItems =\r\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\r\n        if (!hasItems) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={true}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <CopyIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('Download')} />*/}\r\n                        {/*</MenuItem>*/}\r\n                        {canBeSelected && (\r\n                            <MenuItem onClick={this.handleSelect}>\r\n                                <ListItemIcon>\r\n                                    <FrameCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Select')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyPublicMessageLink && (\r\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyMessageLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyLink && (\r\n                            <MenuItem onClick={this.handleCopyLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeReplied && (\r\n                            <MenuItem onClick={this.handleReply}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Reply')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinMessage')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinMessage')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeForwarded && (\r\n                            <MenuItem onClick={this.handleForward}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Forward')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeEdited && (\r\n                            <MenuItem onClick={this.handleEdit}>\r\n                                <ListItemIcon>\r\n                                    <EditIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Edit')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeDeleted && (\r\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                                <ListItemIcon>\r\n                                    <DeleteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Delete')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeUnvoted && (\r\n                            <MenuItem onClick={this.handleUnvote}>\r\n                                <ListItemIcon>\r\n                                    <RemoveCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Unvote')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeClosed && (\r\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\r\n                                <ListItemIcon>\r\n                                    <StopIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('StopPoll')} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    copyLink: PropTypes.string\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MessageMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\r\n    'PinFilled'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PinIcon from '../../Assets/Icons/PinFilled';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { albumHistoryEquals } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, messageIds } = props;\r\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\r\n\r\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\r\n\r\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n            const id = ids[ids.length - 1];\r\n\r\n            const message = MessageStore.get(chatId, id);\r\n            if (!message) return null;\r\n\r\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                prevMessageIds: messageIds,\r\n\r\n                message,\r\n                date,\r\n                editDate,\r\n                interactionInfo,\r\n                isOutgoing,\r\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId, messageIds } = this.props;\r\n\r\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!ids.some(x => x === message_id)) return;\r\n\r\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id, edit_date: editDate } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ editDate });\r\n    };\r\n\r\n    onUpdateMessageInteractionInfo = update => {\r\n        const { chat_id, message_id, interaction_info } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ interactionInfo: interaction_info });\r\n    };\r\n\r\n    render() {\r\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\r\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\r\n\r\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n        const viewsStr = getViews(views);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                {/*{messageId}*/}\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views' title={views}>\r\n                            &nbsp;\r\n                            {viewsStr}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {isPinned && (\r\n                    <>\r\n                        <PinIcon className='meta-pin-icon' />\r\n                        <span>&nbsp;</span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number),\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport Audio from '../Media/Audio';\r\nimport Document from '../Media/Document';\r\nimport MessageMenu from '../MessageMenu';\r\nimport Meta from '../Meta';\r\nimport Photo from '../Media/Photo';\r\nimport Video from '../Media/Video';\r\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './AlbumItem.css';\r\n\r\nclass AlbumItem extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false\r\n    };\r\n\r\n    getAlbumItem = (message, displaySize) => {\r\n        const { chat_id, id, content } = message;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAudio': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Audio\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            audio={content.audio}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messagePhoto': {\r\n                return (\r\n                    <Photo\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                    );\r\n            }\r\n            case 'messageVideo': {\r\n                return (\r\n                    <Video\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        video={content.video}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                );\r\n            }\r\n            case 'messageDocument': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Document\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            document={content.document}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { message } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (MessageStore.selectedItems.size > 0) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { message } = this.props;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        openMedia(chat_id, id);\r\n    };\r\n\r\n    handleSelection = event => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        if (MessageStore.selectedItems.size === 0) return;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { message, position, displaySize, source } = this.props;\r\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        let style = {};\r\n        let className = 'album-document-item';\r\n        if (position) {\r\n            style = { width: position.width, height: position.height * displaySize };\r\n            className = 'album-item'\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\r\n                    onClick={this.handleSelection}\r\n                    onContextMenu={this.handleOpenContextMenu}\r\n                    style={style}>\r\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\r\n                    {(selected || highlighted) && (\r\n                        <div className='album-item-selection'>\r\n                            <div className='album-item-selection-mark'>\r\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n    message: PropTypes.object,\r\n    position: PropTypes.object,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nexport default AlbumItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div className='forward-subtitle'>\r\n                    {t('From') + ' '}\r\n                    {/*<Tooltip*/}\r\n                    {/*    title={tooltip}*/}\r\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\r\n                    {/*    PopperProps={{*/}\r\n                    {/*        popperOptions: {*/}\r\n                    {/*            modifiers: {*/}\r\n                    {/*                arrow: {*/}\r\n                    {/*                    enabled: Boolean(arrowRef),*/}\r\n                    {/*                    element: arrowRef*/}\r\n                    {/*                }*/}\r\n                    {/*            }*/}\r\n                    {/*        }*/}\r\n                    {/*    }}*/}\r\n                    {/*    placement='top'>*/}\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    {/*</Tooltip>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\r\n\r\nconst POSITION_FLAG_LEFT = 1;\r\nconst POSITION_FLAG_RIGHT = 2;\r\nconst POSITION_FLAG_TOP = 4;\r\nconst POSITION_FLAG_BOTTOM = 8;\r\n\r\nclass MessageGroupedLayoutAttempt {\r\n    constructor(lineCounts, heights) {\r\n        this.lineCounts = lineCounts;\r\n        this.heights = heights;\r\n    }\r\n}\r\n\r\nclass GroupedMessagePosition {\r\n    aspectRatio;\r\n    isEdge;\r\n    flags;\r\n    isLast;\r\n    leftSpanOffset;\r\n    minX;\r\n    maxX;\r\n    minY;\r\n    maxY;\r\n    height;\r\n    width;\r\n    siblingHeights;\r\n    spanSize;\r\n\r\n    set(minX, maxX, minY, maxY, w, h, flags) {\r\n        this.minX = minX;\r\n        this.maxX = maxX;\r\n        this.minY = minY;\r\n        this.maxY = maxY;\r\n        this.spanSize = w;\r\n        this.width = w;\r\n        this.height = h;\r\n        this.flags = flags;\r\n    }\r\n\r\n    getInfo() {\r\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\r\n    }\r\n}\r\n\r\nclass GroupedMessages {\r\n\r\n    constructor() {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.maxSizeWidth = 800;\r\n        this.hasSibling = false;\r\n        this.scale = 1.0;\r\n    }\r\n\r\n    multiHeight(array, start, end) {\r\n        let sum = 0.0;\r\n        for (let i = start; i < end; i++) {\r\n            sum += array[i];\r\n        }\r\n\r\n        return 800.0 * this.scale / sum;\r\n    }\r\n\r\n    calculate(messages, desiredWidth) {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.messages = messages;\r\n\r\n        if (!messages) return;\r\n        const { length } = messages;\r\n        if (length <= 1) {\r\n            return;\r\n        }\r\n\r\n        this.totalWidth = 0;\r\n        this.totalHeight = 0.0;\r\n\r\n        this.scale = desiredWidth / this.maxSizeWidth;\r\n        this.maxSizeWidth = desiredWidth;\r\n\r\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\r\n        const minHeight = Math.trunc(120 * this.scale);\r\n        const minWidth = Math.trunc(96 * this.scale);\r\n        const paddingsWidth = Math.trunc(32 * this.scale);\r\n        const maxSizeHeight = 814.0 * this.scale;\r\n        let averageAspectRatio = 1.0;\r\n        let proportions = '';\r\n        const isOut = false;\r\n        let maxX = 0;\r\n        let forceCalc = false;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const message = messages[i];\r\n            const { w, h } = GroupedMessages.getWidthHeight(message);\r\n\r\n            const position = new GroupedMessagePosition();\r\n            position.isLast = i === messages.length - 1;\r\n            position.aspectRatio = w / h;\r\n            if (position.aspectRatio > 1.2) {\r\n                proportions += 'w';\r\n            } else if (position.aspectRatio < 0.8) {\r\n                proportions += 'n';\r\n            } else {\r\n                proportions += 'q';\r\n            }\r\n\r\n            averageAspectRatio += position.aspectRatio;\r\n            if (position.aspectRatio > 2.0) {\r\n                forceCalc = true;\r\n            }\r\n\r\n            this.positions.set(message, position);\r\n            this.posArray.push(position);\r\n        }\r\n\r\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\r\n        averageAspectRatio = averageAspectRatio / length;\r\n\r\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\r\n            switch (length) {\r\n                case 2: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n\r\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\r\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = height * 2;\r\n                    } else if (proportions === 'ww' || proportions === 'qq') {\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = width + width;\r\n                        this.totalHeight = height;\r\n                    } else {\r\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\r\n                        let firstWidth = this.maxSizeWidth - secondWidth;\r\n                        if (firstWidth < minWidth) {\r\n                            const diff = minWidth - firstWidth;\r\n                            firstWidth = minWidth;\r\n                            secondWidth -= diff;\r\n                        }\r\n\r\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = firstWidth + secondWidth;\r\n                        this.totalHeight = height;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    if (proportions[0] === 'n')\r\n                    {\r\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\r\n                        const secondHeight = maxSizeHeight - thirdHeight;\r\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\r\n\r\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\r\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n\r\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\r\n                            position3.leftSpanOffset = leftWidth;\r\n                        }\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = leftWidth + rightWidth;\r\n                        this.totalHeight = 1.0;\r\n                    }\r\n                    else\r\n                    {\r\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = firstHeight + secondHeight;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    const position4 = this.posArray[3];\r\n                    if (proportions[0] === 'w') {\r\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\r\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\r\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\r\n                        const w1 = this.maxSizeWidth - w0 - w2;\r\n                        h = Math.min(maxSizeHeight - h0, h);\r\n                        h /= maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\r\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 2;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = h0 + h;\r\n                    } else {\r\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\r\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\r\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\r\n                        const h2 = 1.0 - h0 - h1;\r\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\r\n\r\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\r\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position4.spanSize = this.maxSizeWidth;\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - w;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - w0;\r\n                            position3.leftSpanOffset = w0;\r\n                            position4.leftSpanOffset = w0;\r\n                        }\r\n                        position1.siblingHeights = [ h0, h1, h2 ];\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = w + w0;\r\n                        this.totalHeight = h0 + h1 + h2;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            const croppedRatios = new Array(this.posArray.length);\r\n            for (let i = 0; i < length; i++) {\r\n                if (averageAspectRatio > 1.1) {\r\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\r\n                } else {\r\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\r\n                }\r\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\r\n            }\r\n\r\n            let firstLine;\r\n            let secondLine;\r\n            let thirdLine;\r\n            let fourthLine;\r\n            const attempts = [];\r\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\r\n                secondLine = croppedRatios.length - firstLine;\r\n                if (firstLine > 3 || secondLine > 3) {\r\n                    continue;\r\n                }\r\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\r\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\r\n                        continue;\r\n                    }\r\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\r\n                }\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\r\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\r\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\r\n                            continue;\r\n                        }\r\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let optimal = null;\r\n            let optimalDiff = 0.0;\r\n            let maxHeight = this.maxSizeWidth / 3 * 4;\r\n            for (let i = 0; i < attempts.length; i++) {\r\n                const attempt = attempts[i];\r\n                let height = 0;\r\n                let minLineHeight = Number.MAX_VALUE;\r\n                for (let j = 0; j < attempt.heights.length; j++) {\r\n                    height += attempt.heights[j];\r\n                    if (attempt.heights[j] < minLineHeight) {\r\n                        minLineHeight = attempt.heights[j];\r\n                    }\r\n                }\r\n\r\n                let diff = Math.abs(height - maxHeight);\r\n                if (attempt.lineCounts.length > 1) {\r\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\r\n                        diff *= 1.5;\r\n                    }\r\n                }\r\n\r\n                if (minLineHeight < minWidth) {\r\n                    diff *= 1.5;\r\n                }\r\n\r\n                if (optimal === null || diff < optimalDiff) {\r\n                    optimal = attempt;\r\n                    optimalDiff = diff;\r\n                }\r\n            }\r\n\r\n            if (optimal === null) {\r\n                return;\r\n            }\r\n\r\n            let index = 0;\r\n            let y = 0.0;\r\n\r\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\r\n                let c = optimal.lineCounts[i];\r\n                let lineHeight = optimal.heights[i];\r\n                let spanLeft = this.maxSizeWidth;\r\n                let posToFix = null;\r\n                maxX = Math.max(maxX, c - 1);\r\n                for (let j = 0; j < c; j++) {\r\n                    let ratio = croppedRatios[index];\r\n                    let width = Math.trunc(ratio * lineHeight);\r\n                    spanLeft -= width;\r\n                    let pos = this.posArray[index];\r\n                    let flags = 0;\r\n                    if (i === 0) {\r\n                        flags |= POSITION_FLAG_TOP;\r\n                    }\r\n                    if (i === optimal.lineCounts.length - 1) {\r\n                        flags |= POSITION_FLAG_BOTTOM;\r\n                    }\r\n                    if (j === 0) {\r\n                        flags |= POSITION_FLAG_LEFT;\r\n                        if (isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    if (j === c - 1) {\r\n                        flags |= POSITION_FLAG_RIGHT;\r\n                        if (!isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\r\n                    index++;\r\n                }\r\n                posToFix.width += spanLeft;\r\n                posToFix.spanSize += spanLeft;\r\n                y += lineHeight;\r\n            }\r\n\r\n            this.totalWidth = this.maxSizeWidth;\r\n            this.totalHeight = y / maxSizeHeight;\r\n        }\r\n    }\r\n\r\n    static getWidthHeight(message) {\r\n        let w = 0;\r\n        let h = 0;\r\n        let sizes = [];\r\n        switch (message.content['@type']){\r\n            case 'messagePhoto': {\r\n                const { photo, minithumbnail } = message.content;\r\n                if (photo) {\r\n                    sizes = photo.sizes;\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video, thumbnail, minithumbnail } = message.content;\r\n                if (video) {\r\n                    const { width, height } = video;\r\n                    sizes.push({ width, height });\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { thumbnail, minithumbnail } = message.content;\r\n                if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                } else {\r\n                    sizes.push({ width: 90, height: 90 });\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\r\n        if (photoSize) {\r\n            w = photoSize.width;\r\n            h = photoSize.height;\r\n        }\r\n\r\n        return { w, h };\r\n    }\r\n\r\n    static getPhotoSize(sizes, side, byMinSize) {\r\n        if (!sizes || !sizes.length) return null;\r\n\r\n        let lastSide = 0;\r\n        let lastSize = null;\r\n        for (let i = 0; i < sizes.length; i++) {\r\n            const { width: w, height: h } = sizes[i];\r\n\r\n            if (byMinSize) {\r\n                const currentSide = h >= w ? w : h;\r\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n\r\n            } else {\r\n                const currentSide = w >= h ? w : h;\r\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return lastSize;\r\n    }\r\n}\r\n\r\nexport default GroupedMessages;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './EmptyTile.css';\r\n\r\nfunction EmptyTile(props) {\r\n    const { dialog, small, big, style } = props;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'chat-tile',\r\n                { 'tile-dialog': dialog },\r\n                { 'tile-small': small },\r\n                { 'tile-big': big }\r\n            )}\r\n            style={style}/>\r\n    );\r\n}\r\n\r\nEmptyTile.propTypes = {};\r\n\r\nexport default EmptyTile;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport GroupedMessages from './GroupedMessages';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './Album.css';\r\n\r\nclass Album extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, selected, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n            const grouped = new GroupedMessages();\r\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n            return {\r\n                grouped,\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const grouped = new GroupedMessages();\r\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches, grouped });\r\n        } else {\r\n            this.setState({ grouped });\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n        const { grouped } = this.state;\r\n        if (!grouped) {\r\n            return null;\r\n        }\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': !hasCaption\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = { width: grouped.totalWidth - 2 - 2 };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = grouped.messages.map(x => (\r\n            <AlbumItem\r\n                key={x.id}\r\n                message={x}\r\n                position={grouped.positions.get(x)}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    { 'album-caption': hasCaption },\r\n                                    { 'album-title': hasTitle }\r\n                                    )}>\r\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default Album;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './DocumentAlbum.css';\r\n\r\nclass DocumentAlbum extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastSelected !== lastSelected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastHighlighted !== lastHighlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n\r\n            return {\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({\r\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\r\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        this.setState({ selected: false, lastSelected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            lastSelected,\r\n            highlighted,\r\n            lastHighlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': false\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = {  };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\r\n            <AlbumItem\r\n                key={m.id}\r\n                message={m}\r\n                position={null}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', 'message-document-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-album-last-selected': lastSelected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-album-last-highlighted': lastHighlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    'document-album',\r\n                                    { 'album-caption': false },\r\n                                    { 'album-title': hasTitle }\r\n                                )}>\r\n                                    <div className='album-wrapper'>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                {/*<div*/}\r\n                                {/*    className={classNames('message-text', {*/}\r\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\r\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\r\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\r\n                                {/*    })}>*/}\r\n                                {/*    {text}*/}\r\n                                {/*</div>*/}\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nDocumentAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default DocumentAlbum;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDisplayName } from '../../Utils/HOC';\r\n\r\nconst MessageContext = React.createContext({\r\n    chatId: 0,\r\n    messageId: 0\r\n});\r\n\r\nexport default MessageContext;\r\n\r\nexport function withMessage(Component) {\r\n    class MessageComponent extends React.Component {\r\n        render() {\r\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\r\n        }\r\n    }\r\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\r\n\r\n    return MessageComponent;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem } from '@material-ui/core';\r\nimport User from '../Tile/User';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './InputBoxHints.css'\r\n\r\nclass InputBoxHints extends React.Component {\r\n    state = {\r\n        local: [],\r\n        global: [],\r\n        id: null\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { local, global, id } = this.state;\r\n\r\n        if (nextState.local !== local) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.global !== global) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.id !== id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    onClientUpdateHintsClose = update => {\r\n        this.setState({\r\n            id: null,\r\n            local: [],\r\n            global: []\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsGlobal = update => {\r\n        const { id, global } = update;\r\n        if (this.state.id !== id) return;\r\n\r\n        this.setState({\r\n            id,\r\n            global\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsLocal = update => {\r\n        const { id, local } = update;\r\n\r\n        this.setState({\r\n            id,\r\n            local,\r\n            global: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { local, global } = this.state;\r\n\r\n        const results = (local || []).concat(global || []);\r\n\r\n        console.log('[hints] render', local, global, results);\r\n        if (!results.length) return null;\r\n\r\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nInputBoxHints.propTypes = {};\r\n\r\nexport default InputBoxHints;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\r\n    'ArrowTopRight'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\r\n    'ShareFilled'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withMessage } from '../MessageContext';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport PendingIcon from '../../../Assets/Icons/Pending';\r\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport { getChatTitle } from '../../../Utils/Chat';\r\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\r\nimport { openChatSelect } from '../../../Actions/Message';\r\nimport LStore from '../../../Stores/LocalizationStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './KeyboardButton.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { openChat } from '../../../Actions/Client';\r\nimport AppStore from '../../../Stores/ApplicationStore';\r\nimport { getSupergroupId } from '../../../Utils/Chat';\r\nclass KeyboardButton extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        joinDialog: false,\r\n        groupCode: null,\r\n        joinChatId: null,\r\n        meInGroup: false\r\n    }\r\n\r\n    handleCallbackQueryAnswer = (type, result, message) => {\r\n        const { chatId } = this.props;\r\n        const { sender, content, via_bot_user_id } = message;\r\n        const { text, show_alert, url } = result;\r\n        const { game } = content;\r\n\r\n        let title = '';\r\n        if (message) {\r\n            if (via_bot_user_id) {\r\n                title = getUserFullName(via_bot_user_id, null);\r\n            } else {\r\n                title = getChatTitle(chatId, false);\r\n            }\r\n        }\r\n        title = title || LStore.getString('Bot');\r\n\r\n        if (text) {\r\n            if (show_alert) {\r\n                showAlert({\r\n                    title,\r\n                    message: text,\r\n                    ok: LStore.getString('OK')\r\n                });\r\n            } else {\r\n                showSnackbar(text, closeSnackbar => snackKey => {\r\n                    return (\r\n                        <IconButton\r\n                            key='close'\r\n                            aria-label='Close'\r\n                            color='inherit'\r\n                            className='notification-close-button'\r\n                            onClick={() => { closeSnackbar(snackKey); }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    )\r\n                });\r\n            }\r\n        } else if (url) {\r\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\r\n                const user = UserStore.get(userId);\r\n\r\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\r\n            } else {\r\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, type } = this.props;\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                showAlert({\r\n                    title: LStore.getString('AppName'),\r\n                    message: LStore.getString('PaymentsNotSupported'),\r\n                    ok: LStore.getString('OK')\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                /// gamee, querty_bot\r\n\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, content, via_bot_user_id } = message;\r\n                if (!content) break;\r\n\r\n                let payload = null;\r\n                let game = null;\r\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                    game = content.game;\r\n                    if (!game) break;\r\n\r\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\r\n                } else {\r\n                    payload = { '@type': 'callbackQueryPayloadData', data };\r\n                }\r\n\r\n                this.setState({ loading: true });\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getCallbackQueryAnswer',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    payload\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                this.handleCallbackQueryAnswer(type, result, message);\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                /// BotFather + transfer bot\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                this.setState({ loading: true });\r\n                const passwordState = await TdLibController.send({\r\n                    '@type': 'getPasswordState'\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                const { has_password } = passwordState;\r\n                if (!has_password) break;\r\n\r\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\r\n                    console.log('[pwd] onPassword', password);\r\n                    this.setState({ loading: true });\r\n                    let error = null;\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'getCallbackQueryAnswer',\r\n                        chat_id: chatId,\r\n                        message_id: messageId,\r\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\r\n                    }).catch(e => {\r\n                        error = e;\r\n                    }).finally(() => {\r\n                        this.setState({ loading: false });\r\n                    });\r\n\r\n                    if (error) {\r\n                        console.log('[pwd] onPassword error', error);\r\n                        onError && onError(error);\r\n                    } else if (result) {\r\n                        console.log('[pwd] onPassword result', result);\r\n                        onCloseDialog && onCloseDialog();\r\n                        this.handleCallbackQueryAnswer(type, result, message);\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                const { url, id, forward_text } = type;\r\n\r\n                this.setState({ loading: true });\r\n                let hasError = false;\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getLoginUrlInfo',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    button_id: id\r\n                }).catch(e => {\r\n                    hasError = true;\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                if (hasError) {\r\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                } else {\r\n                    switch (result['@type']) {\r\n                        case 'loginUrlInfoOpen': {\r\n                            const { url, skip_confirm } = result;\r\n\r\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\r\n                            break;\r\n                        }\r\n                        case 'loginUrlInfoRequestConfirmation': {\r\n                            const { url } = result;\r\n\r\n\r\n                            console.log('[login] result', result);\r\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                /// youtube\r\n                const { in_current_chat, query } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, via_bot_user_id } = message;\r\n                let userId = sender.user_id;\r\n                if (via_bot_user_id !== 0) {\r\n                    userId = via_bot_user_id;\r\n                }\r\n\r\n                const user = UserStore.get(userId);\r\n                if (!user) break;\r\n\r\n                const inline = `@${user.username} ${query}`;\r\n\r\n                if (in_current_chat) {\r\n                    setText(inline);\r\n                } else {\r\n                    openChatSelect({ switchInline: inline });\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                /// qwerty_bot\r\n                // const { url } = type;  \r\n                this.onPrepareJoin(type.url); \r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    getIcon(type) {\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon' />\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                const { in_current_chat } = type;\r\n\r\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon' />;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon' />\r\n            }\r\n        }\r\n    }\r\n    //准备加入群聊\r\n    onPrepareJoin = (url) =>{\r\n        const url00 = url;\r\n        let result = null;\r\n        let groupCode = null;\r\n        let splitUrl = url00.split('=');\r\n        let isGroup = false;\r\n        if (splitUrl[1]) {\r\n            groupCode = \"t.me/joinchat/\" + splitUrl[1];\r\n            result = TdLibController.send({\r\n                '@type': 'checkChatInviteLink',\r\n                invite_link: groupCode,\r\n            }).then(result => {\r\n                isGroup = true; \r\n                this.setState({ groupCode: groupCode});  \r\n                this.checkMeInGroup(result.chat_id,isGroup,url00);\r\n            }).finally(data => {\r\n                \r\n            }).catch(e => {\r\n                isGroup = false;\r\n            });\r\n        }\r\n\r\n    }\r\n    //判断本账号是否在该群聊中\r\n    checkMeInGroup = (joinChatId,isGroup,url00) => { \r\n        let uid = UserStore.getMyId(); \r\n        const supergroupId = getSupergroupId(joinChatId);\r\n        this.setState({joinChatId:joinChatId}); \r\n        //获取到的链接里的id为0的话 即自己不在该群聊\r\n        if(joinChatId === 0) {\r\n            //不在群聊则判断该链接是否是群组，是的话则弹出是否加入群聊对话框，不是的话则弹出打开网页链接对话框\r\n            if (isGroup) {\r\n                this.onOpenDialog();\r\n            } else {\r\n                showOpenUrlAlert(url00, { punycode: false, ask: true, tryTelegraph: true });\r\n            } \r\n        }else{\r\n            TdLibController.send({\r\n                '@type': 'getSupergroupMembers',\r\n                \"supergroup_id\": supergroupId,\r\n                \"offset\": 0,\r\n                \"limit\": 20000,\r\n            }).then(data => {\r\n                let isFind = false;\r\n                for (var i = 0; i < data.members.length; i++) {\r\n                    let member = data.members[i];\r\n                    if (member.user_id === uid) {\r\n                        isFind = true; \r\n                    }\r\n                }\r\n                if (isFind == true) {\r\n                    //在群聊中则打开进入群聊对话框\r\n                    this.onOpenMeInGroupDialog();\r\n                } \r\n                    \r\n            }).catch(err => { \r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    onOpenDialog = () => {\r\n        this.setState({ joinDialog: true });\r\n    }\r\n    onCloseDialog = () => {\r\n        this.setState({ joinDialog: false });\r\n    }\r\n\r\n    onOpenMeInGroupDialog = () => {\r\n        this.setState({ meInGroup: true });\r\n    }\r\n    onCloseMeInGroupDialog = () => {\r\n        this.setState({ meInGroup: false });\r\n    }\r\n    //打开群聊\r\n    onOpenChat = (chatId) =>{\r\n        // openChat(chatId); \r\n        openChat(chatId, null, false);\r\n    } \r\n    \r\n    //确定打开群聊,,这个事件需要用 onMouseDown。否则聊天框的顶部会弹出 转发信息的对话框\r\n    onConfirmOpen = event =>{ \r\n        const {joinChatId} = this.state; \r\n        this.onCloseMeInGroupDialog();\r\n        this.onOpenChat(joinChatId);\r\n    }\r\n    //确定加入群聊\r\n    onConfirmJoin = () => {\r\n        const { groupCode } = this.state;\r\n        if (groupCode) {\r\n            TdLibController.send({\r\n                '@type': 'joinChatByInviteLink',\r\n                invite_link: groupCode,\r\n            }).then(result => {\r\n                const chatId = result.id;\r\n                //加入群聊后打开群聊\r\n                this.onOpenChat(chatId);\r\n            }).finally(data => {\r\n                this.onCloseDialog();\r\n            }).catch(e => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n   \r\n    render() {\r\n        const { text, type } = this.props;\r\n        const { loading, joinDialog } = this.state;\r\n        const icon = this.getIcon(type);\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={joinDialog}\r\n                    onClose={this.onCloseDialog}\r\n                    aria-labelledby='fatal-error-dialog-title'\r\n                    aria-describedby='fatal-error-dialog-description'>\r\n                    <DialogTitle id='fatal-error-dialog-title'>提示</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            您确定要加入该群组吗？\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onConfirmJoin} color='primary' autoFocus>\r\n                            确定\r\n                        </Button>\r\n                        <Button onClick={this.onCloseDialog} color='primary' autoFocus>\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={this.state.meInGroup}\r\n                    onClose={this.onCloseMeInGroupDialog}\r\n                    aria-labelledby='fatal-error-dialog-title'\r\n                    aria-describedby='fatal-error-dialog-description'>\r\n                    <DialogTitle id='fatal-error-dialog-title'>提示</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            您已经在该群聊中，要打开该群聊吗？\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onMouseDown={this.onConfirmOpen} color='primary' autoFocus>\r\n                            确定\r\n                        </Button>\r\n                        <Button onClick={this.onCloseMeInGroupDialog} color='primary' autoFocus>\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                \r\n                <ListItem className='keyboard-button' button onClick={this.handleClick}>\r\n                    {text}\r\n                    {icon}\r\n                    {loading && (\r\n                        <PendingIcon\r\n                            className='keyboard-button-progress'\r\n                            viewBox='0 0 14 14'\r\n                        />\r\n                    )}\r\n                </ListItem>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nKeyboardButton.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    type: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withMessage(KeyboardButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardButton from './KeyboardButton';\r\nimport './KeyboardRow.css';\r\n\r\nclass KeyboardRow extends React.Component {\r\n    render() {\r\n        const { row } = this.props;\r\n        if (!row) return null;\r\n        if (!row.length) return null;\r\n\r\n        return (\r\n            <div className='keyboard-row'>\r\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nKeyboardRow.propTypes = {\r\n    row: PropTypes.array\r\n};\r\n\r\nexport default KeyboardRow;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardRow from './KeyboardRow';\r\nimport MessageContext from '../MessageContext';\r\nimport './ReplyMarkup.css';\r\n\r\nclass ReplyMarkup extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId, prevMessageId } = state;\r\n        const { chatId, messageId } = props;\r\n\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                message: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { markup } = this.props;\r\n        const { message } = this.state;\r\n\r\n        if (!markup) return null;\r\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\r\n\r\n        const { rows } = markup;\r\n        if (!rows.length) return null;\r\n\r\n        return (\r\n            <div className='reply-markup'>\r\n                <MessageContext.Provider value={message}>\r\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\r\n                </MessageContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyMarkup.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    markup: PropTypes.object\r\n};\r\n\r\nexport default ReplyMarkup;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\r\n                (site_name || title || description && description.text.length > 0) &&\r\n                photoSize &&\r\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\r\n            let totalLength = 0;\r\n            if (site_name) {\r\n                totalLength += site_name.length;\r\n            }\r\n            if (title) {\r\n                totalLength += title.length;\r\n            }\r\n            if (description) {\r\n                totalLength += description.text.length;\r\n            }\r\n\r\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { instant_view_version, site_name } = web_page;\r\n        let { description, title } = web_page;\r\n\r\n        if (description['@type'] === 'formattedText') {\r\n            description = getFormattedText(description);\r\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\r\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\r\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\r\n\r\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\r\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\r\n        }\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport ReplyMarkup from './Markup/ReplyMarkup';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport EmptyTile from '../Tile/EmptyTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle,\r\n    isEmptySelection\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport {\r\n    openUser,\r\n    openChat,\r\n    selectMessage,\r\n    openReply,\r\n    replyMessage,\r\n    forwardMessages\r\n} from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Message.css';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            copyLink: null,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageContent = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageEdited = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    handleUpdateMessageContentAndEditedOnce = () => {\r\n        const { updateMessageContent, updateMessageEdited } = this;\r\n        this.updateMessageContent = null;\r\n        this.updateMessageEdited = null;\r\n\r\n        if (!updateMessageContent && !updateMessageEdited) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        let handled = false;\r\n        if (updateMessageContent) {\r\n            const { emojiMatches } = this.state;\r\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n            if (newEmojiMatches !== emojiMatches) {\r\n                handled = true;\r\n                this.setState({ emojiMatches: newEmojiMatches });\r\n            }\r\n        }\r\n\r\n        if (handled) return;\r\n\r\n        startMessageEditing(chatId, messageId);\r\n        this.forceUpdate(() => {\r\n            stopMessageEditing(chatId, messageId);\r\n        });\r\n    };\r\n\r\n    handleSelectUser = userId => { \r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let { showTail } = this.props;\r\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n            />\r\n        );\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': isMetaBubble(chatId, messageId)\r\n                })}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const webPage = getWebPage(message);\r\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n        // const isHongb = ture;\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        console.log(text[0],'look') \r\n      if (typeof (text[0]) == 'string'){\r\n      if (text[0] && (text[0]).match(/^ct!([\\s\\S]*)!5!100!{\"remittanceId\":([\\s\\S]*),\"payer\":([\\s\\S]*),\"payee\":([\\s\\S]*),\"amount\":([\\s\\S]*)}$/g)) {\r\n\r\n        text[0] = [\r\n          <span style={{ color: 'grey' }}>\r\n            【请在手机端查看转账】\r\n          </span>\r\n          ];\r\n      }\r\n\r\n      else if (text[0] && (text[0]).match(/^ct!([\\s\\S]*)!2!100!{\"redPacketId\":([\\s\\S]*),\"from\":([\\s\\S]*),\"title\":([\\s\\S]*)}$/g)) {\r\n\r\n        text[0] = [\r\n          <span style={{ color: 'grey' }}>\r\n            【请在手机端查看红包】\r\n          </span>\r\n          ];\r\n\r\n      }\r\n\r\n      else if (text[0] && (text[0]).match(/^ct!([\\s\\S]*)!2!200!{\"redPacketId\":([\\s\\S]*),\"from\":([\\s\\S]*),\"type\":([\\s\\S]*),\"price\":([\\s\\S]*),\"isLast\":([\\s\\S]*)}$/g)) {\r\n\r\n        text[0] = [\r\n          <span style={{ color: 'grey' }}>\r\n            【领取了一个红包】\r\n          </span>\r\n          ];\r\n      }else if(text[0] && (text[0]).match(/^ct!([\\s\\S]*)!5!200!{\"remittanceId\":([\\s\\S]*),\"payer\":([\\s\\S]*),\"payee\":([\\s\\S]*),\"amount\":([\\s\\S]*)}$/g)){\r\n        text[0] = [\r\n            <span style={{ color: 'grey' }}>\r\n              【领取了一笔转账】\r\n            </span>\r\n            ];\r\n      }\r\n\r\n      else if (text[0] && text[0] == 'ct!99914b932bd37a50b983c5e7c90ae93b!3!101!{}') {\r\n        text[0] = [\r\n          <span style={{ color: 'grey' }}>\r\n            【对方加你为好友了】\r\n          </span>\r\n        ];\r\n        console.log('text :', text);\r\n      }\r\n      else if (text[0] && text[0] == 'ct!99914b932bd37a50b983c5e7c90ae93b!3!100!{}') {\r\n        text[0] = [\r\n          <span style={{ color: 'grey' }}>\r\n            【截屏了一次】\r\n          </span>\r\n          ];\r\n        console.log('text :', text);\r\n      }\r\n      }\r\n\r\n      // if (text[0] == undefined){\r\n      //   text[0] = text[0]\r\n      // } else if (text[0] && (text[0]).match(/^ct!([\\s\\S]*)!5!100!{\"remittanceId\":([\\s\\S]*),\"payer\":136817772,\"payee\":136817701,\"amount\":([\\s\\S]*)}$/g)){\r\n        \r\n\r\n      //   text[0] = [\r\n      //     <span style={{ color: 'grey' }}>\r\n      //       【请在手机端查看红包】\r\n      //     </span>];\r\n      \r\n      // }\r\n\r\n\r\n\r\n\r\n\r\n      // if (text[0] == 'ct!25fc9d496f703a1472123ce5fe4f1d8e!2!200!{\"redPacketId\":58,\"from\":136817692,\"type\":1,\"price\":200,\"isLast\":true}') {\r\n      //   text[0] = [\r\n      //     <span style={{ color: 'grey' }}>\r\n      //       【你领取了红包】\r\n      //     </span>];\r\n      //   console.log('text :', text);\r\n      // }\r\n\r\n\r\n      // if (text[0] && (text[0]).match(/^ct!([\\s\\S]*)!5!100!{\"remittanceId\":([\\s\\S]*),\"payer\":136817772,\"payee\":136817701,\"amount\":([\\s\\S]*)}$/g)) {\r\n\r\n      //   text[0] = [\r\n      //     <span style={{ color: 'grey' }}>\r\n      //       【测试】\r\n      //     </span>];\r\n      // }\r\n\r\n      \r\n      // if (text[0] == 'ct!235a55136f145c35918d181d8b3f7e06!2!100!{\"redPacketId\":58,\"from\":136817692,\"title\":\"恭喜发财, 大吉大利\"}') {\r\n      //   text[0] = [\r\n      //   <span style={{ color: 'grey' }}>\r\n      //     【请在手机端查看红包】\r\n      //   </span>];\r\n      //   console.log('text :', text);\r\n      // }\r\n      // if (text[0] == 'ct!3ce2b431898b8db62147aa74aa10e171!2!100!{\"redPacketId\":60,\"from\":136817692,\"title\":\"恭喜发财, 大吉大利\"}') {\r\n      //   text[0] = [\r\n      //   <span style={{ color: 'grey' }}>\r\n      //     【请在手机端查看红包】\r\n      //   </span>];\r\n      //   console.log('text :', text);\r\n      // }\r\n      // if (text[0] == 'ct!44ef4dfc7ee5afe5cf173ebd032faea1!2!100!{\"redPacketId\":59,\"from\":136817772,\"title\":\"恭喜发财, 大吉大利\"}') {\r\n      //   text[0] = [\r\n      //   <span style={{ color: 'grey' }}>\r\n      //     【请在手机端查看红包】\r\n      //   </span>];\r\n      //   console.log('text :', text);\r\n      // }\r\n\r\n\r\n\r\n\r\n\r\n      // if (text[0] == 'ct!4c02def869a69ad052703bfc00f62de3!5!100!{\"remittanceId\":34,\"payer\":136817772,\"payee\":136817701,\"amount\":2}') {\r\n      //   text[0] = [<span style={{ color: 'grey' }}>【请在手机端查看红包】</span>];\r\n      //   console.log('text :', text);\r\n      // }\r\n      // if (!text.length) {\r\n      //   if (/^ct!([a-f\\dA-F]{32})!(\\d+)!(\\d+)!([^$]+)/.test(text)) {\r\n      //     const msgInfo = text.split('!');\r\n      //     if (msgInfo[2] == 2) {\r\n      //       switch (msgInfo[3]) {\r\n      //         case '100':\r\n      //           return [<span style={{ color: 'red' }}>[发了一个红包,请在手机端领取]</span>];\r\n\r\n      //         case '200':\r\n      //           return [<span style={{ color: 'red' }}>[领取了红包]</span>];\r\n\r\n      //       }\r\n      //     } else if (msgInfo[2] == 3) {\r\n      //       return [<span style={{ color: 'blue' }}>[我截屏了]</span>];\r\n      //     }\r\n      //   }\r\n      //   return text;\r\n      // }\r\n\r\n\r\n\r\n\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded =\r\n            !hasCaption  && (\r\n                content['@type'] === 'messageAnimation' ||\r\n                content['@type'] === 'messageVideo' ||\r\n                content['@type'] === 'messagePhoto' ||\r\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\r\n\r\n        // console.log('[p] m.render id=' + message.id);\r\n\r\n        // return (\r\n        //     <StubMessage>\r\n        //         {text}\r\n        //         {media}\r\n        //         <WebPage\r\n        //             chatId={chatId}\r\n        //             messageId={messageId}\r\n        //             openMedia={this.openMedia}\r\n        //             meta={inlineMeta}\r\n        //         />\r\n        //     </StubMessage>\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div>\r\n                                <div\r\n                                    className={classNames('message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                    style={style}>\r\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                        <div className='message-title'>\r\n                                            {showTitle && !showForward && (\r\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\r\n                                            )}\r\n                                            {showForward && <Forward forwardInfo={forward_info} />}\r\n                                        </div>\r\n                                    )}\r\n                                    {showReply && (\r\n                                        <Reply\r\n                                            chatId={chatId}\r\n                                            messageId={reply_to_message_id}\r\n                                            onClick={this.handleReplyClick}\r\n                                        />\r\n                                    )}\r\n                                    {media}\r\n                                    <div\r\n                                        className={classNames('message-text', {\r\n                                            'message-text-1emoji': emojiMatches === 1,\r\n                                            'message-text-2emoji': emojiMatches === 2,\r\n                                            'message-text-3emoji': emojiMatches === 3\r\n                                        })}>\r\n                                        {text}\r\n                                    </div>\r\n                                    {webPage && (\r\n                                        <WebPage\r\n                                            chatId={chatId}\r\n                                            messageId={messageId}\r\n                                            openMedia={this.openMedia}\r\n                                            meta={inlineMeta}\r\n                                        />\r\n                                    )}\r\n                                    {withBubble && meta}\r\n                                </div>\r\n                                {reply_markup && (\r\n                                    <ReplyMarkup\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        markup={reply_markup}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    sendingState: PropTypes.object,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n}\r\n\r\nMessage.defaultProps = {\r\n    sendingState: null,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showDate: false\r\n}\r\n\r\n// const enhance = compose(\r\n//     withSaveRef(),\r\n//     withTranslation(),\r\n//     withRestoreRef()\r\n// );\r\n\r\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\r\n\r\nexport default message;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\nimport MessageMenu from './MessageMenu';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 96,\r\n    height: 96,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false,\r\n            contextMenu: false,\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\r\n        const { highlighted, contextMenu } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted, contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            displaySize={96}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={null}\r\n                    source={'chat'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServiceMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showUnreadSeparator: PropTypes.bool\r\n}\r\n\r\nServiceMessage.defaultProps = {\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport Album from '../Message/Album/Album';\r\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport InputBoxHints from './InputBoxHints';\r\nimport Message from '../Message/Message';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\r\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { sendBotStartMessage } from '../../Actions/Message';\r\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastRequests = new Map();\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\r\n    }\r\n\r\n    hasLastMessage() {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return false;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return true;\r\n\r\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId, messageId } = this.props;\r\n        this.handleSelectChat(chatId, null, messageId, null);\r\n\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateStartMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { history } = this.state;\r\n        if (!history.length) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\r\n            return;\r\n        }\r\n\r\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\r\n\r\n        this.scrollBottomAfterEditing = {\r\n            chatId,\r\n            messageId\r\n        };\r\n    };\r\n\r\n    onClientUpdateStopMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { scrollBottomAfterEditing } = this;\r\n        if (!scrollBottomAfterEditing) return;\r\n\r\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\r\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n        this.scrollBottomAfterEditing = null;\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id, is_pinned } = update;\r\n        const { chatId, filter } = this.props;\r\n        if (chatId !== chat_id) return;\r\n        if (!filter) return;\r\n\r\n        if (is_pinned) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n\r\n            const list = this.listRef.current;\r\n\r\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            }\r\n\r\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n            const history = [message];\r\n            this.scrollBehaviorNone = true;\r\n            this.insert(history, newState, () => {\r\n                this.scrollBehaviorNone = false;\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, history);\r\n            this.viewMessages(history);\r\n        } else {\r\n            this.deleteHistory([message_id]);\r\n\r\n            const media = MessageStore.getMedia(chatId);\r\n            if (media && !media.pinned.length) {\r\n                closePinned();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.hasLastMessage()) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        const { list } = update;\r\n        if (!list) return;\r\n        if (list['@type'] !== 'chatListMain') return;\r\n\r\n        const { history } = this.state;\r\n        if (history && history.length > 0) return;\r\n\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        //const prevOffsetHeight = list.offsetHeight;\r\n        //const prevScrollTop = list.scrollTop;\r\n\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === this.prevScrollTop) {\r\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n\r\n            this.updateItemsInView();\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.hasLastMessage()) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(history, newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n        const { sessionId } = this;\r\n\r\n        this.prevScrollTop = null;\r\n        this.defferedActions = [];\r\n\r\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\r\n\r\n        if (chat) {\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                TdLibController.send({\r\n                    '@type': 'openChat',\r\n                    chat_id: chatId\r\n                });\r\n            }\r\n\r\n            const unread = !messageId && chat.unread_count > 1;\r\n            let fromMessageId = 0;\r\n            if (unread && chat.last_read_inbox_message_id) {\r\n                fromMessageId = chat.last_read_inbox_message_id;\r\n            } else if (messageId) {\r\n                fromMessageId = messageId;\r\n            } else if (scrollPosition) {\r\n                fromMessageId = scrollPosition.messageId;\r\n            }\r\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            sessionId.loading = true;\r\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\r\n            .catch(error => {\r\n                return {\r\n                    '@type': 'messages',\r\n                    messages: [],\r\n                    total_count: 0\r\n                };\r\n            }).finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            } else if (scrollPosition) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\r\n            }\r\n\r\n            this.cancelUpdatePinnedMessage = true;\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n                requestAnimationFrame(() => {\r\n                    this.cancelUpdatePinnedMessage = false;\r\n                });\r\n\r\n                this.loadIncompleteHistory(result, limit);\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                // getChatFullInfo(chatId);\r\n                getChatMedia(chatId);\r\n                if (this.props.options) {\r\n                    const { botStartMessage } = this.props.options;\r\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\r\n                        const { botUserId, parameter } = botStartMessage;\r\n\r\n                        await sendBotStartMessage(chatId, botUserId, parameter);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            sessionId.loading = true;\r\n            this.replace(0, [], () => {\r\n                sessionId.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChatId !== chatId && !this.props.filter) {\r\n            if (previousChat) {\r\n                TdLibController.send({\r\n                    '@type': 'closeChat',\r\n                    chat_id: previousChatId\r\n                });\r\n\r\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\r\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\r\n                const message = this.messages[scrollMessage.index];\r\n                if (message) {\r\n                    const { chatId, messageId } = message.props;\r\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\r\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async (result, limit) => {\r\n        const MAX_ITERATIONS = 5;\r\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\r\n            result = await this.onLoadNext();\r\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n        }\r\n    };\r\n\r\n    isCompleteHistory = (result, limit) => {\r\n        if (!result) return false;\r\n        if (!result.messages.length) return true;   // end of the history\r\n\r\n        return result.messages.length >= limit;\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n        if (sessionId.loading) return;\r\n\r\n        if (sessionId.loadMigratedHistory) {\r\n            return await this.onLoadMigratedHistory();\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        let result = null;\r\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\r\n        if (this.lastRequests.has(lastRequestKey)) {\r\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\r\n        } else {\r\n            sessionId.loading = true;\r\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\r\n                .finally(() => {\r\n                    sessionId.loading = false;\r\n                });\r\n        }\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (!result.messages.length) {\r\n            this.lastRequests.set(lastRequestKey, result);\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\r\n                        });\r\n                    }\r\n                }, 100);\r\n            }\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) {\r\n            fullInfo = await getChatFullInfo(chatId);\r\n        }\r\n        if (!fullInfo.upgraded_from_basic_group_id) {\r\n            return;\r\n        }\r\n\r\n        sessionId.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n        if (sessionId.loading) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\r\n        .finally(() => {\r\n            sessionId.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n            }\r\n\r\n            this.loadIncompleteHistory(result, limit);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (sessionId.loading) return;\r\n        if (this.hasLastMessage()) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\r\n            .finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(result.messages, {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n            if (result.messages.length > 0) {\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\r\n                        }, () => {\r\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                        });\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let history = [...this.state.history];\r\n        const index = history.findIndex(x => x.id === oldMessageId);\r\n        if (index !== -1) {\r\n            history.splice(index, 1, message);\r\n        } else {\r\n            history = this.state.history;\r\n        }\r\n\r\n        this.setState({ history }, callback);\r\n    }\r\n\r\n    insert(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history).sort((a, b) => {\r\n                if (a.id < b.id) {\r\n                    return -1;\r\n                } else if (a.id > b.id) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n        }, callback);\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history)//.slice(0, 100)\r\n        }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: this.state.history.concat(history),\r\n            ...newState\r\n        }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return null;\r\n\r\n        const messages = [];\r\n        const messagesMap = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    const key = `${chatId}_${messageId}`;\r\n                    messagesMap.set(key, key);\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        const key = `${chatId}_${messageIds[j]}`;\r\n                        messagesMap.set(key, key);\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mapEquals(this.inViewMap, messagesMap)) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\r\n\r\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\r\n            this.inViewMap = messagesMap;\r\n\r\n            return messages;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    updatePinnedMessage = scrollToNext => {\r\n        const { chatId, filter } = this.props;\r\n        if (filter) return;\r\n\r\n        const { prevScrollTop } = this;\r\n        if (prevScrollTop === null) {\r\n            // console.log('[pin] handleScroll 3.1');\r\n            return;\r\n        }\r\n        // const { prevScrollTop } = this;\r\n        // if (prevScrollTop === null) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return;\r\n        if (!media.pinned) return;\r\n        if (media.pinned.length <= 1) return;\r\n\r\n        const messages = [];\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!messages) return;\r\n        if (messages.length <= 1) return;\r\n\r\n        const minId = messages[0].messageId;\r\n        const maxId = messages[messages.length - 1].messageId;\r\n\r\n        let id = 0;\r\n        for (let i = 0; i < media.pinned.length; i++) {\r\n            const pinned = media.pinned[i];\r\n            if (pinned.id >= minId && pinned.id <= maxId) {\r\n                id = pinned.id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!id) {\r\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\r\n            const pinnedMaxId = media.pinned[0].id\r\n\r\n            if (pinnedMaxId < minId) {\r\n                id = pinnedMaxId;\r\n            } else if (pinnedMinId > maxId) {\r\n                id = pinnedMinId;\r\n            }\r\n        }\r\n\r\n        const { clickedPinned, currentPinned } = MessageStore;\r\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\r\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\r\n\r\n\r\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\r\n                // console.log('[pin] handleScroll 3.2');\r\n                return;\r\n            }\r\n\r\n            // console.log('[pin] handleScroll 4', { chatId, id });\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\r\n        } else {\r\n            // console.log('[pin] handleScroll 3.3');\r\n        }\r\n    };\r\n\r\n    updateScrollDownVisibility = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.hasLastMessage() && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (!this.cancelUpdatePinnedMessage) {\r\n            this.updatePinnedMessage(scrollToNext);\r\n        }\r\n\r\n        this.updateScrollDownVisibility();\r\n\r\n        if (this.prevScrollTop !== null) {\r\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\r\n                this.onLoadNext();\r\n            }\r\n\r\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\r\n                this.onLoadPrevious();\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\r\n                this.scrollToPosition(position);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     snapshot.scrollTop=${snapshot.scrollTop}\r\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\r\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToPosition = position => {\r\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\r\n        const { messageId, offset } = position;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - offset;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId\r\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\r\n                    if (list.offsetHeight < node.offsetHeight) {\r\n                        // scroll to the message top\r\n                        list.scrollTop = node.offsetTop;\r\n                    } else {\r\n                        // scroll message to the center of screen\r\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\r\n                    }\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!scrolled) {\r\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    getRequest = (chatId, fromMessageId, offset, limit) => {\r\n        const { filter } = this.props;\r\n\r\n        if (filter) {\r\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\r\n                const media = MessageStore.getMedia(chatId);\r\n                if (media && media.pinned && media.pinned.length > 0) {\r\n                    return Promise.resolve({\r\n                        '@type': 'messages',\r\n                        messages: [...media.pinned]\r\n                    });\r\n                }\r\n            }\r\n\r\n            return TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                from_message_id: fromMessageId,\r\n                offset,\r\n                limit,\r\n                filter,\r\n                sender_user_id: null,\r\n                query: null\r\n            });\r\n        }\r\n\r\n        return TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset,\r\n            limit\r\n        });\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\r\n        if (hasLastMessage) {\r\n            this.scrollToBottom();\r\n        } else {\r\n            this.handleSelectChat(chatId, chatId, 0, messageId);\r\n        }\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        if (!event.dataTransfer) return;\r\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            dataTransfer: event.dataTransfer\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isFirstUnread) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                prevMessage.content['@type'] === 'messageSticker' ||\r\n                prevMessage.content['@type'] === 'messageVideoNote' ||\r\n                !senderEquals(sender, prevMessage.sender) ||\r\n                is_outgoing !== prevMessage.is_outgoing ||\r\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, filter } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        this.itemsMap.clear();\r\n\r\n        if (clearHistory) {\r\n            this.messages = null;\r\n        } else {\r\n            this.messages = [];\r\n            for (let i = 0; i < history.length; i++) {\r\n                const message = history[i];\r\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\r\n                let albumAdded = false;\r\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <Album\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <DocumentAlbum\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                }\r\n\r\n                if (!albumAdded) {\r\n                    /// history[4] id=5 prev\r\n                    /// history[5] id=6 current\r\n                    /// history[6] id=7 next\r\n                    /// ...\r\n                    /// history[9] id=10\r\n\r\n                    const x = message;\r\n                    const prevMessage = i > 0 ? history[i - 1] : null;\r\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                    let m = null;\r\n                    if (isServiceMessage(x)) {\r\n                        m = (\r\n                            <ServiceMessage\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                            // if (m.type.render.history.text = 'ct!99914b932bd37a50b983c5e7c90ae93b!3!101!{}' ) {\r\n                            // m.type.render.history.text = '1111'\r\n                        m = (\r\n                            <Message\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                sendingState={x.sending_state}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    }\r\n                    // if (m.type.render.history.text = 'ct!99914b932bd37a50b983c5e7c90ae93b!3!101!{}' ) {\r\n                    //   m.type.render.history.text = '1111'\r\n                    // }\r\n                    // console.log('11111111111111m',m);\r\n                    // console.log('111111111111111111this.messages',this.messages);\r\n                    this.messages.push(m);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <ActionBar chatId={chatId} />\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n                {/* <InputBoxHints /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagesList.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    options: PropTypes.object,\r\n    filter: PropTypes.object\r\n};\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport { clearSelection, closePinned } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessagesHeader.css'\r\n\r\nclass PinnedMessagesHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const media = MessageStore.getMedia(props.chatId);\r\n\r\n        this.state = {\r\n            selectedCount: MessageStore.selectedItems.size,\r\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinnedCount !== pinnedCount) {\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({\r\n            selectedCount: MessageStore.selectedItems.size\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { selectedCount } = this.state;\r\n        if (selectedCount > 0) {\r\n            clearSelection();\r\n        }\r\n\r\n        closePinned();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        let title = t('PinnedMessages');\r\n        if (pinnedCount === 1) {\r\n            title = t('PinnedMessage');\r\n        } else if (pinnedCount > 1) {\r\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\r\n                <IconButton\r\n                    className='header-left-button main-menu-button'\r\n                    onClick={this.handleClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectedCount}/>\r\n                    <div className={classNames('header-status', 'grow')}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nPinnedMessagesHeader.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(PinnedMessagesHeader);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessages.css';\r\n\r\nclass PinnedMessages extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId } = state;\r\n        const { chatId } = props;\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                opened: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    onClientUpdateOpenPinned = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n\r\n        if (currentChatId !== chatId) return;\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    };\r\n\r\n    onClientUpdateClosePinned = update => {\r\n        this.setState({\r\n            opened: false\r\n        });\r\n    };\r\n\r\n    handleUnpinAll = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestUnpinMessage(chatId, null);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { opened } = this.state;\r\n        if (!opened) return null;\r\n\r\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\r\n\r\n        return (\r\n            <div className='pinned-messages'>\r\n                <div className='pinned-messages-wrapper'>\r\n                    <div className='dialog-background'/>\r\n                    <div className='dialog-details-wrapper'>\r\n                        <PinnedMessagesHeader chatId={chatId} />\r\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\r\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        // return (\r\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\r\n        //\r\n        //     </SidebarPage>\r\n        // );\r\n    }\r\n}\r\n\r\nPinnedMessages.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessages);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='sticker-set-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableEnforceFocus={true}\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0,\r\n            scroll: false,\r\n            scrollTop: false,\r\n            scrollBottom: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n\r\n        if (stickerSet !== nextState.stickerSet) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextState.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (scroll !== nextState.scroll) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollTop !== nextState.scrollTop) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollBottom !== nextState.scrollBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet }, () => {\r\n            setTimeout(() => {\r\n                this.handleScroll();\r\n            }, 0);\r\n        });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 5;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const hasScroll = content.scrollHeight > content.offsetHeight;\r\n        const scrollTop = hasScroll && content.scrollTop === 0;\r\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\r\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\r\n\r\n        this.setState({\r\n            scrollTop,\r\n            scrollBottom,\r\n            scroll\r\n        });\r\n    }\r\n\r\n    handleInViewport = (fileId, elementRect) => {\r\n        const { current } = this.contentRef;\r\n        if (!current) return false;\r\n\r\n        const contentRect = current.getBoundingClientRect();\r\n        const top = elementRect.top - contentRect.top;\r\n        const bottom = elementRect.bottom - contentRect.bottom;\r\n        // below bottom edge\r\n        if (top > contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n        // upper top edge\r\n        if (bottom < - contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n\r\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={true}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                    inViewportFunc={this.handleInViewport}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className={classNames(\r\n                    'sticker-set-dialog',\r\n                    { 'sticker-set-dialog-scroll': scroll },\r\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\r\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\r\n                )}\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <IconButton\r\n                        aria-label='Close'\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    ref={this.contentRef}\r\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onScroll={this.handleScroll}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { closeChatSelect } from '../../Actions/Message';\r\nimport './SelectChatPlaceholder.css';\r\n\r\nclass SelectChatPlaceholder extends React.Component {\r\n\r\n    handleClick = () => {\r\n        closeChatSelect();\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\r\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSelectChatPlaceholder.propTypes = {};\r\n\r\nexport default withTranslation()(SelectChatPlaceholder);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessages from './PinnedMessages';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\r\nimport { getSrc } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore'; \r\n\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null,\r\n            chatSelectOptions: null,\r\n            chatOpenOptions: null,  \r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\r\n            return true;\r\n        }\r\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateClearOpenChatOptions = update => {\r\n        this.setState({\r\n            chatOpenOptions: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatSelect = update => {\r\n        const { options } = update;\r\n\r\n        this.setState({\r\n            chatSelectOptions: options\r\n        });\r\n    };\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatSelectOptions } = this.state;\r\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\r\n        // console.log('update');\r\n\r\n        this.setState({\r\n            chatId,\r\n            messageId,\r\n            chatOpenOptions,\r\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n  \r\n    render() { \r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\r\n     \r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.file);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='dialog-details' style={style}>\r\n                <div className='dialog-background'/>\r\n                <div className='dialog-details-wrapper'>\r\n                    <HeaderPlayer />\r\n                    <Header chatId={chatId} />\r\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\r\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\r\n                </div>\r\n                {chatSelectOptions && <SelectChatPlaceholder/>}\r\n                <PinnedMessages chatId={chatId}/>\r\n                <StickerSetDialog /> \r\n                <ChatInfoDialog chatId={chatId}/>\r\n                {/* <ChatInfoDialog permissions = {this.state.permissions}/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nconst articleRefs = new Map();\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        articleRefs.clear();\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport { articleRefs };\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        this.scrollRef = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        if (nextProps.text !== text) return true;\r\n        if (nextState.top !== top) return true;\r\n        if (nextState.bottom !== bottom) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const scroll = this.scrollRef.current;\r\n        if (!scroll) return;\r\n\r\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\r\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\r\n\r\n        this.setState({\r\n            top,\r\n            bottom\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div\r\n                    ref={this.scrollRef}\r\n                    className={classNames(\r\n                        'scrollbars-hidden',\r\n                        'media-caption-wrapper', {\r\n                            'media-caption-wrapper-top': top,\r\n                            'media-caption-wrapper-bottom': bottom,\r\n                            'media-caption-wrapper-both': !top && !bottom\r\n                        })}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='media-caption-text'>{text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport SafeLink from '../Additional/SafeLink';\r\nimport Player from '../Player/Player';\r\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n            const thumbnail = getViewerThumbnail(media);\r\n            const minithumbnail = getViewerMinithumbnail(media);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                const { video } = media;\r\n                if (video) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                thumbnail,\r\n                minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail } = this.state;\r\n\r\n        if (thumbnail && thumbnail.file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            thumbnail,\r\n            minithumbnail,\r\n            isPlaying,\r\n            supportsStreaming\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <Player\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            fileId={file.id}\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </Player>\r\n                        {!isPlaying && !supportsStreaming && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                // content = (\r\n                //     <Animation\r\n                //         type='preview'\r\n                //         stretch={true}\r\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n                //         animation={media}\r\n                //         onClick={this.handleContentClick}\r\n                //         showProgress={false}\r\n                //         style={{ borderRadius: 0 }}\r\n                //     />\r\n                // );\r\n\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    state = {  };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.fileId !== this.props.chatId) {\r\n            this.checkFileLoaded();\r\n        }\r\n    }\r\n\r\n    checkFileLoaded() {\r\n        // console.log('[down] checkLoaded');\r\n        const { fileId } = this.props;\r\n        const blob = FileStore.getBlob(fileId);\r\n        if (blob) {\r\n            // console.log('[down] checkLoaded blob');\r\n            return;\r\n        }\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) {\r\n            // console.log('[down] checkLoaded file');\r\n            return;\r\n        }\r\n\r\n        const { local } = file;\r\n        if (!local) return;\r\n        if (!local.is_downloading_completed) return;\r\n\r\n        // console.log('[down] checkLoaded getLocal');\r\n        const store = FileStore.getStore();\r\n        FileStore.getLocalFile(store, file, null, () => {\r\n            // console.log('[down] checkLoaded getLocal complete');\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkFileLoaded();\r\n\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const { fileId } = this.props;\r\n        const { file } = update;\r\n\r\n        if (file.id !== fileId) return;\r\n\r\n        if (file.local.is_downloading_completed) {\r\n            this.checkFileLoaded();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children, disabled: propsDisabled } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\r\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        if (!media) return;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isVideo = media['@type'] === 'video';\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                index,\r\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n                hasNextMedia: this.hasNextMedia(index, blocks)\r\n            }\r\n        );\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport { articleRefs } from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n        this.scrollToBlock(this.props.block, 'smooth');\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView, url: oldUrl } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(oldUrl)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToBlock(block, behavior) {\r\n        if (!block) return false;\r\n\r\n        if (!articleRefs) return false;\r\n\r\n        const ref = articleRefs.get(block);\r\n        if (!ref) return false;\r\n\r\n        const element = ReactDOM.findDOMNode(ref);\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollToElement(element, behavior) {\r\n        if (!element) return false;\r\n\r\n        const details = [];\r\n        let finished = false;\r\n        let currentElement = element;\r\n        do {\r\n            currentElement = currentElement.parentNode;\r\n            if (currentElement) {\r\n                if (currentElement.nodeName === 'DETAILS') {\r\n                    details.push(currentElement);\r\n                } else if (currentElement.nodeName === 'ARTICLE') {\r\n                    finished = true;\r\n                }\r\n            } else {\r\n                finished = true;\r\n            }\r\n        } while (!finished);\r\n\r\n        details.forEach(x => (x.open = true));\r\n\r\n        element.scrollIntoView({\r\n            block: 'center',\r\n            behavior\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const element = document.getElementById(hash.substr(1));\r\n\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, block, url } = this.props;\r\n\r\n        const hash = new URL(url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.url !== url) {\r\n                if (url.indexOf('#') === url.length - 1) {\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const { media } = this.state;\r\n\r\n                if (media) {\r\n                    setInstantViewViewerContent(null);\r\n                    return;\r\n                }\r\n\r\n                this.handleClose();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date, sender } = message;\r\n\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={sender} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Player from '../Player/Player';\r\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            const { content } = message;\r\n            const { web_page: webPage } = content;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text,\r\n                thumbnail,\r\n                minithumbnail,\r\n                webPage\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            this.setState({\r\n                thumbnail\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n\r\n        const { source } = this.state;\r\n        if (!source) return;\r\n\r\n        source.loadNextBuffer();\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            supportsStreaming,\r\n            mimeType,\r\n            text,\r\n            minithumbnail,\r\n            thumbnail,\r\n            webPage,\r\n            isPlaying\r\n        } = this.state;\r\n\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n\r\n        const isEmbed = isEmbedMessage(chatId, messageId);\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <Player\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        fileId={file.id}\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </Player>\r\n                    {!isPlaying && !supportsStreaming && thumb}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            // const message = MessageStore.get(chatId, messageId);\r\n            //\r\n            // content = (\r\n            //     <Animation\r\n            //         type='preview'\r\n            //         stretch={true}\r\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n            //         animation={message.content.animation || message.content.web_page.animation}\r\n            //         onClick={this.handleContentClick}\r\n            //         showProgress={false}\r\n            //         style={{ borderRadius: 0 }}\r\n            //         />\r\n            // );\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying && thumb}\r\n                </div>\r\n            );\r\n        } else if (webPage && webPage.embed_url) {\r\n            let { embed_url: url } = webPage;\r\n\r\n            switch (webPage.site_name) {\r\n                case 'Coub': {\r\n                    break;\r\n                }\r\n                case 'SoundCloud': {\r\n                    break;\r\n                }\r\n                case 'Spotify': {\r\n                    break;\r\n                }\r\n                case 'Twitch': {\r\n                    url += `&parent=${window.location.hostname}`;\r\n                    break;\r\n                }\r\n                case 'YouTube': {\r\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\r\n                    break;\r\n                }\r\n                case 'Vimeo': {\r\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\r\n                    break;\r\n                }\r\n                case 'КиноПоиск': {\r\n                    break;\r\n                }\r\n                case 'Яндекс.Музыка': {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            content = (\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='media-viewer-content'>\r\n                    {content}\r\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                </div>\r\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    canMessageBeDeleted,\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isEmbedMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!fullscreenElement) {\r\n                    this.handlePrevious();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!fullscreenElement) {\r\n                    this.handleNext();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        const isVideo = isVideoMessage(chatId, currentMessageId);\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users } = message;\r\n\r\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isEmbedMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        } else if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'/>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(event);\r\n    };\r\n\r\n    handlePhotoClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onPrevious } = this.props;\r\n\r\n        onPrevious && onPrevious(event);\r\n    };\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n\r\n    onClose: PropTypes.func,\r\n    onPrevious: PropTypes.func\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    render() {\r\n        const { chatId, date, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-info' style={style}>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = async () => {\r\n        const { chatId } = this.props;\r\n        const {\r\n            currentIndex,\r\n            totalCount,\r\n            hasNextMedia,\r\n            hasPreviousMedia\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n\r\n        const { id } = photo;\r\n        if (!id) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'deleteProfilePhoto',\r\n            profile_photo_id: id\r\n        });\r\n\r\n        this.history.splice(index, 1);\r\n        if (!this.history.length) {\r\n            this.handleClose();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            totalCount: totalCount - 1\r\n        });\r\n\r\n        if (hasNextMedia) {\r\n            const nextIndex = currentIndex - 1;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === 0) {\r\n                    this.loadNext();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasPreviousMedia) {\r\n            const nextIndex = currentIndex;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === this.history.length - 1) {\r\n                    this.loadPrevious();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, obj, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                ...obj,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount,\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\r\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\r\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\r\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n        const isMe = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\r\n                    />\r\n                    <div style={{ width: 64 }}/>\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    {isMe && (\r\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\r\n                            <DeleteIcon />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getFormattedText } from '../../Utils/Message';\r\nimport './AlertDialog.css';\r\n\r\nclass AlertDialog extends React.Component {\r\n\r\n    handleClose = result => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(false);\r\n    };\r\n\r\n    render() {\r\n        const { params, t } = this.props;\r\n        if (!params) return null;\r\n\r\n        let { title, message, ok, cancel } = params;\r\n\r\n        if (message['@type'] === 'formattedText') {\r\n            message = getFormattedText(message, t, {});\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    { cancel && (\r\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\r\n                            {cancel}\r\n                        </Button>\r\n                    )}\r\n                    { ok && (\r\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\r\n                            {ok}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nAlertDialog.propTypes = {\r\n    params: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(AlertDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './BlockSenderDialog.css';\r\n\r\nclass BlockSenderDialog extends React.Component {\r\n    state = {\r\n        reportSpam: true,\r\n        deleteChat: true\r\n    };\r\n\r\n    handleReportSpamChange = () => {\r\n        const { reportSpam } = this.state;\r\n\r\n        this.setState({\r\n            reportSpam: !reportSpam\r\n        });\r\n    };\r\n\r\n    handleDeleteChatChange = () => {\r\n        const { deleteChat } = this.state;\r\n\r\n        this.setState({\r\n            deleteChat: !deleteChat\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sender, onClose, t } = this.props;\r\n        if (!sender) return null;\r\n\r\n        const { reportSpam, deleteChat } = this.state;\r\n\r\n        let title = null;\r\n        let text = null;\r\n        const entities = [];\r\n        let reportText = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                const { user_id } = sender;\r\n\r\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\r\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\r\n                text = getSimpleMarkupEntities(text, entities);\r\n                reportText = LStore.getString('BlockContact');\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                const { chat_id } = sender;\r\n\r\n                const location = getChatLocation(chat_id);\r\n                if (location) {\r\n                    title = LStore.getString('ReportUnrelatedGroup');\r\n                    if (location.address) {\r\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\r\n                        text = getSimpleMarkupEntities(text, entities);\r\n                    } else {\r\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\r\n                    }\r\n                } else {\r\n                    title = LStore.getString('ReportSpamTitle');\r\n                    if (isChannelChat(chat_id)) {\r\n                        text = LStore.getString('ReportSpamAlertChannel');\r\n                    } else {\r\n                        text = LStore.getString('ReportSpamAlertGroup');\r\n                    }\r\n                }\r\n                reportText = LStore.getString('ReportChat');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\r\n                    </DialogContentText>\r\n                    { sender['@type'] === 'messageSenderUser' && (\r\n                        <div className='block-sender-params'>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\r\n                                label={t('DeleteReportSpam')}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\r\n                                label={t('DeleteThisChat')}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\r\n                        {reportText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nBlockSenderDialog.propTypes = {\r\n    sender: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(BlockSenderDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\r\n\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <div>\r\n                            <DialogContentText id='delete-dialog-description'>\r\n                                {/* Are you sure you want clear history? */}\r\n                                {/* TODO: */}\r\n                                \r\n                                你确定要删除历史记录吗？\r\n                            </DialogContentText>\r\n                            {\r\n                                canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                        }\r\n                                        // TODO:\r\n                                        // label={\r\n                                        //     isPrivateChat(chatId)\r\n                                        //         ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                        //         : 'Delete for all members'\r\n                                        // }\r\n                                        label={\r\n                                            isPrivateChat(chatId)\r\n                                                ? `删除 ${getChatShortTitle(chatId, false, t)}`\r\n                                                : 'Delete for all members'\r\n                                        }\r\n                                        style={{ marginLeft: 0 }}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nClearHistoryDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ClearHistoryDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { sprintf } from '../../Utils/Language';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass DeleteMessagesDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageIds } = props;\r\n        const { prevChatId, prevMessageIds } = state;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageIds,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageIds, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n      let confirm = count === 1 ? t('你确定要删除吗') : t('你确定要删除这些信息吗');\r\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\r\n          confirm = count === 1 ? t('你确定要删除吗') : t('你确定要删除这些信息吗');\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('删除消息', LStore.formatPluralString('messages', count))}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {confirm}\r\n                    </DialogContentText>\r\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\r\n                            label={\r\n                                isPrivateChat(chatId)\r\n                                    ? sprintf(t, '删除该用户的消息', getChatShortTitle(chatId, false, t))\r\n                                    : t('删除全部')\r\n                            }\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('取消')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('确定')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteMessagesDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(DeleteMessagesDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './InputPasswordDialog.css';\r\n\r\nclass InputPasswordDialog extends React.Component {\r\n\r\n    state = { };\r\n\r\n    handleChange = e => {\r\n        this.password = e.target.value;\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n\r\n        this.setState({ showPassword: !showPassword });\r\n    };\r\n\r\n    getErrorMessage = error => {\r\n        const { t } = this.props;\r\n\r\n        if (!error) return null;\r\n\r\n        if (error.message === 'PASSWORD_HASH_INVALID') {\r\n            return t('InvalidPassword');\r\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\r\n            const str = error.message.replace('Too Many Requests: retry after ', '');\r\n            try {\r\n                const time = parseInt(str);\r\n                const timeString = time < 60\r\n                    ? LStore.formatPluralString('Seconds', time)\r\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\r\n\r\n                return LStore.formatString('FloodWaitTime', timeString);\r\n            } catch (e) {\r\n                return error.message;\r\n            }\r\n        }\r\n\r\n        return error.message;\r\n    }\r\n\r\n    render() {\r\n        const { state, error, onClose, t } = this.props;\r\n        if (!state) return null;\r\n\r\n        const { showPassword, loading } = this.state;\r\n        const { password_hint: passwordHint } = state;\r\n\r\n        const errorMessage = this.getErrorMessage(error);\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {t('PleaseEnterCurrentPasswordTransfer')}\r\n                    </DialogContentText>\r\n                    <FormControl className='auth-input' fullWidth>\r\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\r\n                        <Input\r\n                            fullWidth\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            id='adornment-password'\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            disabled={loading}\r\n                            error={Boolean(error)}\r\n                            onChange={this.handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position='end'>\r\n                                    <IconButton\r\n                                        aria-label='Toggle password visibility'\r\n                                        onClick={this.handleClickShowPassword}\r\n                                        edge='end'>\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\r\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nInputPasswordDialog.propTypes = {\r\n    state: PropTypes.object,\r\n    error: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputPasswordDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            // TODO:\r\n            // case 'chatTypePrivate':\r\n            // case 'chatTypeSecret': {\r\n            //     return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            // }\r\n            case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    return `你确定要删除聊天记录和${getChatShortTitle(chatId, false, t)}?`;\r\n                }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLeaveChatDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenGameDialog.css';\r\n\r\nclass OpenGameDialog extends React.Component {\r\n    render() {\r\n        const { game, params, onClose, t } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { userId } = params;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenGameDialog.propTypes = {\r\n    game: PropTypes.object,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenGameDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenUrlDialog.css';\r\n\r\nclass OpenUrlDialog extends React.Component {\r\n    render() {\r\n        const { url, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('打开网址')}</DialogTitle>\r\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('是否打开此网站', url)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './RequestUrlDialog.css';\r\n\r\nclass RequestUrlDialog extends React.Component {\r\n    state = {\r\n        value1: true,\r\n        value2: true\r\n    };\r\n\r\n    handleValue1Change = () => {\r\n        const { value1 } = this.state;\r\n\r\n        this.setState({ value1: !value1 });\r\n    };\r\n\r\n    handleValue2Change = () => {\r\n        const { value2 } = this.state;\r\n\r\n        this.setState({ value2: !value2 });\r\n    };\r\n\r\n    render() {\r\n        const { url, params, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        const { value1, value2 } = this.state;\r\n\r\n        const { result } = params;\r\n        if (!result) return null;\r\n\r\n        const { domain, bot_user_id, request_write_access } = result;\r\n\r\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\r\n        const entities1 = [];\r\n        text1 = getSimpleMarkupEntities(text1, entities1);\r\n        const option1 = (\r\n            <FormControlLabel\r\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\r\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\r\n            />\r\n        );\r\n\r\n        let option2 = null;\r\n        if (request_write_access) {\r\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\r\n            const entities2 = [];\r\n            text2 = getSimpleMarkupEntities(text2, entities2);\r\n            option2 = (\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\r\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                    {option1}\r\n                    {option2}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nRequestUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RequestUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './PinMessageDialog.css';\r\n\r\nclass PinMessageDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n        const { prevChatId, prevMessageId } = state;\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageId,\r\n                revoke: !isPrivateChat(chatId)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { revoke } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        let text = '';\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                text = t('PinMessageAlertChat');\r\n                break;\r\n            }\r\n            case 'chatTypeBasicGroup': {\r\n                text = t('PinMessageAlert');\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isChannelChat(chatId)) {\r\n                    text = t('PinMessageAlertChannel');\r\n                } else {\r\n                    text = t('PinMessageAlert');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                    <>\r\n                        {\r\n                            isPrivateChat(chatId) && (\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                    }\r\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\r\n                                />\r\n                            )\r\n                        }\r\n                    </>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(PinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n\r\n                const { onTimeout } = this.props;\r\n                if (onTimeout) {\r\n                    onTimeout();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired,\r\n    onTimeout: PropTypes.func\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './UnpinMessageDialog.css';\r\n\r\nclass UnpinMessageDialog extends React.Component {\r\n\r\n    render() {\r\n        const { messageId, onClose, t } = this.props;\r\n\r\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nUnpinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(UnpinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AlertDialog from './Popup/AlertDialog';\r\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\r\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\r\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\r\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\r\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\r\nimport OpenGameDialog from './Popup/OpenGameDialog';\r\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\r\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\r\nimport PinMessageDialog from './Popup/PinMessageDialog';\r\nimport NotificationTimer from './Additional/NotificationTimer';\r\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\r\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\r\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\r\nimport { clearSelection, closePinned } from '../Actions/Client';\r\nimport { openGameInBrowser } from '../Utils/Game';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport { reportChat } from '../Actions/Chat';\r\n\r\nclass Actions extends React.PureComponent {\r\n    state = {\r\n        leaveChat: null,\r\n        clearHistory: null,\r\n        deleteMessages: null,\r\n        pinMessage: null,\r\n        unpinMessage: null,\r\n        alert: null,\r\n        openUrlAlert: null,\r\n        openGameAlert: null,\r\n        requestUrlAlert: null,\r\n        inputPasswordAlert: null,\r\n        requestBlockSenderAlert: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n    }\r\n\r\n    onClientUpdateBlockSender = update => {\r\n        const { sender } = update;\r\n\r\n        this.setState({ requestBlockSenderAlert: { sender }});\r\n    }\r\n\r\n    onClientUpdateInputPasswordAlert = update => {\r\n        const { state, onPassword } = update;\r\n\r\n        this.setState({ inputPasswordAlert: { state, onPassword } });\r\n    }\r\n\r\n    onClientUpdateOpenGameAlert = update => {\r\n        const { game, params } = update;\r\n\r\n        if (params && params.isVerified) {\r\n            this.openGameAlert = { game, params };\r\n            this.handleOpenGameContinue(null, true);\r\n        } else {\r\n            this.setState({ openGameAlert: { game, params } });\r\n        }\r\n    }\r\n\r\n    onClientUpdateOpenUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        if (params && !params.ask) {\r\n            this.openUrlAlert = { url, params };\r\n            this.handleOpenUrlContinue(null, true);\r\n        } else {\r\n            this.setState({ openUrlAlert: { url, params } });\r\n        }\r\n    };\r\n\r\n    onClientUpdateRequestUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        this.setState({ requestUrlAlert: { url, params } });\r\n    }\r\n\r\n    onClientUpdateSnackbar = update => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n        const { message, action } = update;\r\n\r\n        enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: action(closeSnackbar)\r\n        });\r\n    };\r\n\r\n    onClientUpdateAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ alert: { params } });\r\n    };\r\n\r\n    onClientUpdateUnpinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.unpinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handleUnpinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                unpinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdatePinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.pinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handlePinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                pinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({\r\n            deleteMessages: {\r\n                chatId,\r\n                messageIds\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ leaveChat : { chatId } });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ clearHistory : { chatId } });\r\n    };\r\n\r\n    handleClearHistoryContinue = (result, revoke) => {\r\n        const { t } = this.props;\r\n\r\n        const { clearHistory } = this.state;\r\n        if (!clearHistory) return;\r\n\r\n        this.setState({ clearHistory: null });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const message = t('HistoryClearedUndo');\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false,\r\n            revoke\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\r\n    };\r\n\r\n    handleLeaveContinue = async (result, undo = true) => {\r\n        const { leaveChat } = this.state || this;\r\n        if (!leaveChat) return;\r\n\r\n        const { chatId } = leaveChat;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        this.leaveChat = null;\r\n        this.setState({ leaveChat: null });\r\n\r\n        if (!result) return;\r\n\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const requests = [];\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isCreator(chatId)) {\r\n                    requests.push({\r\n                        '@type': 'setChatMemberStatus',\r\n                        chat_id: chatId,\r\n                        user_id: UserStore.getMyId(),\r\n                        status: {\r\n                            '@type': 'chatMemberStatusCreator',\r\n                            is_member: false\r\n                        }\r\n                    });\r\n                } else if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n        }\r\n\r\n        if (undo) {\r\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\r\n        } else {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDeleteMessagesContinue = (result, revoke) => {\r\n        const { deleteMessages } = this.state;\r\n        if (!deleteMessages) return;\r\n\r\n        const { chatId, messageIds } = deleteMessages;\r\n\r\n        clearSelection();\r\n        this.setState({ deleteMessages: null });\r\n\r\n        if (!result) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke\r\n        });\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\r\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n                closeSnackbar(snackKey);\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            closeSnackbar(snackKey);\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n        };\r\n\r\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\r\n\r\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\r\n        const snackKey = enqueueSnackbar(message, {\r\n            persist: true,\r\n            key,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='progress'\r\n                    color='inherit'\r\n                    className='progress-button'>\r\n                    <NotificationTimer\r\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\r\n                        onTimeout={() => {\r\n                            action();\r\n                            AppStore.removeScheduledAction(key);\r\n                        }}/>\r\n                </IconButton>,\r\n                <Button\r\n                    key='undo'\r\n                    color='primary'\r\n                    size='small'\r\n                    onClick={() => {\r\n                        cancel();\r\n                        AppStore.removeScheduledAction(key);\r\n                    }}>\r\n                    {t('Undo')}\r\n                </Button>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePinMessageContinue = (result, revoke) => {\r\n        let { pinMessage } = this.state;\r\n        pinMessage = pinMessage || this.pinMessage;\r\n        if (!pinMessage) return;\r\n\r\n        const { chatId, messageId } = pinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ pinMessage: null });\r\n        this.pinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        pinMessageAction(chatId, messageId, false, !revoke);\r\n    };\r\n\r\n    handleUnpinMessageContinue = async result => {\r\n        let { unpinMessage } = this.state;\r\n        unpinMessage = unpinMessage || this.unpinMessage;\r\n        if (!unpinMessage) return;\r\n\r\n        const { chatId, messageId } = unpinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ unpinMessage: null });\r\n        this.unpinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        if (canPinMessages(chatId)) {\r\n            if (messageId) {\r\n                await unpinMessageAction(chatId, messageId);\r\n            } else {\r\n                closePinned();\r\n\r\n                await unpinAllMessages(chatId);\r\n            }\r\n        } else {\r\n            closePinned();\r\n\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId,\r\n                clientData: { ...data, ...{ unpinned: true } }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAlertContinue = result => {\r\n        this.setState({ alert: null });\r\n    };\r\n\r\n    handleOpenUrlContinue = (event, result) => {\r\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\r\n\r\n        this.setState({ openUrlAlert: null });\r\n        this.openUrlAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { url, onClick } = openUrlAlert;\r\n        if (!url) return;\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        } else {\r\n            const newWindow = window.open();\r\n            newWindow.opener = null;\r\n            newWindow.location = url;\r\n        }\r\n    };\r\n\r\n    handleOpenGameContinue = (event, result) => {\r\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\r\n\r\n        this.setState({ openGameAlert: null });\r\n        this.openGameAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { game, params } = openGameAlert;\r\n        if (!game) return;\r\n        if (!params) return;\r\n\r\n        const { url, message } = params;\r\n        if (!url) return;\r\n        if (!message) return;\r\n\r\n        openGameInBrowser(url, message);\r\n    };\r\n\r\n    handleRequestUrlContinue = async (event, open, values) => {\r\n        const { requestUrlAlert } = this.state;\r\n        this.setState({ requestUrlAlert: null });\r\n\r\n        if (!open) return;\r\n\r\n        const { params } = requestUrlAlert;\r\n        if (!params) return;\r\n\r\n        const { result, chatId, messageId, buttonId } = params;\r\n        if (!result) return;\r\n\r\n        if (!values.value1) {\r\n            this.openUrlAlert = { url: result.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        } else {\r\n            const httpUrl = await TdLibController.send({\r\n                '@type': 'getLoginUrl',\r\n                chat_id: chatId,\r\n                message_id: messageId,\r\n                button_id: buttonId,\r\n                allow_write_access: result.request_write_access && values.value2\r\n            });\r\n\r\n            this.openUrlAlert = { url: httpUrl.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        }\r\n    };\r\n\r\n    handleInputPasswordContinue = (result, password) => {\r\n        const { inputPasswordAlert } = this.state;\r\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\r\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\r\n\r\n        if (!result) {\r\n            onCloseDialog();\r\n            return;\r\n        }\r\n\r\n        const { onPassword } = inputPasswordAlert;\r\n        onPassword && onPassword(password, onCloseDialog, onError);\r\n    };\r\n\r\n    handleBlockSenderContinue = async (result, params) => {\r\n        const { requestBlockSenderAlert } = this.state;\r\n\r\n        this.setState({ requestBlockSenderAlert: null });\r\n\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        const { sender } = requestBlockSenderAlert;\r\n        if (!sender) return;\r\n\r\n        let chatId = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                blockSender(sender);\r\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                chatId = sender.chat_id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!params || params.reportSpam) {\r\n            const reason = getChatLocation(chatId)\r\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\r\n                : { '@type': 'chatReportReasonSpam' };\r\n\r\n            reportChat(chatId, reason);\r\n        }\r\n\r\n        if (!params || params.deleteChat) {\r\n            const deleteChat = canDeleteChat(chatId);\r\n            if (!deleteChat) return;\r\n\r\n            this.leaveChat = { chatId };\r\n            this.handleLeaveContinue(true, false);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            leaveChat,\r\n            clearHistory,\r\n            deleteMessages,\r\n            pinMessage,\r\n            unpinMessage,\r\n            alert,\r\n            openUrlAlert,\r\n            openGameAlert,\r\n            requestUrlAlert,\r\n            inputPasswordAlert,\r\n            requestBlockSenderAlert\r\n        } = this.state;\r\n        if (leaveChat) {\r\n            const { chatId } = leaveChat;\r\n\r\n            return (\r\n                <LeaveChatDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleLeaveContinue} />\r\n                );\r\n        } else if (clearHistory) {\r\n            const { chatId } = clearHistory;\r\n\r\n            return (\r\n                <ClearHistoryDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleClearHistoryContinue} />\r\n                );\r\n        } else if (deleteMessages) {\r\n            const { chatId, messageIds } = deleteMessages;\r\n\r\n            return (\r\n                <DeleteMessagesDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleDeleteMessagesContinue} />\r\n                );\r\n        } else if (pinMessage) {\r\n            const { chatId, messageId } = pinMessage;\r\n\r\n            return (\r\n                <PinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handlePinMessageContinue} />\r\n            );\r\n        } else if (unpinMessage) {\r\n            const { chatId, messageId } = unpinMessage;\r\n\r\n            return (\r\n                <UnpinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handleUnpinMessageContinue} />\r\n            );\r\n        } else if (alert) {\r\n            const { params } = alert;\r\n\r\n            return (\r\n                <AlertDialog\r\n                    params={params}\r\n                    onClose={this.handleAlertContinue} />\r\n            );\r\n        } else if (openUrlAlert) {\r\n            const { url, params } = openUrlAlert;\r\n\r\n            return (\r\n                <OpenUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleOpenUrlContinue}/>\r\n            );\r\n        } else if (openGameAlert) {\r\n            const { game, params } = openGameAlert;\r\n\r\n            return (\r\n                <OpenGameDialog\r\n                    game={game}\r\n                    params={params}\r\n                    onClose={this.handleOpenGameContinue}/>\r\n            );\r\n        } else if (requestUrlAlert) {\r\n            const { url, params } = requestUrlAlert;\r\n\r\n            return (\r\n                <RequestUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleRequestUrlContinue}/>\r\n            );\r\n        } else if (inputPasswordAlert) {\r\n            const { state, error } = inputPasswordAlert;\r\n\r\n            return (\r\n                <InputPasswordDialog\r\n                    state={state}\r\n                    error={error}\r\n                    onClose={this.handleInputPasswordContinue}/>\r\n            );\r\n        } else if (requestBlockSenderAlert) {\r\n            const { sender } = requestBlockSenderAlert;\r\n\r\n            return (\r\n                <BlockSenderDialog\r\n                    sender={sender}\r\n                    onClose={this.handleBlockSenderContinue}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Actions);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function openGameInBrowser(url, message) {\r\n    let sharedPreferences = {};\r\n    try {\r\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\r\n    } catch (e) { }\r\n\r\n    const existing = sharedPreferences['' + message.id];\r\n    let hash = existing ? existing : ''\r\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\r\n    if (!existing) {\r\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        const array = new Uint8Array(1);\r\n        for (let i = 0; i < 20; i++) {\r\n            window.crypto.getRandomValues(array)\r\n            hash += chars[array[0] % chars.length];\r\n        }\r\n\r\n        sharedPreferences['' + message.id] = hash;\r\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\r\n    }\r\n    addHash += hash;\r\n    const index = url.indexOf('#');\r\n    if (index < 0) {\r\n        url += '#' + addHash;\r\n    } else {\r\n        const curHash = url.substring(0, index + 1);\r\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\r\n            url += '&' + addHash;\r\n        } else {\r\n            if (curHash.length > 0) {\r\n                url += '?' + addHash;\r\n            } else {\r\n                url += addHash;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newWindow = window.open();\r\n    newWindow.opener = null;\r\n    newWindow.location = url;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport PipPlayer from './Player/PipPlayer';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport PlayerStore from '../Stores/PlayerStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\nimport Actions from './Actions'; \r\nimport { isAdmin } from '../Utils/Chat';  \r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            isSmallWidth,\r\n            forwardInfo: null,\r\n            instantViewContent: null,\r\n            videoInfo: null,\r\n            permissions:null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        TdLibController.on('update', this.onUpdateNewPermission); \r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        TdLibController.off('update', this.onUpdateNewPermission);\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.onGetPermission(nextProps.chatId);\r\n        this.onSetDocumentTitle();\r\n    }\r\n\r\n    onSetDocumentTitle = () =>{\r\n        let user = UserStore.get(UserStore.getMyId())  \r\n        if(user){\r\n            // let phone = user.phone_number;\r\n            // let newPhone = ''; \r\n            // if(phone.length >= 13){\r\n            //     newPhone = phone.slice(2);\r\n            // } \r\n            let title = \"GaGaChat Web \" + user.first_name + \" \" + user.last_name;   \r\n            document.title = title; \r\n        }  \r\n    }\r\n\r\n    onGetPermission = (getChatId) =>{ \r\n        if(!getChatId)\r\n            return;\r\n        let that = this;\r\n        //let chatId = 1073742002;   \r\n        const chatId1 = getChatId;  \r\n        let chatId = Math.abs(chatId1);\r\n        chatId = chatId.toString(); \r\n        chatId = chatId.slice(3); \r\n        chatId = parseInt(chatId); \r\n        let getAdmin = isAdmin(chatId1);\r\n        that.setState({admin:getAdmin});\r\n        TdLibController.send({\r\n        '@type': 'sendCustomRequest',\r\n        \"method\": \"chats.getBannedRightex\",\r\n        \"parameters\":JSON.stringify({\"chatId\": chatId})\r\n        })\r\n        .then(data => { \r\n            if(data.result){\r\n                let newResult = JSON.parse(data.result);  \r\n                 that.setState({permissions:newResult.data ? newResult.data:{}})   \r\n               \r\n            } \r\n        })\r\n        .catch(err => {  \r\n            console.log(\"err on get permissions\");\r\n        });  \r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n\r\n        this.setState({\r\n            videoInfo\r\n        });\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup, options } = update;\r\n        this.onGetPermission(chatId);\r\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update; \r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        const { mediaViewerContent } = AppStore;\r\n\r\n        this.setState({ mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        const { profileMediaViewerContent } = AppStore;\r\n\r\n        this.setState({ profileMediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    onUpdateNewPermission = update => { \r\n        switch (update['@type']) {\r\n         case'updateNewCustomEvent': { \r\n \r\n             let event =JSON.parse(update.event);\r\n             if(event.action === \"chats.rights.onUpdate\"){\r\n                let permissions = event.data;\r\n                this.setState({permissions:permissions})  \r\n             } \r\n         }\r\n         default:\r\n             break;\r\n         }\r\n     }\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false, options = {}) => {\r\n        const currentChatId = AppStore.getChatId();\r\n        const currentDialogChatId = AppStore.dialogChatId;\r\n        const currentMessageId = AppStore.getMessageId(); \r\n        if (popup) {\r\n            let gerPermissions = this.state.permissions;\r\n            let getAdmin = this.state.admin;\r\n            let isShow = false; \r\n            //获取群成员的扩展权限，判断群组是否限制可以查看个人信息等， \r\n            //并且判断当前用户是否为管理员，如果是管理员则无视权限随时可以看，如果不是管理员\r\n            //则需要根据群组权限 禁用查看个人信息、私聊等功能\r\n            if(getAdmin){\r\n                isShow = true;\r\n            }else{\r\n                if(gerPermissions){ \r\n                    if(gerPermissions.banWhisper || gerPermissions.banSendDmMention){\r\n                        isShow = false; \r\n                    } else{\r\n                        isShow = true;\r\n                    }\r\n                }\r\n            } \r\n            if (currentDialogChatId !== chatId && isShow === true) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId, options);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {  \r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n       \r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo,\r\n            videoInfo,\r\n            isSmallWidth\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-small': isSmallWidth,\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                <Actions/>\r\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\r\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\r\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\r\n                {videoInfo && <PipPlayer {...videoInfo}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startInternal);\r\n    };\r\n\r\n    startInternal = timeStamp => {\r\n        const { startTime, duration } = this;\r\n\r\n        this.startTime = timeStamp;\r\n        this.endTime = startTime + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, startTime, options } = this;\r\n\r\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - startTime, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n"],"sourceRoot":""}